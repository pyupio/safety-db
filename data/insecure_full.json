{
    "acqusition": [
        {
            "advisory": "acqusition is a package affected by pytosquatting: http://www.nbu.gov.sk/skcsirt-sa-20170909-pypi/",
            "cve": null,
            "id": "pyup.io-34978",
            "specs": [
                ">0",
                "<0"
            ],
            "v": ">0,<0"
        }
    ],
    "aiocouchdb": [
        {
            "advisory": "aiocouchdb 0.6.0 now correctly set members for database security.",
            "cve": null,
            "id": "pyup.io-25612",
            "specs": [
                "<0.6.0"
            ],
            "v": "<0.6.0"
        }
    ],
    "aiohttp": [
        {
            "advisory": "aiohttp 0.16.3 fixes a StaticRoute vulnerability to directory traversal attacks.",
            "cve": null,
            "id": "pyup.io-25613",
            "specs": [
                "<0.16.3"
            ],
            "v": "<0.16.3"
        }
    ],
    "aiohttp-auth-autz": [
        {
            "advisory": "aiohttp-auth-autz before 0.2.0 isn't correctly checking the user_id in acl middleware, leading to a possible permission escalation.",
            "cve": null,
            "id": "pyup.io-32971",
            "specs": [
                "<0.2.0"
            ],
            "v": "<0.2.0"
        }
    ],
    "aldryn-django": [
        {
            "advisory": "aldryn-django 1.8.10.1 uses an insecure Django release, 1.8.9.",
            "cve": null,
            "id": "pyup.io-25614",
            "specs": [
                "<1.8.10.1"
            ],
            "v": "<1.8.10.1"
        },
        {
            "advisory": "aldryn-django before 1.8.18.1 uses an insecure Django release (Django <1.8.18).",
            "cve": null,
            "id": "pyup.io-34512",
            "specs": [
                "<1.8.18.1"
            ],
            "v": "<1.8.18.1"
        }
    ],
    "annotator": [
        {
            "advisory": "annotator 0.11.2 fixes a bug that allowed authenticated users to overwrite annotations on which they did not have permissions.",
            "cve": null,
            "id": "pyup.io-25615",
            "specs": [
                "<0.11.2"
            ],
            "v": "<0.11.2"
        }
    ],
    "ansible": [
        {
            "advisory": "ansible 1.2.3 includes local security fixes for predictable file locations for ControlPersist and retry file paths on shared machines on operating systems without kernel symlink/hardlink protections.",
            "cve": null,
            "id": "pyup.io-25616",
            "specs": [
                "<1.2.3"
            ],
            "v": "<1.2.3"
        },
        {
            "advisory": "ansible 1.5.4 includes a security fix for safe_eval, which further hardens the checking of the evaluation function.",
            "cve": null,
            "id": "pyup.io-25617",
            "specs": [
                "<1.5.4"
            ],
            "v": "<1.5.4"
        },
        {
            "advisory": "ansible 1.5.5 includes a security fix for vault, to ensure the umask is set to a restrictive mode before creating/editing vault files.",
            "cve": null,
            "id": "pyup.io-25618",
            "specs": [
                "<1.5.5"
            ],
            "v": "<1.5.5"
        },
        {
            "advisory": "ansible includes 1.6.4 security updates related to evaluation of untrusted remote inputs.",
            "cve": null,
            "id": "pyup.io-25619",
            "specs": [
                "<1.6.4"
            ],
            "v": "<1.6.4"
        },
        {
            "advisory": "ansible 1.6.6 includes security updates to further protect against the incorrect execution of untrusted data.",
            "cve": null,
            "id": "pyup.io-25620",
            "specs": [
                "<1.6.6"
            ],
            "v": "<1.6.6"
        },
        {
            "advisory": "ansible 1.6.7 contains two security fixes:\r\n  * Strip lookup calls out of inventory variables and clean unsafe data\r\n    returned from lookup plugins (CVE-2014-4966)\r\n  * Make sure vars don't insert extra parameters into module args and prevent\r\n    duplicate params from superseding previous params (CVE-2014-4967)",
            "cve": "CVE-2014-4967",
            "id": "pyup.io-25621",
            "specs": [
                "<1.6.7"
            ],
            "v": "<1.6.7"
        },
        {
            "advisory": "ansible 1.7 contains two security fixes:\r\n- Prevent the use of lookups when using legacy \" \" syntax around variables and with_* loops.\r\n  - Remove relative paths in TAR-archived file names used by ansible-galaxy.",
            "cve": null,
            "id": "pyup.io-25622",
            "specs": [
                "<1.7"
            ],
            "v": "<1.7"
        },
        {
            "advisory": "ansible 1.7.1 contains a security fix to disallow specifying 'args:' as a string, which could allow the insertion of extra module parameters through variables.",
            "cve": null,
            "id": "pyup.io-25623",
            "specs": [
                "<1.7.1"
            ],
            "v": "<1.7.1"
        },
        {
            "advisory": "ansible 1.8.3 fixes a security bug related to the default permissions set on a temporary file created when using \"ansible-vault view <filename>\".",
            "cve": null,
            "id": "pyup.io-25624",
            "specs": [
                "<1.8.3"
            ],
            "v": "<1.8.3"
        },
        {
            "advisory": "Ansible before 1.9.2 does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.",
            "cve": "CVE-2015-3908",
            "id": "pyup.io-25625",
            "specs": [
                "<1.9.2"
            ],
            "v": "<1.9.2"
        },
        {
            "advisory": "The create_script function in the lxc_container module in Ansible before 1.9.6-1 and 2.x before 2.0.2.0 allows local users to write to arbitrary files or gain privileges via a symlink attack on (1) /opt/.lxc-attach-script, (2) the archived container in the archive_path directory, or the (3) lxc-attach-script.log or (4) lxc-attach-script.err files in the temporary directory.",
            "cve": "CVE-2016-3096",
            "id": "pyup.io-25626",
            "specs": [
                "<1.9.6"
            ],
            "v": "<1.9.6"
        },
        {
            "advisory": "The create_script function in the lxc_container module in Ansible before 1.9.6-1 and 2.x before 2.0.2.0 allows local users to write to arbitrary files or gain privileges via a symlink attack on (1) /opt/.lxc-attach-script, (2) the archived container in the archive_path directory, or the (3) lxc-attach-script.log or (4) lxc-attach-script.err files in the temporary directory.",
            "cve": "CVE-2016-3096",
            "id": "pyup.io-25627",
            "specs": [
                "<2.0.2"
            ],
            "v": "<2.0.2"
        },
        {
            "advisory": "ansible before 2.2.1 is vulnerable to arbitrary code execution. An attacker with control over a client system being managed by Ansible and the ability to send facts back to the Ansible server could use this flaw to execute arbitrary code on the Ansible server as the user and group Ansible is running as.",
            "cve": null,
            "id": "pyup.io-33286",
            "specs": [
                "<2.2.1"
            ],
            "v": "<2.2.1"
        },
        {
            "advisory": "ansible before 2.3.1 is vulnerable to CVE-2017-7481 - data for lookup plugins used as variables was not being correctly marked as \"unsafe\".",
            "cve": null,
            "id": "pyup.io-34941",
            "specs": [
                "<2.3.1"
            ],
            "v": "<2.3.1"
        }
    ],
    "ansible-vault": [
        {
            "advisory": "An exploitable vulnerability exists in the yaml loading functionality of ansible-vault before 1.0.5. A specially crafted vault can execute arbitrary python commands resulting in command execution. An attacker can insert python into the vault to trigger this vulnerability.",
            "cve": "CVE-2017-2809",
            "id": "pyup.io-35730",
            "specs": [
                "<1.0.5"
            ],
            "v": "<1.0.5"
        }
    ],
    "ansigenome": [
        {
            "advisory": "ansigenome before 0.6.0 uses yaml.load instead of yaml.safe_load, allowing a code execution vulnerability.",
            "cve": null,
            "id": "pyup.io-34505",
            "specs": [
                "<0.6.0"
            ],
            "v": "<0.6.0"
        }
    ],
    "apache-libcloud": [
        {
            "advisory": "Apache Libcloud before 0.11.1 uses an incorrect regular expression during verification of whether the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a crafted certificate.",
            "cve": "CVE-2012-3446",
            "id": "pyup.io-25628",
            "specs": [
                "<0.11.1"
            ],
            "v": "<0.11.1"
        },
        {
            "advisory": "Libcloud 0.12.3 through 0.13.2 does not set the scrub_data parameter for the destroy DigitalOcean API, which allows local users to obtain sensitive information by leveraging a new VM.",
            "cve": "CVE-2013-6480",
            "id": "pyup.io-25629",
            "specs": [
                "<0.13.3"
            ],
            "v": "<0.13.3"
        },
        {
            "advisory": "libcloud before 0.4.1 does not verify SSL certificates for HTTPS connections, which allows remote attackers to spoof certificates and bypass intended access restrictions via a man-in-the-middle (MITM) attack.",
            "cve": "CVE-2010-4340",
            "id": "pyup.io-35343",
            "specs": [
                "<0.4.1"
            ],
            "v": "<0.4.1"
        }
    ],
    "apidev-coop": [
        {
            "advisory": "apidev-coop is a package affected by pytosquatting: http://www.nbu.gov.sk/skcsirt-sa-20170909-pypi/",
            "cve": null,
            "id": "pyup.io-34979",
            "specs": [
                ">0",
                "<0"
            ],
            "v": ">0,<0"
        }
    ],
    "archmage": [
        {
            "advisory": "Directory traversal vulnerability in arCHMage 0.2.4 allows remote attackers to write to arbitrary files via a .. (dot dot) in a CHM file.",
            "cve": "CVE-2015-1589",
            "id": "pyup.io-25630",
            "specs": [
                "<0.3.1"
            ],
            "v": "<0.3.1"
        }
    ],
    "astropy": [
        {
            "advisory": "astropy 3.0.1 updates the bundled CFITSIO library to 3.430. This is to remedy a critical  security vulnerability that was identified by NASA.",
            "cve": null,
            "id": "pyup.io-35810",
            "specs": [
                "<3.0.1"
            ],
            "v": "<3.0.1"
        }
    ],
    "authbwc": [
        {
            "advisory": "authbwc 0.1.4 fixes an issue with the way the HTTP session user permissions were loaded.  This vulnerability made it possible for a user to gain the permissions of the user logged in previously.  The user would have had to be sharing the same http session for this access to have been gained.",
            "cve": null,
            "id": "pyup.io-25631",
            "specs": [
                "<0.1.4"
            ],
            "v": "<0.1.4"
        },
        {
            "advisory": "authbwc before 0.3.1 has a vulnerability in the password reset process that allowed users to log in when inactive.",
            "cve": null,
            "id": "pyup.io-34836",
            "specs": [
                "<0.3.1"
            ],
            "v": "<0.3.1"
        }
    ],
    "autobahn": [
        {
            "advisory": "In autobahn before 0.15.0 if the `allowedOrigins` websocket option was set, the resulting matching was insufficient and would allow more origins than intended.",
            "cve": null,
            "id": "pyup.io-25632",
            "specs": [
                "<0.15.0"
            ],
            "v": "<0.15.0"
        },
        {
            "advisory": "autobahn 0.6.4 fixes a security issue related to a WAMP-CRA timing attack very, very unlikely to be exploitable.",
            "cve": null,
            "id": "pyup.io-25633",
            "specs": [
                "<0.6.4"
            ],
            "v": "<0.6.4"
        }
    ],
    "avocado-framework": [
        {
            "advisory": "avocado-framework 0.17.0 fixes a temporary dir issue, that had potential security implications.",
            "cve": null,
            "id": "pyup.io-34679",
            "specs": [
                "<0.17.0"
            ],
            "v": "<0.17.0"
        }
    ],
    "awscli": [
        {
            "advisory": "awscli 1.11.83 fixes a possible security issue where files could be downloaded to a directory outside the destination directory if the key contained relative paths when downloading files recursively.",
            "cve": null,
            "id": "pyup.io-34627",
            "specs": [
                "<1.11.83"
            ],
            "v": "<1.11.83"
        }
    ],
    "bbcode": [
        {
            "advisory": "bbcode 1.0.9 escapes quotes correctly to prevent XSS.",
            "cve": null,
            "id": "pyup.io-25634",
            "specs": [
                "<1.0.9"
            ],
            "v": "<1.0.9"
        }
    ],
    "beaker": [
        {
            "advisory": "beaker 0.9.4 fixes security issue with Beaker not properly removing directory escaping characters from the session ID when un-signed sessions are used.",
            "cve": null,
            "id": "pyup.io-25635",
            "specs": [
                "<0.9.4"
            ],
            "v": "<0.9.4"
        },
        {
            "advisory": "Beaker before 1.6.4, when using PyCrypto to encrypt sessions, uses AES in ECB cipher mode, which might allow remote attackers to obtain portions of sensitive session data via unspecified vectors.",
            "cve": "CVE-2012-3458",
            "id": "pyup.io-25636",
            "specs": [
                "<1.6.4"
            ],
            "v": "<1.6.4"
        }
    ],
    "bepasty": [
        {
            "advisory": "bepasty 0.3.0 contains two security fixes:  \r\n- When showing potentially dangerous text/* types, force the\r\n  content-type to be text/plain and also turn the browser's sniffer off.\r\n- Prevent disclosure of locked item's metadata",
            "cve": null,
            "id": "pyup.io-25637",
            "specs": [
                "<0.3.0"
            ],
            "v": "<0.3.0"
        }
    ],
    "birdhousebuilder-recipe-nginx": [
        {
            "advisory": "birdhousebuilder-recipe-nginx  0.1.5 disables the use of SSLv3 (poodle attack).",
            "cve": null,
            "id": "pyup.io-36135",
            "specs": [
                "<0.1.5"
            ],
            "v": "<0.1.5"
        }
    ],
    "birdhousebuilder.recipe.nginx": [
        {
            "advisory": "birdhousebuilder.recipe.nginx 0.1.5 disabled SSLv3 due to the poodle attack.",
            "cve": null,
            "id": "pyup.io-25638",
            "specs": [
                "<0.1.5"
            ],
            "v": "<0.1.5"
        }
    ],
    "bise.theme": [
        {
            "advisory": "bise.theme 2.4 fixes a potential XSS issue with catalogue search.",
            "cve": null,
            "id": "pyup.io-25639",
            "specs": [
                "<2.4"
            ],
            "v": "<2.4"
        }
    ],
    "bjoern": [
        {
            "advisory": "bjoern before 1.4.2 uses a insecure Django release which is vulnerable to CVE-2015-0219, see https://www.djangoproject.com/weblog/2015/jan/13/security/.",
            "cve": null,
            "id": "pyup.io-25640",
            "specs": [
                "<1.4.2"
            ],
            "v": "<1.4.2"
        }
    ],
    "bleach": [
        {
            "advisory": "bleach 2.1 converts control characters (backspace particularly) to \"?\" preventing malicious copy-and-paste situations.",
            "cve": null,
            "id": "pyup.io-34965",
            "specs": [
                "<2.1"
            ],
            "v": "<2.1"
        },
        {
            "advisory": "bleach  2.1.3 fixes a security issue.  Attributes that have URI values weren't properly sanitized if the values contained character entities. Using character entities, it was possible to construct a URI value with a scheme that was not allowed that would slide through unsanitized.",
            "cve": null,
            "id": "pyup.io-35792",
            "specs": [
                ">=2.1,<2.1.3"
            ],
            "v": ">=2.1,<2.1.3"
        }
    ],
    "bodhi": [
        {
            "advisory": "bodhi 2.2.0 addresses CVE-2016-1000008 by disallowing the re-use of solved captchas. Additionally, the captcha is\r\nwarped to make it more difficult to solve through automation.\r\n\r\n- https://github.com/fedora-infra/bodhi/pull/857\r\n- https://github.com/fedora-infra/bodhi/commit/f0122855",
            "cve": null,
            "id": "pyup.io-34274",
            "specs": [
                "<2.2.0"
            ],
            "v": "<2.2.0"
        },
        {
            "advisory": "In bodhi before 2.9.1 it is possible to inject JavaScript into Bodhi's web interface through Bugzilla ticket subjects.",
            "cve": null,
            "id": "pyup.io-35208",
            "specs": [
                "<2.9.1"
            ],
            "v": "<2.9.1"
        }
    ],
    "bodhi-server": [
        {
            "advisory": "bodhi-server 2.2.0 addresses CVE-2016-1000008 by disallowing the re-use of solved captchas. Additionally, the captcha is\\r\\nwarped to make it more difficult to solve through automation.\\r\\n\\r\\n- https://github.com/fedora-infra/bodhi/pull/857\\r\\n- https://github.com/fedora-infra/bodhi/commit/f0122855",
            "cve": null,
            "id": "pyup.io-34241",
            "specs": [
                "<2.2.0"
            ],
            "v": "<2.2.0"
        }
    ],
    "bok-choy": [
        {
            "advisory": "bok-choy 0.5.1 contains a fix to XSS vulnerability in the auditing feature.",
            "cve": null,
            "id": "pyup.io-25641",
            "specs": [
                "<0.5.1"
            ],
            "v": "<0.5.1"
        }
    ],
    "bottle": [
        {
            "advisory": "redirect() in bottle.py in bottle 0.12.10 doesn't filter a \"\\r\\n\" sequence, which leads to a CRLF attack, as demonstrated by a redirect(\"233\\r\\nSet-Cookie: name=salt\") call.",
            "cve": "CVE-2016-9964",
            "id": "pyup.io-25642",
            "specs": [
                "<0.12.10"
            ],
            "v": "<0.12.10"
        },
        {
            "advisory": "Bottle 0.10.x before 0.10.12, 0.11.x before 0.11.7, and 0.12.x before 0.12.6 does not properly limit content types, which allows remote attackers to bypass intended access restrictions via an accepted Content-Type followed by a ; (semi-colon) and a Content-Type that would not be accepted, as demonstrated in YouCompleteMe to execute arbitrary code.",
            "cve": "CVE-2014-3137",
            "id": "pyup.io-35548",
            "specs": [
                ">=0.10,<0.10.12",
                ">=0.11,<0.11.7",
                ">=0.12,<0.12.6"
            ],
            "v": ">=0.10,<0.10.12,>=0.11,<0.11.7,>=0.12,<0.12.6"
        }
    ],
    "brasil.gov.portal": [
        {
            "advisory": "brasil.gov.portal before 1.5.1 uses Plone <4.3.15 which is vulnerable to several XSS and redirect flaws, and a sandbox escape.",
            "cve": null,
            "id": "pyup.io-35086",
            "specs": [
                "<1.5.1"
            ],
            "v": "<1.5.1"
        }
    ],
    "bzip": [
        {
            "advisory": "bzip  is a package affected by pytosquatting: http://www.nbu.gov.sk/skcsirt-sa-20170909-pypi/",
            "cve": null,
            "id": "pyup.io-34980",
            "specs": [
                ">0",
                "<0"
            ],
            "v": ">0,<0"
        }
    ],
    "cairosvg": [
        {
            "advisory": "cairosvg 1.0.21 is a security update. CairoSVG was vulnerable to XML eXternal Entity (XXE) attacks, this release fixes this vulnerability by not resolving the XML entities anymore. The ``--unsafe`` option has been added to force the resolution of XML entities. Obviously, this option is not safe and should only be used with trusted SVG files.",
            "cve": null,
            "id": "pyup.io-25643",
            "specs": [
                "<1.0.21"
            ],
            "v": "<1.0.21"
        }
    ],
    "cbapi": [
        {
            "advisory": "The underlying CbAPI connection class erroneously disabled hostname validation by default. This does *not* affect code that uses CbAPI through the public interfaces documented here; it only affects code that accesses the new  ``CbAPISessionAdapter`` class directly. This class was introduced in version 1.3.3. Regardless, it is strongly recommended that all users currently using 1.3.3 upgrade to 1.3.4.",
            "cve": null,
            "id": "pyup.io-34933",
            "specs": [
                ">=1.3.3,<1.3.4"
            ],
            "v": ">=1.3.3,<1.3.4"
        }
    ],
    "celery": [
        {
            "advisory": "Insecure default configuration The default accept_content setting was set to allow deserialization of pickled messages in Celery 4.0.0. The insecure default has been fixed in 4.0.1, and you can also configure the 4.0.0 version to explicitly only allow json serialized messages.",
            "cve": null,
            "id": "pyup.io-25646",
            "specs": [
                ">=4.0,<4.0.1"
            ],
            "v": ">=4.0,<4.0.1"
        }
    ],
    "centrifuge": [
        {
            "advisory": "centrifuge 0.3.8 includes a security fix! Please, upgrade to this version or disable access to `/dumps` location.",
            "cve": null,
            "id": "pyup.io-25647",
            "specs": [
                "<0.3.8"
            ],
            "v": "<0.3.8"
        }
    ],
    "cfscrape": [
        {
            "advisory": "An issue was discovered in cloudflare-scrape 1.6.6 through 1.7.1. A malicious website owner could craft a page that executes arbitrary Python code against any cfscrape user who scrapes that website. This is fixed in 1.8.0.",
            "cve": "CVE-2017-7235",
            "id": "pyup.io-35741",
            "specs": [
                ">=1.6.6,<1.7.1"
            ],
            "v": ">=1.6.6,<1.7.1"
        },
        {
            "advisory": "Please upgrade to 1.8.0 immediately.\r\n\r\nVersions 1.6.6 to 1.7.1 are vulnerable to code execution. If you are running a vulnerable version, a malicious website owner could craft a page which executes arbitrary Python code on the machine that runs this script. This can only occur if the website that the user attempts to scrape has specifically prepared a page to exploit vulnerable versions of cfscrape.",
            "cve": null,
            "id": "pyup.io-34275",
            "specs": [
                ">=1.6.6,<=1.8"
            ],
            "v": ">=1.6.6,<=1.8"
        }
    ],
    "chanjo-report": [
        {
            "advisory": "chanjo-report 2.4.0 removes a link to the \"index\" page from the report (security).",
            "cve": null,
            "id": "pyup.io-25648",
            "specs": [
                "<2.4.0"
            ],
            "v": "<2.4.0"
        }
    ],
    "cheetah": [
        {
            "advisory": "cheetah 0.9.17rc1 removeS the use of temp files for handling imports with dynamic compilation. This removes a whole slew of issues, including a temp file security issue.",
            "cve": null,
            "id": "pyup.io-25649",
            "specs": [
                "<0.9.17rc1"
            ],
            "v": "<0.9.17rc1"
        }
    ],
    "cherrymusic": [
        {
            "advisory": "Directory traversal vulnerability in Cherry Music before 0.36.0 allows remote authenticated users to read arbitrary files via the \"value\" parameter to \"download.\"",
            "cve": "CVE-2015-8309",
            "id": "pyup.io-25650",
            "specs": [
                "<0.36.0"
            ],
            "v": "<0.36.0"
        }
    ],
    "cinder": [
        {
            "advisory": "The OpenStack Nova (python-nova) package 1:2013.2.3-0 before 1:2013.2.3-0ubuntu1.2 and 1:2014.1-0 before 1:2014.1-0ubuntu1.2 and Openstack Cinder (python-cinder) package 1:2013.2.3-0 before 1:2013.2.3-0ubuntu1.1 and 1:2014.1-0 before 1:2014.1-0ubuntu1.1 for Ubuntu 13.10 and 14.04 LTS does not properly set the sudo configuration, which makes it easier for attackers to gain privileges by leveraging another vulnerability.",
            "cve": "CVE-2013-1068",
            "id": "pyup.io-25651",
            "specs": [
                "<2013.2.3"
            ],
            "v": "<2013.2.3"
        }
    ],
    "cipher.googlepam": [
        {
            "advisory": "In cipher.googlepam before 1.5.1 do not use the same cache key for all users. Previously when one user logged in successfully, others could not log in using their own passwords -- but the first user could now use her password to log in as anyone else.",
            "cve": null,
            "id": "pyup.io-25652",
            "specs": [
                "<1.5.1"
            ],
            "v": "<1.5.1"
        }
    ],
    "ckan": [
        {
            "advisory": "ckan 1.5.1 fixes a security issue affecting CKAN v1.5 and before.",
            "cve": null,
            "id": "pyup.io-34556",
            "specs": [
                "<1.5.1"
            ],
            "v": "<1.5.1"
        },
        {
            "advisory": "ckan 1.8.1 fixes possible XSS vulnerability on html input.",
            "cve": null,
            "id": "pyup.io-34558",
            "specs": [
                "<1.8.1"
            ],
            "v": "<1.8.1"
        }
    ],
    "clam": [
        {
            "advisory": "clam 0.9.10 contains security fixes, better protection against possible code injection.",
            "cve": null,
            "id": "pyup.io-25653",
            "specs": [
                "<0.9.10"
            ],
            "v": "<0.9.10"
        },
        {
            "advisory": "clam 0.9.11 contains unknown security fixes in dispatcher.",
            "cve": null,
            "id": "pyup.io-25654",
            "specs": [
                "<0.9.11"
            ],
            "v": "<0.9.11"
        }
    ],
    "clearsilver": [
        {
            "advisory": "Format string vulnerability in the p_cgi_error function in python/neo_cgi.c in the Python CGI Kit (neo_cgi) module for Clearsilver 0.10.5 and earlier allows remote attackers to cause a denial of service (crash) and possibly execute arbitrary code via format string specifiers that are not properly handled when creating CGI error messages using the cgi_error API function.",
            "cve": "CVE-2011-4357",
            "id": "pyup.io-25655",
            "specs": [
                "<0.10.5"
            ],
            "v": "<0.10.5"
        }
    ],
    "cloudinary": [
        {
            "advisory": "cloudinary before 1.0.21 is vulnerable to an XSS attack on cloudinary_cors.html.",
            "cve": null,
            "id": "pyup.io-34603",
            "specs": [
                "<1.0.21"
            ],
            "v": "<1.0.21"
        }
    ],
    "cmsplugin-filer": [
        {
            "advisory": "cmsplugin-filer 1.0.0 contains an unknown XSS fix.",
            "cve": null,
            "id": "pyup.io-25656",
            "specs": [
                "<1.0.0"
            ],
            "v": "<1.0.0"
        }
    ],
    "collective-contact-core": [
        {
            "advisory": "collective-contact-core before 1.10",
            "cve": null,
            "id": "pyup.io-36089",
            "specs": [
                "<1.10"
            ],
            "v": "<1.10"
        }
    ],
    "collective-noticeboard": [
        {
            "advisory": "collective-noticeboard before 0.7.1 has a security issue, anonymous users could modify notes positions.",
            "cve": null,
            "id": "pyup.io-35879",
            "specs": [
                "<0.7.1"
            ],
            "v": "<0.7.1"
        }
    ],
    "collective.contact.core": [
        {
            "advisory": "collective.contact.core 1.10 fixes a security issue related to AddContact.",
            "cve": null,
            "id": "pyup.io-25657",
            "specs": [
                "<1.10"
            ],
            "v": "<1.10"
        }
    ],
    "collective.documentviewer": [
        {
            "advisory": "collective.documentviewer 1.5.1 fixes a security issue on file resources.",
            "cve": null,
            "id": "pyup.io-25658",
            "specs": [
                "<1.5.1"
            ],
            "v": "<1.5.1"
        }
    ],
    "collective.js.datatables": [
        {
            "advisory": "collective.js.datatables 4.1.1 updates Datatables to 1.10.11, due to a XSS vulnerability in 1.10.4.",
            "cve": null,
            "id": "pyup.io-25659",
            "specs": [
                "<4.1.1"
            ],
            "v": "<4.1.1"
        }
    ],
    "collective.noticeboard": [
        {
            "advisory": "collective.noticeboard 0.7.1 fixes a security issue, anonymous users could modify notes positions.",
            "cve": null,
            "id": "pyup.io-25660",
            "specs": [
                "<0.7.1"
            ],
            "v": "<0.7.1"
        }
    ],
    "collective.portlet.twitter": [
        {
            "advisory": "collective.portlet.twitter 1.0b3 fixes a potential XSS (arbitrary injection) issue by escaping and quoting all attributes being set on the rendered portlet.",
            "cve": null,
            "id": "pyup.io-25661",
            "specs": [
                "<1.0b3"
            ],
            "v": "<1.0b3"
        }
    ],
    "collective.tablepage": [
        {
            "advisory": "collective.tablepage 0.3 fixes a security problem: data inside text cells were transformed to HTML without any check.",
            "cve": null,
            "id": "pyup.io-25664",
            "specs": [
                "<0.3"
            ],
            "v": "<0.3"
        }
    ],
    "collective.xmpp.chat": [
        {
            "advisory": "collective.xmpp.chat 0.3.1 updates convers.js to 0.6.3 which includes an important security fix.",
            "cve": null,
            "id": "pyup.io-25666",
            "specs": [
                "<0.3.1"
            ],
            "v": "<0.3.1"
        }
    ],
    "collins-client": [
        {
            "advisory": "Collins 2.1.0 has a very important security patch.\r\n\r\nCollins has a feature that allows you to [encrypt certain attributes](http://tumblr.github.io/collins/configuration.htmlfeatures) on every asset.  It also had a permission that restricted which users could read those encrypted tags.  It did NOT have a permission that restricted which users could modify encrypted tags.\r\n\r\n*It is strongly recommended that you upgrade to collins 2.1.0 if you are using the encrypted tags feature, as well as rotate any values stored in encrypted tags.*\r\n\r\nThe severity of this vulnerability depends heavily upon how you use collins in your infrastructure.  If you do not use the encrypted tags feature, you are not vulnerable to this problem.  If you do use the encrypted tags feature, you will need to explore your automation and consider how vulnerable you are.\r\n\r\nIf, for example, your infrastructure has automation that regularly sets the root password on servers to match a value that is in collins, an attacker without the ability to read the current password could set it to a value that they know, wait for the automation to change the password, and then gain root on a server.\r\n\r\nThis change is backwards compatible with collins v2.0.0, though once you upgrade it will stop any writes to encrypted tags by users that have not been granted `feature.canWriteEncryptedTags` permission.  We have also renamed `feature.canSeePasswords` to `feature.canSeeEncryptedTags`, but collins will continue to respect the value of `feature.canSeePasswords` if `feature.canSeeEncryptedTags` is not set.  Once `feature.canSeeEncryptedTags` is set, collins will ignore the value of `feature.canSeePasswords`.",
            "cve": null,
            "id": "pyup.io-25667",
            "specs": [
                "<2.1.0"
            ],
            "v": "<2.1.0"
        }
    ],
    "confidant": [
        {
            "advisory": "confidant 1.1.14 contains a security fix: While preparing for the 1.1 stable release Lyft found a KMS  authentication vulnerability in the unreleased 1.1 branch while performing an  audit of the code. The vulnerability was introduced while adding the scoped auth  key feature (for limiting authentication keys and services to specific AWS  accounts), where the key was not properly checked after decryption. This check is  an additional verification to add additional safety on-top of the IAM policy of  your KMS keys. If IAM policy allows users to use KMS keys without limits on  encryption context, a KMS key that wasn't intended to be used for auth, could be  used for auth.",
            "cve": null,
            "id": "pyup.io-25668",
            "specs": [
                "<1.1.14"
            ],
            "v": "<1.1.14"
        }
    ],
    "confire": [
        {
            "advisory": "An exploitable vulnerability exists in the YAML parsing functionality in config.py in Confire 0.2.0. Due to the user-specific configuration being loaded from \"~/.confire.yaml\" using the yaml.load function, a YAML parser can execute arbitrary Python commands resulting in command execution. An attacker can insert Python into loaded YAML to trigger this vulnerability.",
            "cve": "CVE-2017-16763",
            "id": "pyup.io-35721",
            "specs": [
                "<=0.2.0"
            ],
            "v": "<=0.2.0"
        }
    ],
    "conn-check": [
        {
            "advisory": "conn-check 1.0.18 ensures pyOpenSSL is always used instead of the ssl modules, see https://urllib3.readthedocs.org/en/latest/security.htmlpyopenssl.",
            "cve": null,
            "id": "pyup.io-25669",
            "specs": [
                "<1.0.18"
            ],
            "v": "<1.0.18"
        }
    ],
    "contestms": [
        {
            "advisory": "contestms 1.2.0 fixes several security bugs around an unsafe use of isolate. These won't be backported to 1.1, so make sure you update.",
            "cve": null,
            "id": "pyup.io-34249",
            "specs": [
                "<1.2.0"
            ],
            "v": "<1.2.0"
        }
    ],
    "cosmos-wfm": [
        {
            "advisory": "cosmos-wfm before 2.1.1 is vulnerable to an attack where malicious hackers can run arbitrary code if they have file system (even external mounts!)+network access on the machine running luigid (executed by the user that you run luigid with).",
            "cve": null,
            "id": "pyup.io-34181",
            "specs": [
                "<2.1.1"
            ],
            "v": "<2.1.1"
        }
    ],
    "coveralls": [
        {
            "advisory": "coveralls 0.1.1 removes repo_token from verbose output for security reasons.",
            "cve": null,
            "id": "pyup.io-25671",
            "specs": [
                "<0.1.1"
            ],
            "v": "<0.1.1"
        }
    ],
    "cplay-ng": [
        {
            "advisory": "cplay-ng 1.50 fixes insecure /tmp handling.",
            "cve": null,
            "id": "pyup.io-25672",
            "specs": [
                "<1.50"
            ],
            "v": "<1.50"
        }
    ],
    "creavel": [
        {
            "advisory": "creavel before 0.11.0 has a unspecified security issue and is vulnerable via unknown vectors.",
            "cve": null,
            "id": "pyup.io-25673",
            "specs": [
                "<0.11.0"
            ],
            "v": "<0.11.0"
        },
        {
            "advisory": "creavel 0.14.0 fixes jinja2 security by using SandboxedEnvironment.",
            "cve": null,
            "id": "pyup.io-25674",
            "specs": [
                "<0.14.0"
            ],
            "v": "<0.14.0"
        }
    ],
    "crossbar": [
        {
            "advisory": "In crossbar before 0.15.0 if the `allowedOrigins` websocket option was set, the resulting matching was insufficient and would allow more origins than intended.",
            "cve": null,
            "id": "pyup.io-25675",
            "specs": [
                "<0.15.0"
            ],
            "v": "<0.15.0"
        },
        {
            "advisory": "crossbar 0.6.4 fixes a WAMP-CRA timing attack very, very unlikely to be exploitable.",
            "cve": null,
            "id": "pyup.io-25676",
            "specs": [
                "<0.6.4"
            ],
            "v": "<0.6.4"
        }
    ],
    "crypt": [
        {
            "advisory": "crypt  is a package affected by pytosquatting: http://www.nbu.gov.sk/skcsirt-sa-20170909-pypi/",
            "cve": null,
            "id": "pyup.io-34981",
            "specs": [
                ">0",
                "<0"
            ],
            "v": ">0,<0"
        }
    ],
    "cryptacular": [
        {
            "advisory": "crypt_blowfish before 1.1, as used in PHP before 5.3.7 on certain platforms, PostgreSQL before 8.4.9, and other products, does not properly handle 8-bit characters, which makes it easier for context-dependent attackers to determine a cleartext password by leveraging knowledge of a password hash.",
            "cve": null,
            "id": "pyup.io-25677",
            "specs": [
                "<1.2"
            ],
            "v": "<1.2"
        }
    ],
    "cryptography": [
        {
            "advisory": "cryptography 0.9.1 fixes a double free in the OpenSSL backend when using DSA  to verify signatures. Note that this only affects PyPy 2.6.0 and (presently unreleased) CFFI versions greater than 1.1.0.",
            "cve": null,
            "id": "pyup.io-25678",
            "specs": [
                "<0.9.1"
            ],
            "v": "<0.9.1"
        },
        {
            "advisory": "The OpenSSL backend prior to 1.0.2 made extensive use  of assertions to check response codes where our tests could not trigger a  failure.  However, when Python is run with ``-O`` these asserts are optimized  away.  If a user ran Python with this flag and got an invalid response code  this could result in undefined behavior or worse. Accordingly, all response  checks from the OpenSSL backend have been converted from ``assert``  to a true function call. Credit **Emilia K\u00e4sper (Google Security Team)**  for the report.",
            "cve": null,
            "id": "pyup.io-25679",
            "specs": [
                "<1.0.2"
            ],
            "v": "<1.0.2"
        },
        {
            "advisory": "HKDF in cryptography before 1.5.2 returns an empty byte-string if used with a length less than algorithm.digest_size.",
            "cve": "CVE-2016-9243",
            "id": "pyup.io-25680",
            "specs": [
                "<1.5.3"
            ],
            "v": "<1.5.3"
        }
    ],
    "cryptography-vectors": [
        {
            "advisory": "cryptography-vectors 0.9.1 fixes a double free in the OpenSSL backend when using DSA to verify signatures. Note that this only affects PyPy 2.6.0 and (presently  unreleased) CFFI versions greater than 1.1.0.",
            "cve": null,
            "id": "pyup.io-25681",
            "specs": [
                "<0.9.1"
            ],
            "v": "<0.9.1"
        },
        {
            "advisory": "The OpenSSL backend prior to 1.0.2 made extensive use  of assertions to check response codes where our tests could not trigger a  failure.  However, when Python is run with ``-O`` these asserts are optimized  away.  If a user ran Python with this flag and got an invalid response code  this could result in undefined behavior or worse. Accordingly, all response  checks from the OpenSSL backend have been converted from ``assert``  to a true function call. Credit **Emilia K\u00e4sper (Google Security Team)**  for the report.",
            "cve": null,
            "id": "pyup.io-25682",
            "specs": [
                "<1.0.2"
            ],
            "v": "<1.0.2"
        },
        {
            "advisory": "HKDF in cryptography before 1.5.2 returns an empty byte-string if used with a length less than algorithm.digest_size.",
            "cve": "CVE-2016-9243",
            "id": "pyup.io-25683",
            "specs": [
                "<1.5.3"
            ],
            "v": "<1.5.3"
        }
    ],
    "cssutils": [
        {
            "advisory": "In cssutils before 0.9.6a2 comments added by ``cssutils.resolveImports`` only use the import rules' href and not the absolute href of the referenced sheets anymore (might have been a possible security hole when showing a full local path to a sheet in a combined but not minified sheet)",
            "cve": null,
            "id": "pyup.io-25684",
            "specs": [
                "<0.9.6a2"
            ],
            "v": "<0.9.6a2"
        }
    ],
    "cumin": [
        {
            "advisory": "Multiple cross-site scripting (XSS) vulnerabilities in Cumin before r5238 allow remote attackers to inject arbitrary web script or HTML via vectors involving (1) widgets or (2) pages.",
            "cve": "CVE-2012-1575",
            "id": "pyup.io-35357",
            "specs": [
                "<r5238"
            ],
            "v": "<r5238"
        }
    ],
    "dateable-chronos": [
        {
            "advisory": "dateable-chronos before 0.7.2 fixed a XSS vulnerability in the get_view_day method.",
            "cve": null,
            "id": "pyup.io-35988",
            "specs": [
                "<0.7.2"
            ],
            "v": "<0.7.2"
        }
    ],
    "dateable.chronos": [
        {
            "advisory": "dateable.chronos 0.7.2 fixes a XSS vulnerability in the get_view_day method.",
            "cve": null,
            "id": "pyup.io-25685",
            "specs": [
                "<0.7.2"
            ],
            "v": "<0.7.2"
        }
    ],
    "ddtrace": [
        {
            "advisory": "ddtrace  0.11.0 removes the `sql.query` tag from SQL spans, so that the content is properly obfuscated in the Agent. This security fix is required to prevent wrong data collection of reported SQL queries. This issue impacts only MySQL integrations and NOT `psycopg2` or `sqlalchemy` while using the PostgreSQL driver.",
            "cve": null,
            "id": "pyup.io-35790",
            "specs": [
                "<0.11.0"
            ],
            "v": "<0.11.0"
        }
    ],
    "defusedexpat": [
        {
            "advisory": "The XML libraries for Python 3.4, 3.3, 3.2, 3.1, 2.7, and 2.6, as used in OpenStack Keystone Essex, Folsom, and Grizzly; Compute (Nova) Essex and Folsom; Cinder Folsom; Django; and possibly other products allow remote attackers to cause a denial of service (resource consumption and crash) via an XML Entity Expansion (XEE) attack.",
            "cve": "CVE-2013-1664",
            "id": "pyup.io-33054",
            "specs": [
                "<0.3"
            ],
            "v": "<0.3"
        },
        {
            "advisory": "The XML libraries for Python 3.4, 3.3, 3.2, 3.1, 2.7, and 2.6, as used in OpenStack Keystone Essex and Folsom, Django, and possibly other products allow remote attackers to read arbitrary files via an XML external entity declaration in conjunction with an entity reference, aka an XML External Entity (XXE) attack.",
            "cve": "CVE-2013-1665",
            "id": "pyup.io-33055",
            "specs": [
                "<0.3"
            ],
            "v": "<0.3"
        }
    ],
    "defusedxml": [
        {
            "advisory": "The XML libraries for Python 3.4, 3.3, 3.2, 3.1, 2.7, and 2.6, as used in OpenStack Keystone Essex, Folsom, and Grizzly; Compute (Nova) Essex and Folsom; Cinder Folsom; Django; and possibly other products allow remote attackers to cause a denial of service (resource consumption and crash) via an XML Entity Expansion (XEE) attack.",
            "cve": "CVE-2013-1664",
            "id": "pyup.io-33056",
            "specs": [
                "<0.4"
            ],
            "v": "<0.4"
        },
        {
            "advisory": "The XML libraries for Python 3.4, 3.3, 3.2, 3.1, 2.7, and 2.6, as used in OpenStack Keystone Essex and Folsom, Django, and possibly other products allow remote attackers to read arbitrary files via an XML external entity declaration in conjunction with an entity reference, aka an XML External Entity (XXE) attack.",
            "cve": "CVE-2013-1665",
            "id": "pyup.io-33057",
            "specs": [
                "<0.4"
            ],
            "v": "<0.4"
        }
    ],
    "deis": [
        {
            "advisory": "deis before 1.3.1 has SSLv3 enabled which has known security issues. See CVE-2014-3566.",
            "cve": null,
            "id": "pyup.io-25691",
            "specs": [
                "<1.3.1"
            ],
            "v": "<1.3.1"
        }
    ],
    "djangae": [
        {
            "advisory": "djangae before 0.9.4 uses Django 1.7 which is no longer supported (EOL, with known security issues).",
            "cve": null,
            "id": "pyup.io-25693",
            "specs": [
                "<0.9.4"
            ],
            "v": "<0.9.4"
        }
    ],
    "django": [
        {
            "advisory": "The Admin media handler in core/servers/basehttp.py in Django 1.0 and 0.96 does not properly map URL requests to expected \"static media files,\" which allows remote attackers to conduct directory traversal attacks and read arbitrary files via a crafted URL.",
            "cve": "CVE-2009-2659",
            "id": "pyup.io-25694",
            "specs": [
                "<1.0"
            ],
            "v": "<1.0"
        },
        {
            "advisory": "Algorithmic complexity vulnerability in the forms library in Django 1.0 before 1.0.4 and 1.1 before 1.1.1 allows remote attackers to cause a denial of service (CPU consumption) via a crafted (1) EmailField (email address) or (2) URLField (URL) that triggers a large amount of backtracking in a regular expression.",
            "cve": "CVE-2009-3695",
            "id": "pyup.io-25695",
            "specs": [
                "<1.0.4",
                ">=1.1,<1.1.1"
            ],
            "v": "<1.0.4,>=1.1,<1.1.1"
        },
        {
            "advisory": "The administrative interface in django.contrib.admin in Django before 1.1.3, 1.2.x before 1.2.4, and 1.3.x before 1.3 beta 1 does not properly restrict use of the query string to perform certain object filtering, which allows remote authenticated users to obtain sensitive information via a series of requests containing regular expressions, as demonstrated by a created_by__password__regex parameter.",
            "cve": "CVE-2010-4534",
            "id": "pyup.io-33058",
            "specs": [
                "<1.1.3",
                ">=1.2,<1.2.4"
            ],
            "v": "<1.1.3,>=1.2,<1.2.4"
        },
        {
            "advisory": "The password reset functionality in django.contrib.auth in Django before 1.1.3, 1.2.x before 1.2.4, and 1.3.x before 1.3 beta 1 does not validate the length of a string representing a base36 timestamp, which allows remote attackers to cause a denial of service (resource consumption) via a URL that specifies a large base36 integer.",
            "cve": "CVE-2010-4535",
            "id": "pyup.io-33059",
            "specs": [
                "<1.1.3",
                ">=1.2,<1.2.4"
            ],
            "v": "<1.1.3,>=1.2,<1.2.4"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.",
            "cve": "CVE-2011-0697",
            "id": "pyup.io-33061",
            "specs": [
                "<1.1.4"
            ],
            "v": "<1.1.4"
        },
        {
            "advisory": "Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a \"combination of browser plugins and redirects,\" a related issue to CVE-2011-0447.",
            "cve": "CVE-2011-0696",
            "id": "pyup.io-33060",
            "specs": [
                "<1.1.4",
                ">=1.2,<1.2.5"
            ],
            "v": "<1.1.4,>=1.2,<1.2.5"
        },
        {
            "advisory": "Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",
            "cve": "CVE-2011-0698",
            "id": "pyup.io-33062",
            "specs": [
                "<1.1.4",
                ">=1.2,<1.2.5"
            ],
            "v": "<1.1.4,>=1.2,<1.2.5"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in Django 1.2.x before 1.2.2 allows remote attackers to inject arbitrary web script or HTML via a csrfmiddlewaretoken (aka csrf_token) cookie.",
            "cve": "CVE-2010-3082",
            "id": "pyup.io-25701",
            "specs": [
                "<1.2.2"
            ],
            "v": "<1.2.2"
        },
        {
            "advisory": "django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",
            "cve": "CVE-2011-4136",
            "id": "pyup.io-33063",
            "specs": [
                "<1.2.7",
                ">=1.3,<1.3.1"
            ],
            "v": "<1.2.7,>=1.3,<1.3.1"
        },
        {
            "advisory": "The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",
            "cve": "CVE-2011-4137",
            "id": "pyup.io-33064",
            "specs": [
                "<1.2.7",
                ">=1.3,<1.3.1"
            ],
            "v": "<1.2.7,>=1.3,<1.3.1"
        },
        {
            "advisory": "The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",
            "cve": "CVE-2011-4138",
            "id": "pyup.io-33065",
            "specs": [
                "<1.2.7",
                ">=1.3,<1.3.1"
            ],
            "v": "<1.2.7,>=1.3,<1.3.1"
        },
        {
            "advisory": "The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",
            "cve": "CVE-2011-4140",
            "id": "pyup.io-33066",
            "specs": [
                "<1.2.7",
                ">=1.3,<1.3.1"
            ],
            "v": "<1.2.7,>=1.3,<1.3.1"
        },
        {
            "advisory": "The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",
            "cve": "CVE-2012-3442",
            "id": "pyup.io-33067",
            "specs": [
                "<1.3.2",
                ">=1.4,<1.4.1"
            ],
            "v": "<1.3.2,>=1.4,<1.4.1"
        },
        {
            "advisory": "The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",
            "cve": "CVE-2012-3443",
            "id": "pyup.io-33068",
            "specs": [
                "<1.3.2",
                ">=1.4,<1.4.1"
            ],
            "v": "<1.3.2,>=1.4,<1.4.1"
        },
        {
            "advisory": "The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",
            "cve": "CVE-2012-3444",
            "id": "pyup.io-33069",
            "specs": [
                "<1.3.2",
                ">=1.4,<1.4.1"
            ],
            "v": "<1.3.2,>=1.4,<1.4.1"
        },
        {
            "advisory": "The django.http.HttpRequest.get_host function in Django 1.3.x before 1.3.4 and 1.4.x before 1.4.2 allows remote attackers to generate and display arbitrary URLs via crafted username and password Host header values.",
            "cve": "CVE-2012-4520",
            "id": "pyup.io-25709",
            "specs": [
                "<1.3.4",
                ">=1.4,<1.4.2"
            ],
            "v": "<1.3.4,>=1.4,<1.4.2"
        },
        {
            "advisory": "The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a \"\\njavascript:\" URL.",
            "cve": "CVE-2015-0220",
            "id": "pyup.io-33071",
            "specs": [
                "<1.4.18",
                ">=1.6,<1.6.10",
                ">=1.7,<1.7.3"
            ],
            "v": "<1.4.18,>=1.6,<1.6.10,>=1.7,<1.7.3"
        },
        {
            "advisory": "The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",
            "cve": "CVE-2015-0221",
            "id": "pyup.io-33072",
            "specs": [
                "<1.4.18",
                ">=1.6,<1.6.10",
                ">=1.7,<1.7.3"
            ],
            "v": "<1.4.18,>=1.6,<1.6.10,>=1.7,<1.7.3"
        },
        {
            "advisory": "Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",
            "cve": "CVE-2015-0219",
            "id": "pyup.io-33070",
            "specs": [
                "<1.4.18",
                ">=1.7,<1.7.3",
                ">=1.6,<1.6.10"
            ],
            "v": "<1.4.18,>=1.7,<1.7.3,>=1.6,<1.6.10"
        },
        {
            "advisory": "The password hasher in contrib/auth/hashers.py in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to enumerate users via a timing attack involving login requests.",
            "cve": "CVE-2016-2513",
            "id": "pyup.io-33074",
            "specs": [
                "<1.8.10",
                ">=1.9,<1.9.3"
            ],
            "v": "<1.8.10,>=1.9,<1.9.3"
        },
        {
            "advisory": "The utils.http.is_safe_url function in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks or possibly conduct cross-site scripting (XSS) attacks via a URL containing basic authentication, as demonstrated by http://mysite.example.com\\@attacker.com.",
            "cve": "CVE-2016-2512",
            "id": "pyup.io-33073",
            "specs": [
                "<1.8.10",
                ">=1.9,<1.9.3"
            ],
            "v": "<1.8.10,>=1.9,<1.9.3"
        },
        {
            "advisory": "Django 1.10.3 fixes two security issues and several bugs in 1.10.2.\r\n\r\nUser with hardcoded password created when running tests on Oracle\r\n=================================================================\r\n\r\nWhen running tests with an Oracle database, Django creates a temporary database\r\nuser. In older versions, if a password isn't manually specified in the database\r\nsettings ``TEST`` dictionary, a hardcoded password is used. This could allow\r\nan attacker with network access to the database server to connect.\r\n\r\nThis user is usually dropped after the test suite completes, but not when using\r\nthe ``manage.py test --keepdb`` option or if the user has an active session\r\n(such as an attacker's connection).\r\n\r\nA randomly generated password is now used for each test run.\r\n\r\nDNS rebinding vulnerability when ``DEBUG=True``\r\n===============================================",
            "cve": null,
            "id": "pyup.io-25722",
            "specs": [
                ">=1.10,<1.10.3"
            ],
            "v": ">=1.10,<1.10.3"
        },
        {
            "advisory": "CVE-2017-7233: Open redirect and possible XSS attack via user-supplied numeric redirect URLs\r\n============================================================================================\r\n\r\nDjango relies on user input in some cases  (e.g.\r\n:func:`django.contrib.auth.views.login` and :doc:`i18n </topics/i18n/index>`)\r\nto redirect the user to an \"on success\" URL. The security check for these\r\nredirects (namely ``django.utils.http.is_safe_url()``) considered some numeric\r\nURLs (e.g. ``http:999999999``) \"safe\" when they shouldn't be.\r\n\r\nAlso, if a developer relies on ``is_safe_url()`` to provide safe redirect\r\ntargets and puts such a URL into a link, they could suffer from an XSS attack.\r\n\r\nCVE-2017-7234: Open redirect vulnerability in ``django.views.static.serve()``\r\n=============================================================================\r\n\r\nA maliciously crafted URL to a Django site using the\r\n:func:`~django.views.static.serve` view could redirect to any other domain. The\r\nview no longer does any redirects as they don't provide any known, useful\r\nfunctionality.\r\n\r\nNote, however, that this view has always carried a warning that it is not\r\nhardened for production use and should be used only as a development aid.",
            "cve": null,
            "id": "pyup.io-33300",
            "specs": [
                ">=1.10,<1.10.7"
            ],
            "v": ">=1.10,<1.10.7"
        },
        {
            "advisory": "Django 1.10.8 fixes a security issue in 1.10.7.\r\n\r\nCVE-2017-12794: Possible XSS in traceback section of technical 500 debug page\r\n=============================================================================\r\n\r\nIn older versions, HTML autoescaping was disabled in a portion of the template\r\nfor the technical 500 debug page. Given the right circumstances, this allowed\r\na cross-site scripting attack. This vulnerability shouldn't affect most\r\nproduction sites since you shouldn't run with ``DEBUG = True`` (which makes\r\nthis page accessible) in your production settings.",
            "cve": null,
            "id": "pyup.io-34918",
            "specs": [
                ">=1.10,<1.10.8"
            ],
            "v": ">=1.10,<1.10.8"
        },
        {
            "advisory": "Django 1.11.5 fixes a security issue and several bugs in 1.11.4.\r\n\r\nCVE-2017-12794: Possible XSS in traceback section of technical 500 debug page\r\n=============================================================================\r\n\r\nIn older versions, HTML autoescaping was disabled in a portion of the template\r\nfor the technical 500 debug page. Given the right circumstances, this allowed\r\na cross-site scripting attack. This vulnerability shouldn't affect most\r\nproduction sites since you shouldn't run with ``DEBUG = True`` (which makes\r\nthis page accessible) in your production settings.",
            "cve": null,
            "id": "pyup.io-34917",
            "specs": [
                ">=1.11,<1.11.5"
            ],
            "v": ">=1.11,<1.11.5"
        },
        {
            "advisory": "CVE-2018-6188: Information leakage in ``AuthenticationForm``\r\n============================================================\r\n\r\nA regression in Django 1.11.8 made\r\n:class:`~django.contrib.auth.forms.AuthenticationForm` run its\r\n``confirm_login_allowed()`` method even if an incorrect password is entered.\r\nThis can leak information about a user, depending on what messages\r\n``confirm_login_allowed()`` raises. If ``confirm_login_allowed()`` isn't\r\noverridden, an attacker enter an arbitrary username and see if that user has\r\nbeen set to ``is_active=False``. If ``confirm_login_allowed()`` is overridden,\r\nmore sensitive details could be leaked.\r\n\r\nThis issue is fixed with the caveat that ``AuthenticationForm`` can no longer\r\nraise the \"This account is inactive.\" error if the authentication backend\r\nrejects inactive users (the default authentication backend, ``ModelBackend``,\r\nhas done that since Django 1.10). This issue will be revisited for Django 2.1\r\nas a fix to address the caveat will likely be too invasive for inclusion in\r\nolder versions.",
            "cve": null,
            "id": "pyup.io-35174",
            "specs": [
                ">=1.11.8,<1.11.10"
            ],
            "v": ">=1.11.8,<1.11.10"
        },
        {
            "advisory": "The administrative interface for Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 does not check permissions for the history view, which allows remote authenticated administrators to obtain sensitive object history information.",
            "cve": "CVE-2013-0305",
            "id": "pyup.io-33111",
            "specs": [
                ">=1.3,<1.3.6",
                ">=1.4,<1.4.4",
                ">=1.5,<1.5.1"
            ],
            "v": ">=1.3,<1.3.6,>=1.4,<1.4.4,>=1.5,<1.5.1"
        },
        {
            "advisory": "The form library in Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 allows remote attackers to bypass intended resource limits for formsets and cause a denial of service (memory consumption) or trigger server errors via a modified max_num parameter.",
            "cve": "CVE-2013-0306",
            "id": "pyup.io-33112",
            "specs": [
                ">=1.3,<1.3.6",
                ">=1.4,<1.4.4",
                ">=1.5,<1.5.1"
            ],
            "v": ">=1.3,<1.3.6,>=1.4,<1.4.4,>=1.5,<1.5.1"
        },
        {
            "advisory": "The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",
            "cve": "CVE-2015-5964",
            "id": "pyup.io-25728",
            "specs": [
                ">=1.4,<1.4.22",
                ">=1.7,<1.7.10"
            ],
            "v": ">=1.4,<1.4.22,>=1.7,<1.7.10"
        },
        {
            "advisory": "contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",
            "cve": "CVE-2015-5963",
            "id": "pyup.io-25727",
            "specs": [
                ">=1.4,<1.4.22",
                ">=1.7,<1.7.10",
                ">=1.8,<1.8.4"
            ],
            "v": ">=1.4,<1.4.22,>=1.7,<1.7.10,>=1.8,<1.8.4"
        },
        {
            "advisory": "The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",
            "cve": "CVE-2013-1443",
            "id": "pyup.io-25729",
            "specs": [
                ">=1.6,<1.6-beta-4",
                ">=1.4,<1.4.8",
                ">=1.5,<1.5.4"
            ],
            "v": ">=1.6,<1.6-beta-4,>=1.4,<1.4.8,>=1.5,<1.5.4"
        },
        {
            "advisory": "ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",
            "cve": "CVE-2015-0222",
            "id": "pyup.io-25730",
            "specs": [
                ">=1.7,<1.7.3",
                ">=1.6,<1.6.10"
            ],
            "v": ">=1.7,<1.7.3,>=1.6,<1.6.10"
        },
        {
            "advisory": "The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",
            "cve": "CVE-2015-2316",
            "id": "pyup.io-25731",
            "specs": [
                ">=1.7,<1.7.7",
                ">=1.8,<1.8c1",
                ">=1.6,<1.6.11"
            ],
            "v": ">=1.7,<1.7.7,>=1.8,<1.8c1,>=1.6,<1.6.11"
        },
        {
            "advisory": "The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",
            "cve": "CVE-2015-5143",
            "id": "pyup.io-25725",
            "specs": [
                ">=1.7,<1.7.9",
                ">=1.5,<1.7",
                ">=1.4,<1.4.21"
            ],
            "v": ">=1.7,<1.7.9,>=1.5,<1.7,>=1.4,<1.4.21"
        },
        {
            "advisory": "Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",
            "cve": "CVE-2016-9014",
            "id": "pyup.io-33075",
            "specs": [
                ">=1.8,<1.8.16",
                ">=1.9,<1.9.11",
                ">=1.10,<1.10.3"
            ],
            "v": ">=1.8,<1.8.16,>=1.9,<1.9.11,>=1.10,<1.10.3"
        },
        {
            "advisory": "Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",
            "cve": "CVE-2016-9013",
            "id": "pyup.io-33076",
            "specs": [
                ">=1.8,<1.8.16",
                ">=1.9,<1.9.11",
                ">=1.10,<1.10.3"
            ],
            "v": ">=1.8,<1.8.16,>=1.9,<1.9.11,>=1.10,<1.10.3"
        },
        {
            "advisory": "Django 1.8.18 fixes two security issues in 1.8.17.\r\n\r\nCVE-2017-7233: Open redirect and possible XSS attack via user-supplied numeric redirect URLs\r\n============================================================================================\r\n\r\nDjango relies on user input in some cases  (e.g.\r\n:func:`django.contrib.auth.views.login` and :doc:`i18n </topics/i18n/index>`)\r\nto redirect the user to an \"on success\" URL. The security check for these\r\nredirects (namely ``django.utils.http.is_safe_url()``) considered some numeric\r\nURLs (e.g. ``http:999999999``) \"safe\" when they shouldn't be.\r\n\r\nAlso, if a developer relies on ``is_safe_url()`` to provide safe redirect\r\ntargets and puts such a URL into a link, they could suffer from an XSS attack.\r\n\r\nCVE-2017-7234: Open redirect vulnerability in ``django.views.static.serve()``\r\n=============================================================================\r\n\r\nA maliciously crafted URL to a Django site using the\r\n:func:`~django.views.static.serve` view could redirect to any other domain. The\r\nview no longer does any redirects as they don't provide any known, useful\r\nfunctionality.\r\n\r\nNote, however, that this view has always carried a warning that it is not\r\nhardened for production use and should be used only as a development aid.",
            "cve": null,
            "id": "pyup.io-33301",
            "specs": [
                ">=1.8,<1.8.18"
            ],
            "v": ">=1.8,<1.8.18"
        },
        {
            "advisory": "The ``django.utils.html.urlize()`` function was extremely slow to evaluate\r\ncertain inputs due to a catastrophic backtracking vulnerability in a regular\r\nexpression. The ``urlize()`` function is used to implement the ``urlize`` and\r\n``urlizetrunc`` template filters, which were thus vulnerable.\r\n\r\nThe problematic regular expression is replaced with parsing logic that behaves\r\nsimilarly.",
            "cve": "CVE-2018-7536",
            "id": "pyup.io-35797",
            "specs": [
                ">=1.8,<1.8.19",
                ">=1.11,<1.11.11",
                ">=2.0,<2.0.3"
            ],
            "v": ">=1.8,<1.8.19,>=1.11,<1.11.11,>=2.0,<2.0.3"
        },
        {
            "advisory": "If ``django.utils.text.Truncator``'s ``chars()`` and ``words()`` methods were\r\npassed the ``html=True`` argument, they were extremely slow to evaluate certain\r\ninputs due to a catastrophic backtracking vulnerability in a regular\r\nexpression. The ``chars()`` and ``words()`` methods are used to implement the\r\n``truncatechars_html`` and ``truncatewords_html`` template filters, which were\r\nthus vulnerable.",
            "cve": "CVE-2018-7537",
            "id": "pyup.io-35796",
            "specs": [
                ">=1.8,<1.8.19",
                ">=1.11,<1.11.11",
                ">=2.0,<2.0.3"
            ],
            "v": ">=1.8,<1.8.19,>=1.11,<1.11.11,>=2.0,<2.0.3"
        },
        {
            "advisory": "The session.flush function in the cached_db backend in Django 1.8.x before 1.8.2 does not properly flush the session, which allows remote attackers to hijack user sessions via an empty string in the session key.",
            "cve": "CVE-2015-3982",
            "id": "pyup.io-25732",
            "specs": [
                ">=1.8,<1.8.2"
            ],
            "v": ">=1.8,<1.8.2"
        },
        {
            "advisory": "validators.URLValidator in Django 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (CPU consumption) via unspecified vectors.",
            "cve": "CVE-2015-5145",
            "id": "pyup.io-25733",
            "specs": [
                ">=1.8,<1.8.3"
            ],
            "v": ">=1.8,<1.8.3"
        },
        {
            "advisory": "Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",
            "cve": "CVE-2015-5144",
            "id": "pyup.io-25726",
            "specs": [
                ">=1.8,<1.8.3",
                ">=1.7,<1.7.9",
                ">=1.5,<1.6",
                ">=1.4,<1.4.21"
            ],
            "v": ">=1.8,<1.8.3,>=1.7,<1.7.9,>=1.5,<1.6,>=1.4,<1.4.21"
        },
        {
            "advisory": "The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",
            "cve": "CVE-2015-8213",
            "id": "pyup.io-25714",
            "specs": [
                ">=1.8,<1.8.7",
                "<1.7.11",
                ">=1.9,<1.9rc2"
            ],
            "v": ">=1.8,<1.8.7,<1.7.11,>=1.9,<1.9rc2"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",
            "cve": "CVE-2015-2241",
            "id": "pyup.io-25715",
            "specs": [
                ">=1.8,<1.8b2",
                "<1.7.6"
            ],
            "v": ">=1.8,<1.8b2,<1.7.6"
        },
        {
            "advisory": "The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \\x08javascript: URL.",
            "cve": "CVE-2015-2317",
            "id": "pyup.io-25713",
            "specs": [
                ">=1.8,<1.8c1",
                "<1.4.20",
                ">=1.5,<1.6",
                ">=1.6,<1.6.11",
                ">=1.7,<1.7.7"
            ],
            "v": ">=1.8,<1.8c1,<1.4.20,>=1.5,<1.6,>=1.6,<1.6.11,>=1.7,<1.7.7"
        },
        {
            "advisory": "The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",
            "cve": "CVE-2016-7401",
            "id": "pyup.io-25718",
            "specs": [
                ">=1.9,<1.9.10",
                "<1.8.15"
            ],
            "v": ">=1.9,<1.9.10,<1.8.15"
        },
        {
            "advisory": "Django 1.9.11 fixes two security issues in 1.9.10.\r\n\r\nUser with hardcoded password created when running tests on Oracle\r\n=================================================================\r\n\r\nWhen running tests with an Oracle database, Django creates a temporary database\r\nuser. In older versions, if a password isn't manually specified in the database\r\nsettings ``TEST`` dictionary, a hardcoded password is used. This could allow\r\nan attacker with network access to the database server to connect.\r\n\r\nThis user is usually dropped after the test suite completes, but not when using\r\nthe ``manage.py test --keepdb`` option or if the user has an active session\r\n(such as an attacker's connection).\r\n\r\nA randomly generated password is now used for each test run.\r\n\r\nDNS rebinding vulnerability when ``DEBUG=True``\r\n===============================================",
            "cve": null,
            "id": "pyup.io-25734",
            "specs": [
                ">=1.9,<1.9.11"
            ],
            "v": ">=1.9,<1.9.11"
        },
        {
            "advisory": "Django 1.9.13 fixes two security issues and a bug in 1.9.12. This is the final\r\nrelease of the 1.9.x series.\r\n\r\nCVE-2017-7233: Open redirect and possible XSS attack via user-supplied numeric redirect URLs\r\n============================================================================================\r\n\r\nDjango relies on user input in some cases  (e.g.\r\n:func:`django.contrib.auth.views.login` and :doc:`i18n </topics/i18n/index>`)\r\nto redirect the user to an \"on success\" URL. The security check for these\r\nredirects (namely ``django.utils.http.is_safe_url()``) considered some numeric\r\nURLs (e.g. ``http:999999999``) \"safe\" when they shouldn't be.\r\n\r\nAlso, if a developer relies on ``is_safe_url()`` to provide safe redirect\r\ntargets and puts such a URL into a link, they could suffer from an XSS attack.\r\n\r\nCVE-2017-7234: Open redirect vulnerability in ``django.views.static.serve()``\r\n=============================================================================\r\n\r\nA maliciously crafted URL to a Django site using the\r\n:func:`~django.views.static.serve` view could redirect to any other domain. The\r\nview no longer does any redirects as they don't provide any known, useful\r\nfunctionality.\r\n\r\nNote, however, that this view has always carried a warning that it is not\r\nhardened for production use and should be used only as a development aid.",
            "cve": null,
            "id": "pyup.io-33302",
            "specs": [
                ">=1.9,<1.9.13"
            ],
            "v": ">=1.9,<1.9.13"
        },
        {
            "advisory": "Django 1.9.x before 1.9.2, when ModelAdmin.save_as is set to True, allows remote authenticated users to bypass intended access restrictions and create ModelAdmin objects via the \"Save as New\" option when editing objects and leveraging the \"change\" permission.",
            "cve": "CVE-2016-2048",
            "id": "pyup.io-25735",
            "specs": [
                ">=1.9,<1.9.2"
            ],
            "v": ">=1.9,<1.9.2"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",
            "cve": "CVE-2016-6186",
            "id": "pyup.io-25721",
            "specs": [
                ">=1.9,<1.9.8",
                "==1.8.14",
                ">=1.10,<1.10rc1"
            ],
            "v": ">=1.9,<1.9.8,==1.8.14,>=1.10,<1.10rc1"
        },
        {
            "advisory": "CVE-2018-6188: Information leakage in ``AuthenticationForm``\r\n============================================================\r\n\r\nA regression in Django 1.11.8 made\r\n:class:`~django.contrib.auth.forms.AuthenticationForm` run its\r\n``confirm_login_allowed()`` method even if an incorrect password is entered.\r\nThis can leak information about a user, depending on what messages\r\n``confirm_login_allowed()`` raises. If ``confirm_login_allowed()`` isn't\r\noverridden, an attacker enter an arbitrary username and see if that user has\r\nbeen set to ``is_active=False``. If ``confirm_login_allowed()`` is overridden,\r\nmore sensitive details could be leaked.\r\n\r\nThis issue is fixed with the caveat that ``AuthenticationForm`` can no longer\r\nraise the \"This account is inactive.\" error if the authentication backend\r\nrejects inactive users (the default authentication backend, ``ModelBackend``,\r\nhas done that since Django 1.10). This issue will be revisited for Django 2.1\r\nas a fix to address the caveat will likely be too invasive for inclusion in\r\nolder versions.",
            "cve": null,
            "id": "pyup.io-35173",
            "specs": [
                ">=2.0,<2.0.2"
            ],
            "v": ">=2.0,<2.0.2"
        }
    ],
    "django-access-tokens": [
        {
            "advisory": "django-access-tokens 0.9.2 fixes scoping of permissions where the token provides a smaller subset of the required permissions. As an extreme case, an access token granting no permissions could be used to access any permissions on the site.",
            "cve": null,
            "id": "pyup.io-25736",
            "specs": [
                "<0.9.2"
            ],
            "v": "<0.9.2"
        }
    ],
    "django-access-tokens-py3": [
        {
            "advisory": "Fixing scoping of permissions where the token provides a\r\nsmaller subset of the required permissions. As an extreme case, an access token\r\ngranting no permissions could be used to access any permissions on the site.",
            "cve": null,
            "id": "pyup.io-34892",
            "specs": [
                "<0.9.2"
            ],
            "v": "<0.9.2"
        }
    ],
    "django-allauth": [
        {
            "advisory": "django-allauth before 0.28.0 previous versions contained a vulnerability allowing an attacker to alter the provider specific settings for ``SCOPE`` and/or ``AUTH_PARAMS`` (part of the  larger ``SOCIALACCOUNT_PROVIDERS`` setting). The changes would persist across subsequent requests for all users, provided these settings were explicitly set within your project. These settings translate directly into request parameters, giving the attacker undesirable control over the OAuth(2) handshake. You are not affected if you did not explicitly configure these settings.",
            "cve": null,
            "id": "pyup.io-25737",
            "specs": [
                "<0.28.0"
            ],
            "v": "<0.28.0"
        },
        {
            "advisory": "On django-allauth before 0.34.0 the \"Set Password\" view did not properly check whether or not the user already had a usable password set. This allowed an attacker to set the password without providing the current password, but only in case the attacker already gained control over the victim's session.",
            "cve": null,
            "id": "pyup.io-35034",
            "specs": [
                "<0.34.0"
            ],
            "v": "<0.34.0"
        }
    ],
    "django-anonymizer": [
        {
            "advisory": "Changed 'Anonymizer.attributes' to require every field to be listed.  This is deal with the common security problem when a model is updated, but the Anonymizer is not updated.",
            "cve": null,
            "id": "pyup.io-25738",
            "specs": [
                "<0.4"
            ],
            "v": "<0.4"
        }
    ],
    "django-anonymizer-compat": [
        {
            "advisory": "Changed 'Anonymizer.attributes' to require every field to be listed.  This is deal with the common security problem when a model is updated, but the Anonymizer is not updated.",
            "cve": null,
            "id": "pyup.io-25739",
            "specs": [
                "<0.4"
            ],
            "v": "<0.4"
        }
    ],
    "django-anymail": [
        {
            "advisory": "In django-anymail before 1.4 the webhook validation was vulnerable to a timing attack. An attacker could have used this to obtain the WEBHOOK_AUTHORIZATION shared secret, potentially allowing them to post fabricated or malicious email tracking events to the app.",
            "cve": "CVE-2018-6596",
            "id": "pyup.io-35178",
            "specs": [
                "<1.4"
            ],
            "v": "<1.4"
        },
        {
            "advisory": "In django-anymail v0.2\u2013v1.3 the WEBHOOK_AUTHORIZATION key might get leaked if DEBUG=True since it isn\u2019t sanitized properly.",
            "cve": null,
            "id": "pyup.io-35198",
            "specs": [
                ">=0.2,<1.4"
            ],
            "v": ">=0.2,<1.4"
        }
    ],
    "django-autocomplete-light": [
        {
            "advisory": "django-autocomplete-light before 2.3.0 when updating the queryset from outside the autocomplete class may lead to a security problem, ie. if you don't replicate filters you apply manually on the autocomplete object choices into choices_for_request() then a malicious user could see choices which they shouldn't by querying the autocomplete directly.",
            "cve": null,
            "id": "pyup.io-25740",
            "specs": [
                "<2.3.0"
            ],
            "v": "<2.3.0"
        }
    ],
    "django-basicauth": [
        {
            "advisory": "django-basicauth before 0.4.2 is vulnerable to undisclosed timing attacks.",
            "cve": null,
            "id": "pyup.io-35076",
            "specs": [
                "<0.4.2"
            ],
            "v": "<0.4.2"
        }
    ],
    "django-cms": [
        {
            "advisory": "django-cms 2.1.3 fixes a serious security issue in PlaceholderAdmin",
            "cve": null,
            "id": "pyup.io-25741",
            "specs": [
                "<2.1.3"
            ],
            "v": "<2.1.3"
        },
        {
            "advisory": "django-cms before 2.1.4 fixes a XSS issue in Text Plugins.",
            "cve": null,
            "id": "pyup.io-25742",
            "specs": [
                "<2.1.4"
            ],
            "v": "<2.1.4"
        },
        {
            "advisory": "django-cms 3.0.14 fixes an issue where privileged users could be tricked into performing actions without their knowledge via a CSRF vulnerability",
            "cve": null,
            "id": "pyup.io-25743",
            "specs": [
                "<3.0.14"
            ],
            "v": "<3.0.14"
        },
        {
            "advisory": "Cross-site request forgery (CSRF) vulnerability in django CMS before 3.0.14, 3.1.x before 3.1.1 allows remote attackers to manipulate privileged users into performing unknown actions via unspecified vectors.",
            "cve": "CVE-2015-5081",
            "id": "pyup.io-35628",
            "specs": [
                "<3.0.14",
                ">3.1,<3.1.1"
            ],
            "v": "<3.0.14,>3.1,<3.1.1"
        },
        {
            "advisory": "django-cms  3.2.4 addresses security vulnerabilities in the `render_model` template tag that could lead to escalation of privileges or other security issues. It also addresses a security vulnerability in the cms' usage of the messages framework. Furthermore it fixes security vulnerabilities in custom FormFields that could lead to escalation of privileges or other security issue",
            "cve": null,
            "id": "pyup.io-25746",
            "specs": [
                "<3.2.4"
            ],
            "v": "<3.2.4"
        },
        {
            "advisory": "django-cms 3.4.3 fixes a security vulnerability in the page redirect field which allowed users to insert JavaScript code and a vulnerability where the next parameter for the toolbar login was not sanitised and could point to another domain.",
            "cve": null,
            "id": "pyup.io-34226",
            "specs": [
                "<3.4.3"
            ],
            "v": "<3.4.3"
        }
    ],
    "django-cms-patched": [
        {
            "advisory": "django-cms-patched before 3.0.17 has security vulnerabilities in the `render_model` template tag that could\r\n  lead to escalation of privileges or other security issues.",
            "cve": null,
            "id": "pyup.io-34123",
            "specs": [
                "<3.0.17"
            ],
            "v": "<3.0.17"
        },
        {
            "advisory": "django-cms-patched 3.4.3 fixes a security vulnerability in the page redirect field which allowed users to insert JavaScript code.",
            "cve": null,
            "id": "pyup.io-34121",
            "specs": [
                "<3.4.3"
            ],
            "v": "<3.4.3"
        }
    ],
    "django-countries": [
        {
            "advisory": "django-countries 3.4 fixes a XSS escaping issue in CountrySelectWidget.",
            "cve": null,
            "id": "pyup.io-25747",
            "specs": [
                "<3.4"
            ],
            "v": "<3.4"
        }
    ],
    "django-crispy-forms": [
        {
            "advisory": "django-crispy-forms 1.1.4 contains a security fix: Thread safety fixes to `CrispyFieldNode` thanks to Paul Oswald. This avoids leaking information between requests in multithreaded WSGI servers.",
            "cve": null,
            "id": "pyup.io-25751",
            "specs": [
                "<1.1.4"
            ],
            "v": "<1.1.4"
        }
    ],
    "django-crispy-forms-ng": [
        {
            "advisory": "django-crispy-forms before 0.9.0 fixes a XSS bug thanks to Charlie Denton, see GH-98. Errors cannot be rendered safe, because field's input can be part of the error message, that would mean XSS.",
            "cve": null,
            "id": "pyup.io-25750",
            "specs": [
                "<0.9.0"
            ],
            "v": "<0.9.0"
        }
    ],
    "django-dajaxice-me": [
        {
            "advisory": "django-dajaxice-me  0.1.7 fixes the dajaxice callback model to improve security against XSS attacks.",
            "cve": null,
            "id": "pyup.io-25752",
            "specs": [
                "<0.1.7"
            ],
            "v": "<0.1.7"
        }
    ],
    "django-dajaxice-ng": [
        {
            "advisory": "django-dajaxice-ng  0.1.7 fixes the dajaxice callback model to improve security against XSS attacks.",
            "cve": null,
            "id": "pyup.io-25753",
            "specs": [
                "<0.1.7"
            ],
            "v": "<0.1.7"
        }
    ],
    "django-discord-bind": [
        {
            "advisory": "django-discord-bind  0.2.0 added state validation to prevent CSRF attacks.",
            "cve": null,
            "id": "pyup.io-25754",
            "specs": [
                "<0.2.0"
            ],
            "v": "<0.2.0"
        }
    ],
    "django-embed-video": [
        {
            "advisory": "django-embed-video  0.3 has a security fix: faked urls are treated as invalid.",
            "cve": null,
            "id": "pyup.io-25755",
            "specs": [
                "<0.3"
            ],
            "v": "<0.3"
        }
    ],
    "django-envelope": [
        {
            "advisory": "django-envelope  0.4.1 contains a security bugfix regarding initial form values.",
            "cve": null,
            "id": "pyup.io-25756",
            "specs": [
                "<0.4.1"
            ],
            "v": "<0.4.1"
        }
    ],
    "django-epiced": [
        {
            "advisory": "django-epiced before 0.3.0 does not escape HTML output by default.",
            "cve": null,
            "id": "pyup.io-34269",
            "specs": [
                "<0.3.0"
            ],
            "v": "<0.3.0"
        }
    ],
    "django-epiceditor": [
        {
            "advisory": "There is a cross-site scripting vulnerability in django-epiceditor 0.2.3 via crafted content in a form field.",
            "cve": "CVE-2017-6591",
            "id": "pyup.io-35735",
            "specs": [
                "<=0.2.3"
            ],
            "v": "<=0.2.3"
        }
    ],
    "django-fernet-fields": [
        {
            "advisory": "django-fernet-fields 0.3 removes DualField and HashField. The only cases where they are useful, they aren't secure.",
            "cve": null,
            "id": "pyup.io-25757",
            "specs": [
                "<0.3"
            ],
            "v": "<0.3"
        },
        {
            "advisory": "django-fernet-fields before 0.3 has DualField and HashField. The only cases where they are useful, they aren't secure.",
            "cve": null,
            "id": "pyup.io-34331",
            "specs": [
                "<0.3"
            ],
            "v": "<0.3"
        }
    ],
    "django-fiber": [
        {
            "advisory": "django-fiber  0.9.9.1 contains a security bugfix: Changed permission check in API from IsAuthenticated to IsAdminUser",
            "cve": null,
            "id": "pyup.io-25758",
            "specs": [
                "<0.9.9.1"
            ],
            "v": "<0.9.9.1"
        }
    ],
    "django-filebrowser-no-grappelli-staff": [
        {
            "advisory": "django-filebrowser-no-grappelli-staff  3.4.2 fixes a XSS vulnerability with fb_tags.",
            "cve": null,
            "id": "pyup.io-25760",
            "specs": [
                "<3.4.2"
            ],
            "v": "<3.4.2"
        }
    ],
    "django-fluent-comments": [
        {
            "advisory": "django-fluent-comments  1.0.1 fixes security hash formatting errors on bad requests..",
            "cve": null,
            "id": "pyup.io-25761",
            "specs": [
                "<1.0.1"
            ],
            "v": "<1.0.1"
        }
    ],
    "django-friendship": [
        {
            "advisory": "django-friendship 1.2.0 fixes a security issue where the library was not checking the owner of a FriendRequest during accept and cancelation.",
            "cve": null,
            "id": "pyup.io-25762",
            "specs": [
                "<1.2.0"
            ],
            "v": "<1.2.0"
        }
    ],
    "django-guts": [
        {
            "advisory": "django-guts 0.1.1 fixes a security issue, allowing anyone to read any file.",
            "cve": null,
            "id": "pyup.io-25763",
            "specs": [
                "<0.1.1"
            ],
            "v": "<0.1.1"
        }
    ],
    "django-haystack": [
        {
            "advisory": "django-haystack 1.1 removes insecure use of ``eval`` from the Whoosh backend.",
            "cve": null,
            "id": "pyup.io-25764",
            "specs": [
                "<1.1"
            ],
            "v": "<1.1"
        }
    ],
    "django-hijack": [
        {
            "advisory": "django-hijack before 1.0.7 has a unspecified security issue and is vulnerable via unknown vectors.",
            "cve": null,
            "id": "pyup.io-25765",
            "specs": [
                "<1.0.7"
            ],
            "v": "<1.0.7"
        }
    ],
    "django-html5-appcache": [
        {
            "advisory": "django-html5-appcache 0.3.0 added a security check for sensitive views.",
            "cve": null,
            "id": "pyup.io-25766",
            "specs": [
                "<0.3.0"
            ],
            "v": "<0.3.0"
        }
    ],
    "django-initial-avatars": [
        {
            "advisory": "django-initial-avatars before 0.4 has a unspecified security issue and is vulnerable via unknown vectors.",
            "cve": null,
            "id": "pyup.io-25767",
            "specs": [
                "<0.4"
            ],
            "v": "<0.4"
        },
        {
            "advisory": "django-initial-avatars before 0.5.0 has a unspecified security issue and is vulnerable via unknown vectors.",
            "cve": null,
            "id": "pyup.io-25768",
            "specs": [
                "<0.5.0"
            ],
            "v": "<0.5.0"
        }
    ],
    "django-jet": [
        {
            "advisory": "django-jet 1.0.4 fixes a security issue with accessing model_lookup_view (when using RelatedFieldAjaxListFilter) without permissions.",
            "cve": null,
            "id": "pyup.io-25769",
            "specs": [
                "<1.0.4"
            ],
            "v": "<1.0.4"
        }
    ],
    "django-lazysignup": [
        {
            "advisory": "django-lazysignup before 0.4.0 fixes a security issue: Generated usernames are now based on the session key, rather than actually being the session key. This is to avoid a potential security issue where an app might simply display a username, giving away a significant part of the user's session key. The username is now generated from a SHA1 hash of the session key. This change means that existing generated users will become invalid.",
            "cve": null,
            "id": "pyup.io-25770",
            "specs": [
                "<0.4.0"
            ],
            "v": "<0.4.0"
        }
    ],
    "django-lazysignup-redux": [
        {
            "advisory": "django-lazysignup-redux 0.4.0 fixes a security issue: Generated usernames are now based on the session key, rather than actually being the session key. This is to avoid a potential security issue where an app might simply display a username, giving away a significant part of the user's session key. The username is now generated from a SHA1 hash of the session key. This change means that existing generated users will become invalid.",
            "cve": null,
            "id": "pyup.io-25771",
            "specs": [
                "<0.4.0"
            ],
            "v": "<0.4.0"
        }
    ],
    "django-lfs": [
        {
            "advisory": "django-lfs before 0.6.9 has a unspecified security issue and is vulnerable via unknown vectors.",
            "cve": null,
            "id": "pyup.io-25772",
            "specs": [
                "<0.6.9"
            ],
            "v": "<0.6.9"
        }
    ],
    "django-make-app": [
        {
            "advisory": "An exploitable vulnerability exists in the YAML parsing functionality in the read_yaml_file method in io_utils.py in django_make_app 0.1.3. A YAML parser can execute arbitrary Python commands resulting in command execution. An attacker can insert Python into loaded YAML to trigger this vulnerability.",
            "cve": "CVE-2017-16764",
            "id": "pyup.io-35722",
            "specs": [
                "<0.1.3"
            ],
            "v": "<0.1.3"
        }
    ],
    "django-markupfield": [
        {
            "advisory": "django-markupfield before 1.3.2 uses the default docutils RESTRUCTUREDTEXT_FILTER_SETTINGS settings, which allows remote attackers to include and read arbitrary files via unspecified vectors.",
            "cve": "CVE-2015-0846",
            "id": "pyup.io-25773",
            "specs": [
                "<1.3.2"
            ],
            "v": "<1.3.2"
        },
        {
            "advisory": "django-markupfield before 1.3.2 uses the default docutils RESTRUCTUREDTEXT_FILTER_SETTINGS settings, which allows remote attackers to include and read arbitrary files via unspecified vectors.",
            "cve": "CVE-2015-0846",
            "id": "pyup.io-25774",
            "specs": [
                "<1.3.3"
            ],
            "v": "<1.3.3"
        }
    ],
    "django-material": [
        {
            "advisory": "django-material 0.9.0 fixes a XSS vulnerability in input fields.",
            "cve": null,
            "id": "pyup.io-25775",
            "specs": [
                "<0.9.0"
            ],
            "v": "<0.9.0"
        }
    ],
    "django-material-orange": [
        {
            "advisory": "django-material-orange before 0.9.0 has a XSS vulnerability in input fields.",
            "cve": null,
            "id": "pyup.io-32207",
            "specs": [
                "<0.9.0"
            ],
            "v": "<0.9.0"
        }
    ],
    "django-material-saldoo": [
        {
            "advisory": "django-material-saldoo before 0.9.0 has a XSS vulnerability in input fields.",
            "cve": null,
            "id": "pyup.io-32243",
            "specs": [
                "<0.9.0"
            ],
            "v": "<0.9.0"
        }
    ],
    "django-modern-rpc": [
        {
            "advisory": "django-modern-rpc before 0.8.1 isn't correctly checking the authentication backend when executing 'system.multicall()'.",
            "cve": null,
            "id": "pyup.io-34991",
            "specs": [
                "<0.8.1"
            ],
            "v": "<0.8.1"
        }
    ],
    "django-ninecms": [
        {
            "advisory": "django-ninecms before 0.4.5b has a unknown security issue in its url configuration.",
            "cve": null,
            "id": "pyup.io-25776",
            "specs": [
                "<0.4.5b"
            ],
            "v": "<0.4.5b"
        }
    ],
    "django-piston": [
        {
            "advisory": "emitters.py in Django Piston before 0.2.3 and 0.2.x before 0.2.2.1 does not properly deserialize YAML data, which allows remote attackers to execute arbitrary Python code via vectors related to the yaml.load method.",
            "cve": "CVE-2011-4103",
            "id": "pyup.io-25777",
            "specs": [
                "<0.2.3"
            ],
            "v": "<0.2.3"
        }
    ],
    "django-pluggable-filebrowser": [
        {
            "advisory": "django-pluggable-filebrowser 3.4.2 fixes a security bug: added staff_member_required decorator to the upload-function.",
            "cve": null,
            "id": "pyup.io-25778",
            "specs": [
                "<3.4.2"
            ],
            "v": "<3.4.2"
        }
    ],
    "django-python3-ldap": [
        {
            "advisory": "django-python3-ldap 0.9.5 fixes a security vulnerability where username and password could be transmitted in plain text before starting TLS.",
            "cve": null,
            "id": "pyup.io-25779",
            "specs": [
                "<0.9.5"
            ],
            "v": "<0.9.5"
        },
        {
            "advisory": "django-python3-ldap 0.9.8 fixes a security vulnerability allowing users to authenticate with a valid username but with an empty password if anonymous authentication is allowed on the LDAP server.",
            "cve": null,
            "id": "pyup.io-25780",
            "specs": [
                "<0.9.8"
            ],
            "v": "<0.9.8"
        }
    ],
    "django-rated": [
        {
            "advisory": "django-rated before 1.1.2 has a unspecified security issue and is vulnerable via unknown vectors.",
            "cve": null,
            "id": "pyup.io-25781",
            "specs": [
                "<1.1.2"
            ],
            "v": "<1.1.2"
        }
    ],
    "django-registration-redux": [
        {
            "advisory": "django-registration-redux before 1.7 leaks password reset tokens through the Referer header. For more info, see: https://github.com/macropin/django-registration/pull/268",
            "cve": null,
            "id": "pyup.io-35199",
            "specs": [
                "<1.7"
            ],
            "v": "<1.7"
        }
    ],
    "django-relatives": [
        {
            "advisory": "django-relatives before 0.3.0 is vulnerable to a unspecified XSS issue.",
            "cve": null,
            "id": "pyup.io-25782",
            "specs": [
                "<0.3.0"
            ],
            "v": "<0.3.0"
        }
    ],
    "django-revproxy": [
        {
            "advisory": "django-revproxy 0.9.6 fixes a security issue that allowed remote-user header injection.",
            "cve": null,
            "id": "pyup.io-25783",
            "specs": [
                "<0.9.6"
            ],
            "v": "<0.9.6"
        },
        {
            "advisory": "django-revproxy 0.9.7 fixes a security issue: when colon is present at URL path urljoin ignores the upstream and the request is redirected to the path itself allowing content injection.",
            "cve": null,
            "id": "pyup.io-25784",
            "specs": [
                "<0.9.7"
            ],
            "v": "<0.9.7"
        }
    ],
    "django-safedelete": [
        {
            "advisory": "django-safedelete 0.3.3 contains a security fix that prevents an XSS attack in the admin interface.",
            "cve": null,
            "id": "pyup.io-25785",
            "specs": [
                "<0.3.3"
            ],
            "v": "<0.3.3"
        }
    ],
    "django-secure-auth": [
        {
            "advisory": "django-secure-auth 1.1 includes undisclosed security fixes.",
            "cve": null,
            "id": "pyup.io-34185",
            "specs": [
                "<1.1"
            ],
            "v": "<1.1"
        }
    ],
    "django-select2": [
        {
            "advisory": "django-select2 5.7.0 contains a security fix that allows a `field_id` to only be used for the intended JSON endpoint.",
            "cve": null,
            "id": "pyup.io-25787",
            "specs": [
                "<5.7.0"
            ],
            "v": "<5.7.0"
        }
    ],
    "django-selectable": [
        {
            "advisory": "django-selectable 0.5.2 fixes a XSS flaw with lookup ``get_item_*`` methods.",
            "cve": null,
            "id": "pyup.io-25788",
            "specs": [
                "<0.5.2"
            ],
            "v": "<0.5.2"
        }
    ],
    "django-server": [
        {
            "advisory": "django-server is a package affected by pytosquatting: http://www.nbu.gov.sk/skcsirt-sa-20170909-pypi/",
            "cve": null,
            "id": "pyup.io-34982",
            "specs": [
                ">0",
                "<0"
            ],
            "v": ">0,<0"
        }
    ],
    "django-session-security": [
        {
            "advisory": "django-session-security  2.4.0 fixes a vulnerability when SESSION_EXPIRE_AT_BROWSER_CLOSE is off.",
            "cve": null,
            "id": "pyup.io-25789",
            "specs": [
                "<2.4.0"
            ],
            "v": "<2.4.0"
        }
    ],
    "django-smart-selects": [
        {
            "advisory": "django-smart-selects before 1.5.0 allowed anybody to list arbitrary objects by tweaking URL parameters. 1.5.0 adds checks to the views to ensure that queries return an HTTP 403 (Permission denied) for models that do not have smart_selects fields defined.",
            "cve": null,
            "id": "pyup.io-34234",
            "specs": [
                "<1.5.1"
            ],
            "v": "<1.5.1"
        }
    ],
    "django-social-auth": [
        {
            "advisory": "django-social-auth 0.7.2 fixes a security hole - redirects via the next param are now properly sanitized to disallow redirecting to  external hosts.",
            "cve": null,
            "id": "pyup.io-25790",
            "specs": [
                "<0.7.2"
            ],
            "v": "<0.7.2"
        }
    ],
    "django-social-auth3": [
        {
            "advisory": "django-social-auth3 0.7.2 fixes a security hole - redirects via the next param are now properly sanitized to disallow redirecting to  external hosts.",
            "cve": null,
            "id": "pyup.io-25791",
            "specs": [
                "<0.7.2"
            ],
            "v": "<0.7.2"
        }
    ],
    "django-sql-explorer": [
        {
            "advisory": "django-sql-explorer before 1.1.0 isn't escaping values from the database correctly, making it open for potential XSS-attacks.",
            "cve": null,
            "id": "pyup.io-33293",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "django-sticky-uploads": [
        {
            "advisory": "django-sticky-uploads 0.2.0 fixes a security issue related to client changing the upload url specified by the widget for the upload.",
            "cve": null,
            "id": "pyup.io-25793",
            "specs": [
                "<0.2.0"
            ],
            "v": "<0.2.0"
        }
    ],
    "django-tastypie": [
        {
            "advisory": "The from_yaml method in serializers.py in Django Tastypie before 0.9.10 does not properly deserialize YAML data, which allows remote attackers to execute arbitrary Python code via vectors related to the yaml.load method.",
            "cve": "CVE-2011-4104",
            "id": "pyup.io-25794",
            "specs": [
                "<0.9.10"
            ],
            "v": "<0.9.10"
        }
    ],
    "django-uni-form": [
        {
            "advisory": "django-uni-form  0.9.0 fixes a XSS security issue. Errors cannot be rendered safe, because field's input can be part of the error message, that would mean XSS.",
            "cve": null,
            "id": "pyup.io-25796",
            "specs": [
                "<0.9.0"
            ],
            "v": "<0.9.0"
        }
    ],
    "django-user-accounts": [
        {
            "advisory": "django-user-accounts before 2.0.2 has a potentional security issue with leaking password reset tokens through HTTP Referer header.",
            "cve": null,
            "id": "pyup.io-34774",
            "specs": [
                "<2.0.2"
            ],
            "v": "<2.0.2"
        }
    ],
    "django-watchman": [
        {
            "advisory": "django-watchman  0.10.0 improves security by keeping tokens out of logs.",
            "cve": null,
            "id": "pyup.io-25797",
            "specs": [
                "<0.10.0"
            ],
            "v": "<0.10.0"
        }
    ],
    "djangocms-highlightjs": [
        {
            "advisory": "djangocms-highlightjs before 0.3.1 has a unspecified security issue and is vulnerable via unknown vectors.",
            "cve": null,
            "id": "pyup.io-25798",
            "specs": [
                "<0.3.1"
            ],
            "v": "<0.3.1"
        }
    ],
    "djangorestframework": [
        {
            "advisory": "djangorestframework 2.2.1 fixes a security issue: Use `defusedxml` package to address XML parsing vulnerabilities.",
            "cve": null,
            "id": "pyup.io-25799",
            "specs": [
                "<2.2.1"
            ],
            "v": "<2.2.1"
        },
        {
            "advisory": "djangorestframework 2.3.12 fixes a security issue: `OrderingField` now only allows ordering on readable serializer fields, or on fields explicitly specified using `ordering_fields`. This prevents users being able to order by fields that are not visible in the API, and exploiting the ordering of sensitive data such as password hashes.",
            "cve": null,
            "id": "pyup.io-25800",
            "specs": [
                "<2.3.12"
            ],
            "v": "<2.3.12"
        },
        {
            "advisory": "djangorestframework 2.3.14 fixes a security issue: Escape request path when it is include as part of the login and logout links in the browsable API.",
            "cve": null,
            "id": "pyup.io-25801",
            "specs": [
                "<2.3.14"
            ],
            "v": "<2.3.14"
        },
        {
            "advisory": "djangorestframework 2.4.4 fixes a security issue: Escape URLs when replacing `format=` query parameter, as used in dropdown on `GET` button in browsable API to allow explicit selection of JSON vs HTML output.",
            "cve": null,
            "id": "pyup.io-25802",
            "specs": [
                "<2.4.4"
            ],
            "v": "<2.4.4"
        },
        {
            "advisory": "djangorestframework  2.4.5 fixes a security issue: Escape tab switching cookie name in browsable API. [Backported from 3.1.1]",
            "cve": null,
            "id": "pyup.io-25803",
            "specs": [
                "<2.4.5"
            ],
            "v": "<2.4.5"
        },
        {
            "advisory": "djangorestframework 3.1.1 fixes a security issue: : Escape tab switching cookie name in browsable API.",
            "cve": null,
            "id": "pyup.io-25804",
            "specs": [
                "<3.1.1"
            ],
            "v": "<3.1.1"
        }
    ],
    "djangorestframework-simplejwt": [
        {
            "advisory": "djangorestframework-simplejwt before 1.5 allowed `__getattr__` access to the underlying JWT through the `rest_framework_simplejwt.module.TokenUser` class.",
            "cve": null,
            "id": "pyup.io-34792",
            "specs": [
                "<1.5"
            ],
            "v": "<1.5"
        }
    ],
    "djblets": [
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in util/templatetags/djblets_js.py in Djblets before 0.7.30 and 0.8.x before 0.8.3 for Django, as used in Review Board, allows remote attackers to inject arbitrary web script or HTML via a JSON object, as demonstrated by the name field when changing a user name.",
            "cve": "CVE-2014-3994",
            "id": "pyup.io-35571",
            "specs": [
                "<0.8.3"
            ],
            "v": "<0.8.3"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in gravatars/templatetags/gravatars.py in Djblets before 0.7.30 and 0.8.x before 0.8.3 for Django allows remote attackers to inject arbitrary web script or HTML via a user display name.",
            "cve": "CVE-2014-3995",
            "id": "pyup.io-35572",
            "specs": [
                "<0.8.3"
            ],
            "v": "<0.8.3"
        }
    ],
    "djoser": [
        {
            "advisory": "djoser 0.7.0 fixes a security bug in djoser.views.UserView. (Missing more information)",
            "cve": null,
            "id": "pyup.io-34904",
            "specs": [
                "<0.7.0"
            ],
            "v": "<0.7.0"
        }
    ],
    "docker-registry": [
        {
            "advisory": "docker-registry 0.8.1 has security fixes (path traversing prevention and token validation).",
            "cve": null,
            "id": "pyup.io-25805",
            "specs": [
                "<0.8.1"
            ],
            "v": "<0.8.1"
        }
    ],
    "dpaste": [
        {
            "advisory": "dpaste 2.8 fixes a XSS bug where HTML tags were not properly escaped with the simple  ``code`` lexer.",
            "cve": null,
            "id": "pyup.io-25807",
            "specs": [
                "<2.8"
            ],
            "v": "<2.8"
        }
    ],
    "dplib": [
        {
            "advisory": "dplib 1.4 fixes some security issues and added support for mapchange and namechange events",
            "cve": null,
            "id": "pyup.io-35851",
            "specs": [
                "<1.4"
            ],
            "v": "<1.4"
        }
    ],
    "drf-tracking": [
        {
            "advisory": "drf-tracking before 1.3.0",
            "cve": null,
            "id": "pyup.io-34856",
            "specs": [
                "<1.3.0"
            ],
            "v": "<1.3.0"
        }
    ],
    "dulwich": [
        {
            "advisory": "Buffer overflow in the C implementation of the apply_delta function in _pack.c in Dulwich before 0.9.9 allows remote attackers to execute arbitrary code via a crafted pack file.",
            "cve": "CVE-2015-0838",
            "id": "pyup.io-25808",
            "specs": [
                "<0.9.920150320"
            ],
            "v": "<0.9.920150320"
        }
    ],
    "easy-install": [
        {
            "advisory": "easy_install in setuptools before 0.7 uses HTTP to retrieve packages from the PyPI repository, and does not perform integrity checks on package contents, which allows man-in-the-middle attackers to execute arbitrary code via a crafted response to the default use of the product.",
            "cve": "CVE-2013-1633",
            "id": "pyup.io-25809",
            "specs": [
                "<0.7"
            ],
            "v": "<0.7"
        },
        {
            "advisory": "easy_install in setuptools before 0.7 uses HTTP to retrieve packages from the PyPI repository, and does not perform integrity checks on package contents, which allows man-in-the-middle attackers to execute arbitrary code via a crafted response to the default use of the product.",
            "cve": null,
            "id": "pyup.io-33124",
            "specs": [
                "<0.7"
            ],
            "v": "<0.7"
        }
    ],
    "edrnsite.policy": [
        {
            "advisory": "Unspecified vulnerability in Plone 2.5 through 4.0, as used in Conga, luci, and possibly other products, allows remote attackers to obtain administrative access, read or create arbitrary content, and change the site skin via unknown vectors.",
            "cve": "CVE-2011-0720",
            "id": "pyup.io-25810",
            "specs": [
                "<1.0.5"
            ],
            "v": "<1.0.5"
        }
    ],
    "errbot": [
        {
            "advisory": "errbot 1.3.0 fixes a security issue: the plugin directory permissions were too lax.",
            "cve": null,
            "id": "pyup.io-25812",
            "specs": [
                "<1.3.0"
            ],
            "v": "<1.3.0"
        }
    ],
    "euphorie": [
        {
            "advisory": "euphorie 6.1 fixes a security issue: modify client to always check if a survey session belongs to the current user.",
            "cve": null,
            "id": "pyup.io-25813",
            "specs": [
                "<6.1"
            ],
            "v": "<6.1"
        }
    ],
    "eyed3": [
        {
            "advisory": "tag.py in eyeD3 (aka python-eyed3) 7.0.3, 0.6.18, and earlier for Python allows local users to modify arbitrary files via a symlink attack on a temporary file.",
            "cve": "CVE-2014-1934",
            "id": "pyup.io-35538",
            "specs": [
                "<0.6.18"
            ],
            "v": "<0.6.18"
        }
    ],
    "featureserver": [
        {
            "advisory": "featureserver before 1.06 allowed JSON callbacks.",
            "cve": null,
            "id": "pyup.io-25814",
            "specs": [
                "<1.06"
            ],
            "v": "<1.06"
        }
    ],
    "fedmsg": [
        {
            "advisory": "FedMsg 0.18.1 and older is vulnerable to a message validation flaw resulting in message validation not being enabled if configured to be on.",
            "cve": "CVE-2017-1000001",
            "id": "pyup.io-34879",
            "specs": [
                "<0.18.2"
            ],
            "v": "<0.18.2"
        }
    ],
    "feedparser": [
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in feedparser.py in Universal Feed Parser (aka feedparser or python-feedparser) before 5.0 allows remote attackers to inject arbitrary web script or HTML via vectors involving nested CDATA stanzas.",
            "cve": "CVE-2009-5065",
            "id": "pyup.io-25815",
            "specs": [
                "<5.0"
            ],
            "v": "<5.0"
        },
        {
            "advisory": "feedparser.py in Universal Feed Parser (aka feedparser or python-feedparser) before 5.0.1 allows remote attackers to cause a denial of service (application crash) via a malformed DOCTYPE declaration.",
            "cve": "CVE-2011-1156",
            "id": "pyup.io-33125",
            "specs": [
                "<5.0.1"
            ],
            "v": "<5.0.1"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in feedparser.py in Universal Feed Parser (aka feedparser or python-feedparser) 5.x before 5.0.1 allows remote attackers to inject arbitrary web script or HTML via malformed XML comments.",
            "cve": "CVE-2011-1157",
            "id": "pyup.io-33126",
            "specs": [
                "<5.0.1"
            ],
            "v": "<5.0.1"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in feedparser.py in Universal Feed Parser (aka feedparser or python-feedparser) 5.x before 5.0.1 allows remote attackers to inject arbitrary web script or HTML via an unexpected URI scheme, as demonstrated by a javascript: URI.",
            "cve": "CVE-2011-1158",
            "id": "pyup.io-33127",
            "specs": [
                "<5.0.1"
            ],
            "v": "<5.0.1"
        },
        {
            "advisory": "Universal Feed Parser (aka feedparser or python-feedparser) before 5.1.2 allows remote attackers to cause a denial of service (memory consumption) via a crafted XML ENTITY declaration in a non-ASCII encoded document.",
            "cve": "CVE-2012-2921",
            "id": "pyup.io-25819",
            "specs": [
                "<5.1.2"
            ],
            "v": "<5.1.2"
        }
    ],
    "flask": [
        {
            "advisory": "flask 0.6.1 fixes a security problem that allowed clients to download arbitrary files  if the host server was a windows based operating system and the client  uses backslashes to escape the directory the files where exposed from.",
            "cve": null,
            "id": "pyup.io-25820",
            "specs": [
                "<0.6.1"
            ],
            "v": "<0.6.1"
        }
    ],
    "flask-admin": [
        {
            "advisory": "flask-admin  1.3.0 fixes a XSS vulnerability in column_editable_list values.",
            "cve": null,
            "id": "pyup.io-25821",
            "specs": [
                "<1.3.0"
            ],
            "v": "<1.3.0"
        }
    ],
    "flask-async": [
        {
            "advisory": "flask-async  0.6.1 fixes a security problem that allowed clients to download arbitrary files  if the host server was a windows based operating system and the client  uses backslashes to escape the directory the files where exposed from.",
            "cve": null,
            "id": "pyup.io-25822",
            "specs": [
                "<0.6.1"
            ],
            "v": "<0.6.1"
        }
    ],
    "flask-images": [
        {
            "advisory": "flask-images 1.1.3 fixes 3 security bugs, each of which would allow for reading any image on disk.",
            "cve": null,
            "id": "pyup.io-25823",
            "specs": [
                "<1.1.3"
            ],
            "v": "<1.1.3"
        }
    ],
    "flask-micropub": [
        {
            "advisory": "flask-micropub 0.2.2 fixes a vulnerability; re-discover the authorization_endpoint and token_endpoint at each stage in the flow. Prevents a buggy or malicious authorization_endpoint from giving you credentials for another user's domain name.",
            "cve": null,
            "id": "pyup.io-25824",
            "specs": [
                "<0.2.2"
            ],
            "v": "<0.2.2"
        }
    ],
    "flask-oauthlib": [
        {
            "advisory": "flask-oauthlib before 0.9.1 improves on security. (Without further details).",
            "cve": null,
            "id": "pyup.io-25825",
            "specs": [
                "<0.9.1"
            ],
            "v": "<0.9.1"
        }
    ],
    "flask-oidc": [
        {
            "advisory": "flask-oidc version 0.1.2 and earlier is vulnerable to an open redirect",
            "cve": "CVE-2016-1000001",
            "id": "pyup.io-25826",
            "specs": [
                "<0.1.2"
            ],
            "v": "<0.1.2"
        }
    ],
    "flask-security-fork": [
        {
            "advisory": "flask-security-fork before 1.8.1 fixes a security bug when validating a confirmation token, also checks if the email that the token was created with matches the user's current email.",
            "cve": null,
            "id": "pyup.io-25827",
            "specs": [
                "<1.8.1"
            ],
            "v": "<1.8.1"
        }
    ],
    "flex": [
        {
            "advisory": "flex before 6.12.0 uses the unsafe `yaml.load` function to load YAML files, leading to an attack vector that allows remote code execution.",
            "cve": null,
            "id": "pyup.io-35155",
            "specs": [
                "<6.12.0"
            ],
            "v": "<6.12.0"
        }
    ],
    "foolscap": [
        {
            "advisory": "In foolscap before 0.7.0 the \"flappserver\" feature was found to have a vulnerability in the service-lookup code which, when combined with an attacker who has the ability to write files to a location where the flappserver process could read them, would allow that attacker to obtain control of the flappserver process.\r\n\r\nUsers who run flappservers should upgrade to 0.7.0, where this was fixed as part of 226.",
            "cve": null,
            "id": "pyup.io-25828",
            "specs": [
                "<0.7.0"
            ],
            "v": "<0.7.0"
        }
    ],
    "form-designer": [
        {
            "advisory": "form-designer 0.8 fixes an XSS vulnerability in the administration panel.",
            "cve": null,
            "id": "pyup.io-34711",
            "specs": [
                "<0.8"
            ],
            "v": "<0.8"
        }
    ],
    "formbar": [
        {
            "advisory": "formbar 0.9 fixes a potential code injection issue by removing the rule parsing out of formbar and use brabbel library for rule parsing and evaluation.",
            "cve": null,
            "id": "pyup.io-25829",
            "specs": [
                "<0.9"
            ],
            "v": "<0.9"
        }
    ],
    "formencode": [
        {
            "advisory": "schema.py in FormEncode for Python (python-formencode) 1.0 does not apply the chained_validators feature, which allows attackers to bypass intended access restrictions via unknown vectors.",
            "cve": "CVE-2008-6547",
            "id": "pyup.io-25830",
            "specs": [
                "<1.0"
            ],
            "v": "<1.0"
        }
    ],
    "fresco": [
        {
            "advisory": "In fresco after 0.5.5 user supplied data is no longer reflected in error messages raised from ``fresco.routeargs.RequestArg``. This fixes a potential XSS vulnerability affecting versions starting from 0.5.0.",
            "cve": null,
            "id": "pyup.io-35028",
            "specs": [
                ">=0.5.0",
                "<0.5.5"
            ],
            "v": ">=0.5.0,<0.5.5"
        }
    ],
    "ftw-dashboard-portlets-postit": [
        {
            "advisory": "ftw-dashboard-portlets-postit  1.3.4 fixes a security error, it was possible to add postit comment on a foreign dashboard if the userid an portlet id was known.",
            "cve": null,
            "id": "pyup.io-35933",
            "specs": [
                "<1.3.4"
            ],
            "v": "<1.3.4"
        }
    ],
    "ftw.dashboard.dragndrop": [
        {
            "advisory": "ftw.dashboard.dragndrop 1.5.1 includes several undisclosed security fixes.",
            "cve": null,
            "id": "pyup.io-25831",
            "specs": [
                "<1.5.1"
            ],
            "v": "<1.5.1"
        }
    ],
    "ftw.dashboard.portlets.postit": [
        {
            "advisory": "ftw.dashboard.portlets.postit 1.3.4 fixes a security error, it was possible to add postit comment on a foreign dashboard if the userid an portlet id was known.",
            "cve": null,
            "id": "pyup.io-25832",
            "specs": [
                "<1.3.4"
            ],
            "v": "<1.3.4"
        }
    ],
    "ftw.mail": [
        {
            "advisory": "ftw.mail 2.2.3 makes mail view XSS-save using the safe-html transform for the mail-body display.",
            "cve": null,
            "id": "pyup.io-25833",
            "specs": [
                "<2.2.3"
            ],
            "v": "<2.2.3"
        }
    ],
    "ftw.meeting": [
        {
            "advisory": "ftw.meeting before 1.4.1 isn't using safe-html-transform for textfields.",
            "cve": null,
            "id": "pyup.io-25834",
            "specs": [
                "<1.4.1"
            ],
            "v": "<1.4.1"
        }
    ],
    "ftw.permissionmanager": [
        {
            "advisory": "ftw.permissionmanager before 2.2.2 allowed users with view permission to access the advanced security features. Since it's possible to search for all users, which exposes all usernames and email addresses to anyone with view permission.",
            "cve": null,
            "id": "pyup.io-25835",
            "specs": [
                "<2.2.2"
            ],
            "v": "<2.2.2"
        }
    ],
    "futoin-cid": [
        {
            "advisory": "futoin-cid before 0.8.5 does not properly check components loading from the root directory when using os.path.join().",
            "cve": null,
            "id": "pyup.io-35184",
            "specs": [
                "<0.8.5"
            ],
            "v": "<0.8.5"
        }
    ],
    "gandi.cli": [
        {
            "advisory": "gandi.cli 0.10 includes two security related fixes: \r\n\r\n- validate server certificate using request as\r\n  xmlrpc transport.\r\n- Security: restrict configuration file rights to owner only.",
            "cve": null,
            "id": "pyup.io-25836",
            "specs": [
                "<0.10"
            ],
            "v": "<0.10"
        }
    ],
    "genshi": [
        {
            "advisory": "genshi 0.6.1 includes a security fix to enhance sanitizing of CSS in style attributes. Genshi's `HTMLSanitizer` disallows style attributes by default (this remains unchanged) and warns against such attacks in its documentation, but the provided CSS santizing is now less lacking (see GitHub issue 455).",
            "cve": null,
            "id": "pyup.io-34688",
            "specs": [
                "<0.6.1"
            ],
            "v": "<0.6.1"
        }
    ],
    "gevent": [
        {
            "advisory": "gevent 1.2a1 includes a security related fix. Errors logged by :class:`~gevent.pywsgi.WSGIHandler` no longer print the entire WSGI environment by default. This avoids  possible information disclosure vulnerabilities. Applications can also opt-in to a higher security level for the WSGI environment if they  choose and their frameworks support it. Originally reported  in :pr:`779` by sean-peters-au and changed in :pr:`781`.",
            "cve": null,
            "id": "pyup.io-25837",
            "specs": [
                "<1.2a1"
            ],
            "v": "<1.2a1"
        }
    ],
    "geventhttpclient": [
        {
            "advisory": "geventhttpclient 1.2.0 includes an undisclosed security fix related to SSL support.",
            "cve": null,
            "id": "pyup.io-25838",
            "specs": [
                "<1.2.0"
            ],
            "v": "<1.2.0"
        }
    ],
    "girder": [
        {
            "advisory": "girder 2.2.0 fixes an XSS vulnerability in girders human-readable web API output. This vulnerability was not present in girders normal web client, so users of the Girder web client would not have been affected.",
            "cve": null,
            "id": "pyup.io-34634",
            "specs": [
                "<2.2.0"
            ],
            "v": "<2.2.0"
        },
        {
            "advisory": "In girder 2.5.0 the default Girder server now binds to localhost by default instead of 0.0.0.0.",
            "cve": null,
            "id": "pyup.io-35831",
            "specs": [
                "<2.5.0"
            ],
            "v": "<2.5.0"
        }
    ],
    "gns3-gui": [
        {
            "advisory": "gns3-gui 1.5.1 fixes a security related bug to prevent client to send empty hostname.",
            "cve": null,
            "id": "pyup.io-25839",
            "specs": [
                "<1.5.1"
            ],
            "v": "<1.5.1"
        }
    ],
    "gnupg": [
        {
            "advisory": "python-gnupg before 0.3.5 allows context-dependent attackers to execute arbitrary commands via shell metacharacters in unspecified vectors.",
            "cve": "CVE-2013-7323",
            "id": "pyup.io-35493",
            "specs": [
                "<0.3.5"
            ],
            "v": "<0.3.5"
        },
        {
            "advisory": "The shell_quote function in python-gnupg 0.3.5 does not properly quote strings, which allows context-dependent attackers to execute arbitrary code via shell metacharacters in unspecified vectors, as demonstrated using \"$(\" command-substitution sequences, a different vulnerability than CVE-2014-1928.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-7323.",
            "cve": "CVE-2014-1927",
            "id": "pyup.io-35533",
            "specs": [
                "==0.3.5"
            ],
            "v": "==0.3.5"
        },
        {
            "advisory": "The shell_quote function in python-gnupg 0.3.5 does not properly escape characters, which allows context-dependent attackers to execute arbitrary code via shell metacharacters in unspecified vectors, as demonstrated using \"\\\" (backslash) characters to form multi-command sequences, a different vulnerability than CVE-2014-1927.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-7323.",
            "cve": "CVE-2014-1928",
            "id": "pyup.io-35534",
            "specs": [
                "==0.3.5"
            ],
            "v": "==0.3.5"
        },
        {
            "advisory": "python-gnupg 0.3.5 and 0.3.6 allows context-dependent attackers to have an unspecified impact via vectors related to \"option injection through positional arguments.\" NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-7323.",
            "cve": "CVE-2014-1929",
            "id": "pyup.io-35535",
            "specs": [
                "==0.3.5",
                "==0.3.6"
            ],
            "v": "==0.3.5,==0.3.6"
        }
    ],
    "google-appengine": [
        {
            "advisory": "Cross-site request forgery (CSRF) vulnerability in _ah/admin/interactive/execute (aka the Interactive Console) in the SDK Console (aka Admin Console) in the Google App Engine Python SDK before 1.5.4 allows remote attackers to hijack the authentication of administrators for requests that execute arbitrary Python code via the code parameter.",
            "cve": "CVE-2011-1364",
            "id": "pyup.io-33128",
            "specs": [
                "<1.5.4"
            ],
            "v": "<1.5.4"
        },
        {
            "advisory": "The FakeFile implementation in the sandbox environment in the Google App Engine Python SDK before 1.5.4 does not properly control the opening of files, which allows local users to bypass intended access restrictions and create arbitrary files via ALLOWED_MODES and ALLOWED_DIRS changes within the code parameter to _ah/admin/interactive/execute, a different vulnerability than CVE-2011-1364.",
            "cve": "CVE-2011-4211",
            "id": "pyup.io-33129",
            "specs": [
                "<1.5.4"
            ],
            "v": "<1.5.4"
        },
        {
            "advisory": "The sandbox environment in the Google App Engine Python SDK before 1.5.4 does not properly prevent os.popen calls, which allows local users to bypass intended access restrictions and execute arbitrary commands via a dev_appserver.RestrictedPathFunction._original_os reference within the code parameter to _ah/admin/interactive/execute, a different vulnerability than CVE-2011-1364.",
            "cve": "CVE-2011-4212",
            "id": "pyup.io-33130",
            "specs": [
                "<1.5.4"
            ],
            "v": "<1.5.4"
        },
        {
            "advisory": "The sandbox environment in the Google App Engine Python SDK before 1.5.4 does not properly prevent use of the os module, which allows local users to bypass intended access restrictions and execute arbitrary commands via a file_blob_storage.os reference within the code parameter to _ah/admin/interactive/execute, a different vulnerability than CVE-2011-1364.",
            "cve": "CVE-2011-4213",
            "id": "pyup.io-33131",
            "specs": [
                "<1.5.4"
            ],
            "v": "<1.5.4"
        }
    ],
    "holocron": [
        {
            "advisory": "holocron 0.2.0 fixed a security issue when content author may steal private data through content's meta header.",
            "cve": null,
            "id": "pyup.io-25844",
            "specs": [
                "<0.2.0"
            ],
            "v": "<0.2.0"
        }
    ],
    "homeassistant": [
        {
            "advisory": "homeassistant before 0.37 uses a weak random number generator to create access tokens for camera feeds which could be brute force attacked in 2.5 weeks",
            "cve": null,
            "id": "pyup.io-34222",
            "specs": [
                "<0.37"
            ],
            "v": "<0.37"
        }
    ],
    "hpack": [
        {
            "advisory": "A HTTP/2 implementation built using any version of the Python priority library prior to version 1.2.0 could be targeted by a malicious peer by having that peer assign priority information for every possible HTTP/2 stream ID. The priority tree would happily continue to store the priority information for each stream, and would therefore allocate unbounded amounts of memory. Attempting to actually use a tree like this would also cause extremely high CPU usage to maintain the tree.",
            "cve": "CVE-2016-6580",
            "id": "pyup.io-35679",
            "specs": [
                "<1.2.0"
            ],
            "v": "<1.2.0"
        },
        {
            "advisory": "A HTTP/2 implementation built using any version of the Python HPACK library between v1.0.0 and v2.2.0 could be targeted for a denial of service attack, specifically a so-called \"HPACK Bomb\" attack. This attack occurs when an attacker inserts a header field that is exactly the size of the HPACK dynamic header table into the dynamic header table. The attacker can then send a header block that is simply repeated requests to expand that field in the dynamic table. This can lead to a gigantic compression ratio of 4,096 or better, meaning that 16kB of data can decompress to 64MB of data on the target machine.",
            "cve": "CVE-2016-6581",
            "id": "pyup.io-35680",
            "specs": [
                "<2.3.0"
            ],
            "v": "<2.3.0"
        }
    ],
    "html5": [
        {
            "advisory": "html5 before 0.99999999 is vulnerable to a XSS attack. Upgrading avoids the XSS bug potentially caused by serializer allowing attribute values to be escaped out of in old browser versions, changing the quote_attr_values option on serializer to take one of three values, \"always\" (the old True value), \"legacy\" (the new option,  and the new default), and \"spec\" (the old False value, and the old default).",
            "cve": null,
            "id": "pyup.io-25845",
            "specs": [
                "<0.99999999"
            ],
            "v": "<0.99999999"
        }
    ],
    "html5lib": [
        {
            "advisory": "The serializer in html5lib before 0.99999999 might allow remote attackers to conduct cross-site scripting (XSS) attacks by leveraging mishandling of the < (less than) character in attribute values.",
            "cve": "CVE-2016-9909",
            "id": "pyup.io-35693",
            "specs": [
                "<0.99999999"
            ],
            "v": "<0.99999999"
        },
        {
            "advisory": "The serializer in html5lib before 0.99999999 might allow remote attackers to conduct cross-site scripting (XSS) attacks by leveraging mishandling of special characters in attribute values, a different vulnerability than CVE-2016-9909.",
            "cve": "CVE-2016-9910",
            "id": "pyup.io-35694",
            "specs": [
                "<0.99999999"
            ],
            "v": "<0.99999999"
        },
        {
            "advisory": "html5lib before 0.99999999 is vulnerable to a XSS attack. Upgrading avoids the XSS bug potentially caused by serializer allowing attribute values to be escaped out of in old browser versions, changing the quote_attr_values option on serializer to take one of three values, \"always\" (the old True value), \"legacy\" (the new option,  and the new default), and \"spec\" (the old False value, and the old default).",
            "cve": null,
            "id": "pyup.io-25846",
            "specs": [
                "<0.99999999",
                ">1.0,<1.0b8"
            ],
            "v": "<0.99999999,>1.0,<1.0b8"
        }
    ],
    "httpauth": [
        {
            "advisory": "httpauth 0.2 fixes a security issue: Invalid username + empty password were being accepted.",
            "cve": null,
            "id": "pyup.io-25847",
            "specs": [
                "<0.2"
            ],
            "v": "<0.2"
        }
    ],
    "httplib2": [
        {
            "advisory": "httplib2 before and including 0.9.2 on \"SSL certificate hostname mismatch\" it is checked only once: https://github.com/httplib2/httplib2/issues/5",
            "cve": null,
            "id": "pyup.io-25848",
            "specs": [
                "<=0.9.2"
            ],
            "v": "<=0.9.2"
        }
    ],
    "httpsig": [
        {
            "advisory": "httpsig 1.0.0 removed suport for reading keyfiles from disk as this is a huge security hole if this is used in a server framework like drf-httpsig.",
            "cve": null,
            "id": "pyup.io-25849",
            "specs": [
                "<1.0.0"
            ],
            "v": "<1.0.0"
        }
    ],
    "httpsig-cffi": [
        {
            "advisory": "httpsig-cffi 1.0.0 removed suport for reading keyfiles from disk as this is a huge security hole if this is used in a server framework like drf-httpsig.",
            "cve": null,
            "id": "pyup.io-25850",
            "specs": [
                "<1.0.0"
            ],
            "v": "<1.0.0"
        }
    ],
    "hug": [
        {
            "advisory": "hug 2.3.0 fixes a vulnerability in the static file router that allows files in parent directory to be accessed.",
            "cve": null,
            "id": "pyup.io-34472",
            "specs": [
                "<2.3.0"
            ],
            "v": "<2.3.0"
        }
    ],
    "humblesetuptools": [
        {
            "advisory": "humblesetuptools 0.9.5 fixes a security vulnerability in SSL certificate validation.",
            "cve": null,
            "id": "pyup.io-25851",
            "specs": [
                "<0.9.5"
            ],
            "v": "<0.9.5"
        },
        {
            "advisory": "humblesetuptools 1.3 adresses a security vulnerability in SSL match_hostname check as reported in  Python #17997.",
            "cve": null,
            "id": "pyup.io-25852",
            "specs": [
                "<1.3"
            ],
            "v": "<1.3"
        }
    ],
    "hydroshare": [
        {
            "advisory": "hydroshare before 1.9.5 has multiple - undisclosed - security issues.",
            "cve": null,
            "id": "pyup.io-34264",
            "specs": [
                "<1.9.5"
            ],
            "v": "<1.9.5"
        },
        {
            "advisory": "hydroshare before 1.9.6 has multiple - undisclosed - security issues.",
            "cve": null,
            "id": "pyup.io-34265",
            "specs": [
                "<1.9.6"
            ],
            "v": "<1.9.6"
        }
    ],
    "indico": [
        {
            "advisory": "indico before 2.0.2 uses a insecure transitive dependency (bleach).",
            "cve": null,
            "id": "pyup.io-35802",
            "specs": [
                "<2.0.2"
            ],
            "v": "<2.0.2"
        }
    ],
    "insecure-package": [
        {
            "advisory": "This is an insecure package with lots of exploitable security vulnerabilities.",
            "cve": null,
            "id": "pyup.io-25853",
            "specs": [
                "<0.2.0"
            ],
            "v": "<0.2.0"
        }
    ],
    "invenio": [
        {
            "advisory": "invenio 1.0.2 includes fixes for several undisclosed XSS vulnerabilities.",
            "cve": null,
            "id": "pyup.io-25854",
            "specs": [
                "<1.0.2"
            ],
            "v": "<1.0.2"
        },
        {
            "advisory": "invenio 1.1.2 fixes a undisclosed XSS vulnerability.",
            "cve": null,
            "id": "pyup.io-25855",
            "specs": [
                "<1.1.2"
            ],
            "v": "<1.1.2"
        }
    ],
    "invenio-search": [
        {
            "advisory": "invenio-search 0.1.3 fixes a potential XSS issues by changing search flash messages template so that they are not displayed as safe HTML by default.",
            "cve": null,
            "id": "pyup.io-25856",
            "specs": [
                "<0.1.3"
            ],
            "v": "<0.1.3"
        }
    ],
    "ipython": [
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in the file browser in notebook/notebookapp.py in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to inject arbitrary web script or HTML via a folder name.  NOTE: this was originally reported as a cross-site request forgery (CSRF) vulnerability, but this may be inaccurate.",
            "cve": "CVE-2015-6938",
            "id": "pyup.io-33132",
            "specs": [
                "<3.2.2"
            ],
            "v": "<3.2.2"
        },
        {
            "advisory": "The editor in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to execute arbitrary JavaScript code via a crafted file, which triggers a redirect to files/, related to MIME types.",
            "cve": "CVE-2015-7337",
            "id": "pyup.io-33133",
            "specs": [
                "<3.2.2"
            ],
            "v": "<3.2.2"
        }
    ],
    "irc3": [
        {
            "advisory": "irc3 before 0.4.4 is vulnerable to several undisclosed security issues.",
            "cve": null,
            "id": "pyup.io-25859",
            "specs": [
                "<0.4.4"
            ],
            "v": "<0.4.4"
        }
    ],
    "ironic-discoverd": [
        {
            "advisory": "OpenStack Ironic Inspector (aka ironic-inspector or ironic-discoverd), when debug mode is enabled, might allow remote attackers to access the Flask console and execute arbitrary Python code by triggering an error.",
            "cve": "CVE-2015-5306",
            "id": "pyup.io-25860",
            "specs": [
                "<2.3.0"
            ],
            "v": "<2.3.0"
        }
    ],
    "ironic-inspector": [
        {
            "advisory": "OpenStack Ironic Inspector (aka ironic-inspector or ironic-discoverd), when debug mode is enabled, might allow remote attackers to access the Flask console and execute arbitrary Python code by triggering an error.",
            "cve": "CVE-2015-5306",
            "id": "pyup.io-25861",
            "specs": [
                "<2.3.0"
            ],
            "v": "<2.3.0"
        }
    ],
    "isso": [
        {
            "advisory": "isso 0.6 fixes a cross-site request forgery vulnerability for comment creation, voting, editing and deletion.",
            "cve": null,
            "id": "pyup.io-25862",
            "specs": [
                "<0.6"
            ],
            "v": "<0.6"
        }
    ],
    "jinja": [
        {
            "advisory": "jinja 2.7.2 fixes a security issue: Changed the default folder for the filesystem cache to be user specific and read and write protected on UNIX systems.  See http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=734747 for more information.",
            "cve": null,
            "id": "pyup.io-25863",
            "specs": [
                "<2.7.2"
            ],
            "v": "<2.7.2"
        },
        {
            "advisory": "jinja 2.7.3 fixes a security issue: Corrected the security fix for the cache folder.",
            "cve": null,
            "id": "pyup.io-25864",
            "specs": [
                "<2.7.3"
            ],
            "v": "<2.7.3"
        }
    ],
    "jinja2": [
        {
            "advisory": "jinja2 2.7.2 fixes a security issue: Changed the default folder for the filesystem cache to be user specific and read and write protected on UNIX systems.  See http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=734747 for more information.",
            "cve": null,
            "id": "pyup.io-25865",
            "specs": [
                "<2.7.2"
            ],
            "v": "<2.7.2"
        },
        {
            "advisory": "The default configuration for bccache.FileSystemBytecodeCache in Jinja2 before 2.7.2 does not properly create temporary files, which allows local users to gain privileges via a crafted .cache file with a name starting with __jinja2_ in /tmp.",
            "cve": "CVE-2014-1402",
            "id": "pyup.io-25866",
            "specs": [
                "<2.7.3"
            ],
            "v": "<2.7.3"
        }
    ],
    "jose": [
        {
            "advisory": "jose 0.3.0 fixed critical JWT vulnerability.",
            "cve": null,
            "id": "pyup.io-25867",
            "specs": [
                "<0.3.0"
            ],
            "v": "<0.3.0"
        }
    ],
    "js-videojs": [
        {
            "advisory": "js-videojs  4.12.5 updates videojs-swf to v4.5.4 to fix a potential security issue ([view](https://github.com/videojs/video.js/pull/1955)",
            "cve": null,
            "id": "pyup.io-36130",
            "specs": [
                "<4.12.5"
            ],
            "v": "<4.12.5"
        }
    ],
    "jsonrpc-pyclient": [
        {
            "advisory": "jsonrpc-pyclient 0.7.0 fixes security issues in unixdomainsocket connectors.",
            "cve": null,
            "id": "pyup.io-25869",
            "specs": [
                "<0.7.0"
            ],
            "v": "<0.7.0"
        }
    ],
    "katal": [
        {
            "advisory": "katal before 0.0.6 uses eval() internally.",
            "cve": null,
            "id": "pyup.io-34247",
            "specs": [
                "<0.0.6"
            ],
            "v": "<0.0.6"
        }
    ],
    "keyring": [
        {
            "advisory": "Python Keyring 0.9.1 does not securely initialize the cipher when encrypting passwords for CryptedFileKeyring files, which makes it easier for local users to obtain passwords via a brute-force attack.",
            "cve": "CVE-2012-4571",
            "id": "pyup.io-25870",
            "specs": [
                "<0.9.1"
            ],
            "v": "<0.9.1"
        }
    ],
    "keystonemiddleware": [
        {
            "advisory": "The identity service in OpenStack Identity (Keystone) before 2015.1.3 (Kilo) and 8.0.x before 8.0.2 (Liberty) and keystonemiddleware (formerly python-keystoneclient) before 1.5.4 (Kilo) and Liberty before 2.3.3 does not properly invalidate authorization tokens when using the PKI or PKIZ token providers, which allows remote authenticated users to bypass intended access restrictions and gain access to cloud resources by manipulating byte fields within a revoked token.",
            "cve": "CVE-2015-7546",
            "id": "pyup.io-25871",
            "specs": [
                "<1.5.4",
                ">=2.0,<2.3.3"
            ],
            "v": "<1.5.4,>=2.0,<2.3.3"
        },
        {
            "advisory": "The s3_token middleware in OpenStack keystonemiddleware before 1.6.0 and python-keystoneclient before 1.4.0 disables certification verification when the \"insecure\" option is set in a paste configuration (paste.ini) file regardless of the value, which allows remote attackers to conduct man-in-the-middle attacks via a crafted certificate, a different vulnerability than CVE-2014-7144.",
            "cve": "CVE-2015-1852",
            "id": "pyup.io-25872",
            "specs": [
                "<1.6.0"
            ],
            "v": "<1.6.0"
        }
    ],
    "kinto": [
        {
            "advisory": "kinto 5.1.0 replaced insecure use of ``random.random()`` and ``random.choice(...)`` with more secure ``random.SystemRandom().random()`` and ``random.SystemRandom().choice(...)``.",
            "cve": null,
            "id": "pyup.io-25873",
            "specs": [
                "<5.1.0"
            ],
            "v": "<5.1.0"
        }
    ],
    "kinto-dist": [
        {
            "advisory": "Since Kinto 8.2.0 the `account` plugin had a security flaw where the password wasn't verified during the session duration. It now validates the account user password even when the session is cached (Kinto/kinto1583).",
            "cve": null,
            "id": "pyup.io-36153",
            "specs": [
                "<8.2.3"
            ],
            "v": "<8.2.3"
        }
    ],
    "kotti": [
        {
            "advisory": "kotti 1.3.2 fixes a CSRF (Cross Site Request Forgery) security vulnerablity which was reported in 551. You should upgrade your installations ASAP.",
            "cve": null,
            "id": "pyup.io-36142",
            "specs": [
                "<1.3.2"
            ],
            "v": "<1.3.2"
        }
    ],
    "lambda-tools": [
        {
            "advisory": "lambda-tools before 0.1.2 used an unsafe way to load untrusted lambda definitions via `yaml.load`.",
            "cve": null,
            "id": "pyup.io-35209",
            "specs": [
                "<0.1.2"
            ],
            "v": "<0.1.2"
        }
    ],
    "lambdajson": [
        {
            "advisory": "lambdajson 0.1.5 includes a security fix. Using ast.literal_eval as eval.",
            "cve": null,
            "id": "pyup.io-25874",
            "specs": [
                "<0.1.5"
            ],
            "v": "<0.1.5"
        }
    ],
    "ldap3": [
        {
            "advisory": "ldap3 before 0.9.5.4 has several security issues in lazy connections.",
            "cve": null,
            "id": "pyup.io-25875",
            "specs": [
                "<0.9.5.4"
            ],
            "v": "<0.9.5.4"
        },
        {
            "advisory": "ldap3 2.4 includes a security fix in the rebind() method of the Connection object.",
            "cve": null,
            "id": "pyup.io-35053",
            "specs": [
                "<2.4"
            ],
            "v": "<2.4"
        }
    ],
    "lemur": [
        {
            "advisory": "lemur 0.1.5 switched from use a AES static key to Fernet encryption.",
            "cve": null,
            "id": "pyup.io-25876",
            "specs": [
                "<0.1.5"
            ],
            "v": "<0.1.5"
        }
    ],
    "libtaxii": [
        {
            "advisory": "libtaxii before 1.1.105 has multiple XML parsing related vulnerabilities.",
            "cve": null,
            "id": "pyup.io-25877",
            "specs": [
                "<1.1.105"
            ],
            "v": "<1.1.105"
        }
    ],
    "livefyre": [
        {
            "advisory": "livefyre before 2.0.3 uses a release of a transitive dependency with known security vulnerabilities  (PyJWT).",
            "cve": null,
            "id": "pyup.io-34170",
            "specs": [
                "<2.0.3"
            ],
            "v": "<2.0.3"
        }
    ],
    "locustio": [
        {
            "advisory": "locustio before 0.7 uses pickle.",
            "cve": null,
            "id": "pyup.io-25878",
            "specs": [
                "<0.7"
            ],
            "v": "<0.7"
        }
    ],
    "logilab-common": [
        {
            "advisory": "The Execute class in shellutils in logilab-commons before 0.61.0 uses tempfile.mktemp, which allows local users to have an unspecified impact by pre-creating the temporary file.",
            "cve": "CVE-2014-1839",
            "id": "pyup.io-35525",
            "specs": [
                "<0.61.0"
            ],
            "v": "<0.61.0"
        },
        {
            "advisory": "The (1) extract_keys_from_pdf and (2) fill_pdf functions in pdf_ext.py in logilab-commons before 0.61.0 allows local users to overwrite arbitrary files and possibly have other unspecified impact via a symlink attack on /tmp/toto.fdf.",
            "cve": "CVE-2014-1838",
            "id": "pyup.io-35524",
            "specs": [
                "<0.61.0"
            ],
            "v": "<0.61.0"
        }
    ],
    "luigi": [
        {
            "advisory": "luigi 2.1.1 fixes a security issue where malicious users can run arbitrary code if they have file system (even external mounts!)+network access on the machine running luigid (executed by the user that you run luigid with).",
            "cve": null,
            "id": "pyup.io-34671",
            "specs": [
                "<2.1.1"
            ],
            "v": "<2.1.1"
        }
    ],
    "lxml": [
        {
            "advisory": "Incomplete blacklist vulnerability in the lxml.html.clean module in lxml before 3.3.5 allows remote attackers to conduct cross-site scripting (XSS) attacks via control characters in the link scheme to the clean_html function.",
            "cve": "CVE-2014-3146",
            "id": "pyup.io-35549",
            "specs": [
                "<3.3.5"
            ],
            "v": "<3.3.5"
        }
    ],
    "mailman": [
        {
            "advisory": "Multiple cross-site scripting (XSS) vulnerabilities in Cgi/confirm.py in GNU Mailman 2.1.14 and earlier allow remote attackers to inject arbitrary web script or HTML via the (1) full name or (2) username field in a confirmation message.",
            "cve": "CVE-2011-0707",
            "id": "pyup.io-25879",
            "specs": [
                "<2.1.14"
            ],
            "v": "<2.1.14"
        },
        {
            "advisory": "Multiple cross-site scripting (XSS) vulnerabilities in GNU Mailman before 2.1.14rc1 allow remote authenticated users to inject arbitrary web script or HTML via vectors involving (1) the list information field or (2) the list description field.",
            "cve": "CVE-2010-3089",
            "id": "pyup.io-25880",
            "specs": [
                "<2.1.14rc1"
            ],
            "v": "<2.1.14rc1"
        },
        {
            "advisory": "Directory traversal vulnerability in GNU Mailman before 2.1.20, when not using a static alias, allows remote attackers to execute arbitrary files via a .. (dot dot) in a list name.",
            "cve": "CVE-2015-2775",
            "id": "pyup.io-25881",
            "specs": [
                "<2.1.20"
            ],
            "v": "<2.1.20"
        }
    ],
    "mako": [
        {
            "advisory": "Mako before 0.3.4 relies on the cgi.escape function in the Python standard library for cross-site scripting (XSS) protection, which makes it easier for remote attackers to conduct XSS attacks via vectors involving single-quote characters and a JavaScript onLoad event handler for a BODY element.",
            "cve": "CVE-2010-2480",
            "id": "pyup.io-25882",
            "specs": [
                "<0.3.4"
            ],
            "v": "<0.3.4"
        }
    ],
    "mantissa": [
        {
            "advisory": "mantissa before 0.6.14 in xmantissa.webtheme allows access to arbitrary filesystem contents.",
            "cve": null,
            "id": "pyup.io-25883",
            "specs": [
                "<0.6.14"
            ],
            "v": "<0.6.14"
        }
    ],
    "markdown2": [
        {
            "advisory": "markdown2 before 1.0.1.14 has a security hole in the md5-hashing scheme for handling HTML  chunks during processing.",
            "cve": null,
            "id": "pyup.io-25884",
            "specs": [
                "<1.0.1.14"
            ],
            "v": "<1.0.1.14"
        },
        {
            "advisory": "markdown2 before 1.0.1.15 is vulnerable to a XSS attack via JavaScript injection in a carefully crafted image reference (usage of double-quotes in the URL).",
            "cve": null,
            "id": "pyup.io-25885",
            "specs": [
                "<1.0.1.15"
            ],
            "v": "<1.0.1.15"
        },
        {
            "advisory": "An issue was discovered in markdown2 (aka python-markdown2) through 2.3.5. The safe_mode feature, which is supposed to sanitize user input against XSS, is flawed and does not escape the input properly. With a crafted payload, XSS can be triggered, as demonstrated by omitting the final '>' character from an IMG tag.",
            "cve": "CVE-2018-5773",
            "id": "pyup.io-35760",
            "specs": [
                "<2.3.5"
            ],
            "v": "<2.3.5"
        }
    ],
    "matthisk-httpsig": [
        {
            "advisory": "matthisk-httpsig before 1.0.0 allowed reading keyfiles from disk as this is a huge security hole if this is used in a server framework like drf-httpsig.",
            "cve": null,
            "id": "pyup.io-25886",
            "specs": [
                "<1.0.0"
            ],
            "v": "<1.0.0"
        }
    ],
    "maxminddb": [
        {
            "advisory": "maxminddb 1.1.2 includes a number of important security fixes. Among these fixes is improved validation of the database metadata. Unfortunately,  MaxMind GeoIP2 and GeoLite2 databases created earlier than January 28, 2014  had an invalid data type for the `record_size` in the metadata. Previously these databases worked on little endian machines with libmaxminddb but did not work on big endian machines. Due to increased safety checks when reading the file, these databases will no longer work on any platform. If you are using one of these databases, we recommend that you upgrade to the latest GeoLite2 or GeoIP2 database",
            "cve": null,
            "id": "pyup.io-25887",
            "specs": [
                "<1.1.2"
            ],
            "v": "<1.1.2"
        }
    ],
    "mercurial": [
        {
            "advisory": "In Mercurial before 4.1.3, \"hg serve --stdio\" allows remote authenticated users to launch the Python debugger, and consequently execute arbitrary code, by using --debugger as a repository name.",
            "cve": "CVE-2017-9462",
            "id": "pyup.io-35757",
            "specs": [
                "<4.1.3"
            ],
            "v": "<4.1.3"
        }
    ],
    "metadataproxy": [
        {
            "advisory": "metadataproxy before 1.1.1 has a flaw in the proxy functionality when used in passthrough mode that would expose the host's IAM role credentials when extra paths were added to the end of the security-credentials end-point. metadataproxy will now properly capture any call to iam/security-credentials/<role> and return the scoped credentials, rather than the host's credentials.",
            "cve": null,
            "id": "pyup.io-25888",
            "specs": [
                "<1.1.1"
            ],
            "v": "<1.1.1"
        }
    ],
    "mgp2pdf": [
        {
            "advisory": "In mgp2pdf before 0.10 `%filter`` is enabled by default which is a security risk.",
            "cve": null,
            "id": "pyup.io-25889",
            "specs": [
                "<0.10"
            ],
            "v": "<0.10"
        }
    ],
    "mini-amf": [
        {
            "advisory": "mini-amf before 0.8 is vulnerable to XML entity attacks.",
            "cve": null,
            "id": "pyup.io-33048",
            "specs": [
                "<0.8"
            ],
            "v": "<0.8"
        }
    ],
    "mistune": [
        {
            "advisory": "mistune before 0.7.2 is vulnerable to an XSS attack. It is possible to bypass the renderer's link security check.",
            "cve": null,
            "id": "pyup.io-25890",
            "specs": [
                "<0.7.2"
            ],
            "v": "<0.7.2"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in the _keyify function in mistune.py in Mistune before 0.8.1 allows remote attackers to inject arbitrary web script or HTML by leveraging failure to escape the 'key' argument.",
            "cve": "CVE-2017-16876",
            "id": "pyup.io-25890",
            "specs": [
                "<0.8.1"
            ],
            "v": "<0.8.1"
        }
    ],
    "mitmproxy": [
        {
            "advisory": "mitmproxy before 0.17 has a XSS vulnerability in HTTP errors.",
            "cve": null,
            "id": "pyup.io-25891",
            "specs": [
                "<0.17"
            ],
            "v": "<0.17"
        }
    ],
    "mixminion": [
        {
            "advisory": "mixminion before 0.0.2 is vulnerable to certain trivial DoS attacks. In particular, it's possible to send zlib bombs or flood a server with open connections.",
            "cve": null,
            "id": "pyup.io-25892",
            "specs": [
                "<0.0.2"
            ],
            "v": "<0.0.2"
        }
    ],
    "mkdocs-material": [
        {
            "advisory": "mkdocs-material before 1.0.0 uses _blank targets on links which make it vulnerable to Cross Site Scripting attacks.",
            "cve": null,
            "id": "pyup.io-32121",
            "specs": [
                "<1.0.0"
            ],
            "v": "<1.0.0"
        }
    ],
    "mlalchemy": [
        {
            "advisory": "An exploitable vulnerability exists in the YAML parsing functionality in the parse_yaml_query method in parser.py in MLAlchemy before 0.2.2. When processing YAML-Based queries for data, a YAML parser can execute arbitrary Python commands resulting in command execution because load is used where safe_load should have been used. An attacker can insert Python into loaded YAML to trigger this vulnerability.",
            "cve": "CVE-2017-16615",
            "id": "pyup.io-35718",
            "specs": [
                "<0.2.2"
            ],
            "v": "<0.2.2"
        }
    ],
    "mockup": [
        {
            "advisory": "mockup before 2.1.3 has XSS vulnerability issues in structure and relateditem patterns.",
            "cve": null,
            "id": "pyup.io-25893",
            "specs": [
                "<2.1.3"
            ],
            "v": "<2.1.3"
        }
    ],
    "moin": [
        {
            "advisory": "The password_checker function in config/multiconfig.py in MoinMoin 1.6.1 uses the cracklib and python-crack features even though they are not thread-safe, which allows remote attackers to cause a denial of service (segmentation fault and crash) via unknown vectors.",
            "cve": "CVE-2008-6549",
            "id": "pyup.io-25894",
            "specs": [
                "<1.6.1"
            ],
            "v": "<1.6.1"
        }
    ],
    "morepath": [
        {
            "advisory": "morepath before 0.14 has no host header validation to protect against header poisoning attacks.",
            "cve": null,
            "id": "pyup.io-25895",
            "specs": [
                "<0.14"
            ],
            "v": "<0.14"
        }
    ],
    "mosql": [
        {
            "advisory": "mosql 0.10 includes several security related changes.",
            "cve": null,
            "id": "pyup.io-25896",
            "specs": [
                "<0.10"
            ],
            "v": "<0.10"
        }
    ],
    "mr.migrator": [
        {
            "advisory": "mr.migrator 1.2 fixes a form problem with security hotfix.",
            "cve": null,
            "id": "pyup.io-25897",
            "specs": [
                "<1.2"
            ],
            "v": "<1.2"
        }
    ],
    "mss": [
        {
            "advisory": "mss before 2.0.18 has a undisclosed security issue.",
            "cve": null,
            "id": "pyup.io-25898",
            "specs": [
                "<2.0.18"
            ],
            "v": "<2.0.18"
        }
    ],
    "murano-dashboard": [
        {
            "advisory": "OpenStack Murano before 1.0.3 (liberty) and 2.x before 2.0.1 (mitaka), Murano-dashboard before 1.0.3 (liberty) and 2.x before 2.0.1 (mitaka), and python-muranoclient before 0.7.3 (liberty) and 0.8.x before 0.8.5 (mitaka) improperly use loaders inherited from yaml.Loader when parsing MuranoPL and UI files, which allows remote attackers to create arbitrary Python objects and execute arbitrary code via crafted extended YAML tags in UI definitions in packages.",
            "cve": "CVE-2016-4972",
            "id": "pyup.io-25899",
            "specs": [
                ">=2.0,<2.0.1",
                "<1.0.3"
            ],
            "v": ">=2.0,<2.0.1,<1.0.3"
        }
    ],
    "mxnet": [
        {
            "advisory": "In mxnet before 1.0.0, mxnet listens on all available interfaces when running training in distributed mode.",
            "cve": null,
            "id": "pyup.io-35115",
            "specs": [
                "<1.0.0"
            ],
            "v": "<1.0.0"
        }
    ],
    "mysql-connector": [
        {
            "advisory": "Unspecified vulnerability in the MySQL Connector component 2.1.3 and earlier and 2.0.4 and earlier in Oracle MySQL allows remote attackers to affect confidentiality, integrity, and availability via vectors related to Connector/Python.",
            "cve": "CVE-2016-5598",
            "id": "pyup.io-25900",
            "specs": [
                "<2.1.3"
            ],
            "v": "<2.1.3"
        }
    ],
    "mysql-connector-python": [
        {
            "advisory": "Unspecified vulnerability in the MySQL Connector component 2.1.3 and earlier and 2.0.4 and earlier in Oracle MySQL allows remote attackers to affect confidentiality, integrity, and availability via vectors related to Connector/Python.",
            "cve": "CVE-2016-5598",
            "id": "pyup.io-25901",
            "specs": [
                "<2.0.4"
            ],
            "v": "<2.0.4"
        }
    ],
    "newrelic": [
        {
            "advisory": "New Relic agents run explain plans for Slow Transaction Traces and Slow SQL Queries. Previous versions of the agents would run an explain plan on the SQL query by prepending the query with explain. This may cause an issue when there are multiple statements separated by semicolons in a single query. The first statement in the string returns its explain plan, but any subsequent statement after that may execute as a general SQL statement. Depending on the language, library, and database, the agent may return the results of the additional statements to New Relic. It is also possible that the additional statements could execute an additional INSERT or UPDATE command. With this security update, New Relic agents will no longer run explain plans on any query that contains a semicolon as a statement separator.",
            "cve": null,
            "id": "pyup.io-35805",
            "specs": [
                ">=1.1.0.192,<=2.106.0.87"
            ],
            "v": ">=1.1.0.192,<=2.106.0.87"
        }
    ],
    "newsletter": [
        {
            "advisory": "newsletter 0.1.17pre in newsletterapp is now more secure by default.  Does not setup default users for admin section.",
            "cve": null,
            "id": "pyup.io-25902",
            "specs": [
                "<0.1.17pre"
            ],
            "v": "<0.1.17pre"
        }
    ],
    "nfw": [
        {
            "advisory": "nfw before 0.0.7 is vulnerable to SQL-injection attacks.",
            "cve": null,
            "id": "pyup.io-32994",
            "specs": [
                "<0.0.7"
            ],
            "v": "<0.0.7"
        }
    ],
    "noiseprotocol": [
        {
            "advisory": "noiseprotocol before 0.2.1 used an insecure transitive dependency (Cryptography<=2.1.3).",
            "cve": null,
            "id": "pyup.io-35043",
            "specs": [
                "<0.2.1"
            ],
            "v": "<0.2.1"
        }
    ],
    "notable": [
        {
            "advisory": "notable 0.0.6 fixes a security regression in the new BoltDB backend.",
            "cve": null,
            "id": "pyup.io-34447",
            "specs": [
                "<0.0.6"
            ],
            "v": "<0.0.6"
        }
    ],
    "notebook": [
        {
            "advisory": "The editor in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to execute arbitrary JavaScript code via a crafted file, which triggers a redirect to files/, related to MIME types.",
            "cve": "CVE-2015-7337",
            "id": "pyup.io-25903",
            "specs": [
                "<4.0.5"
            ],
            "v": "<4.0.5"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in the file browser in notebook/notebookapp.py in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to inject arbitrary web script or HTML via a folder name.  NOTE: this was originally reported as a cross-site request forgery (CSRF) vulnerability, but this may be inaccurate.",
            "cve": "CVE-2015-6938",
            "id": "pyup.io-25904",
            "specs": [
                ">=4.0,<4.0.5"
            ],
            "v": ">=4.0,<4.0.5"
        }
    ],
    "notifications-python-client": [
        {
            "advisory": "notifications-python-client before 4.7.1 is vulnerable to a not further described security issue in PyJWT.",
            "cve": null,
            "id": "pyup.io-35116",
            "specs": [
                "<4.7.1"
            ],
            "v": "<4.7.1"
        }
    ],
    "nova": [
        {
            "advisory": "The OpenStack Nova (python-nova) package 1:2013.2.3-0 before 1:2013.2.3-0ubuntu1.2 and 1:2014.1-0 before 1:2014.1-0ubuntu1.2 and Openstack Cinder (python-cinder) package 1:2013.2.3-0 before 1:2013.2.3-0ubuntu1.1 and 1:2014.1-0 before 1:2014.1-0ubuntu1.1 for Ubuntu 13.10 and 14.04 LTS does not properly set the sudo configuration, which makes it easier for attackers to gain privileges by leveraging another vulnerability.",
            "cve": "CVE-2013-1068",
            "id": "pyup.io-25905",
            "specs": [
                "<2013.2.3"
            ],
            "v": "<2013.2.3"
        }
    ],
    "nsupdate": [
        {
            "advisory": "nsupdate before 0.3.0 is vulnerable to a undisclosed security issue.",
            "cve": null,
            "id": "pyup.io-25906",
            "specs": [
                "<0.3.0"
            ],
            "v": "<0.3.0"
        },
        {
            "advisory": "nsupdate 0.8.0 fixes a security issue: abuse_blocked flag could be worked around by abuser.",
            "cve": null,
            "id": "pyup.io-25907",
            "specs": [
                "<0.8.0"
            ],
            "v": "<0.8.0"
        },
        {
            "advisory": "nsupdate 0.9.1 fixes a security issue with \"related hosts\" / \"service updaters\".",
            "cve": null,
            "id": "pyup.io-25908",
            "specs": [
                "<0.9.1"
            ],
            "v": "<0.9.1"
        }
    ],
    "oauth2": [
        {
            "advisory": "The Server.verify_request function in SimpleGeo python-oauth2 does not check the nonce, which allows remote attackers to perform replay attacks via a signed URL.",
            "cve": "CVE-2013-4346",
            "id": "pyup.io-35462",
            "specs": [
                "<1.9"
            ],
            "v": "<1.9"
        },
        {
            "advisory": "The (1) make_nonce, (2) generate_nonce, and (3) generate_verifier functions in SimpleGeo python-oauth2 uses weak random numbers to generate nonces, which makes it easier for remote attackers to guess the nonce via a brute force attack.",
            "cve": "CVE-2013-4347",
            "id": "pyup.io-35463",
            "specs": [
                "<1.9"
            ],
            "v": "<1.9"
        }
    ],
    "oauthlib": [
        {
            "advisory": "oauthlib before 0.7.0 is not stripping client provided passwords from OAuth2 logs.",
            "cve": null,
            "id": "pyup.io-25909",
            "specs": [
                "<0.7.0"
            ],
            "v": "<0.7.0"
        }
    ],
    "oci-cli": [
        {
            "advisory": "Versions of oci-cli prior to 2.4.10 are affected by a security vulnerability. Versions 2.4.11 and later will automatically detect vulnerable installations, and if issues are detected, a warning will be displayed to the user. These issues can be remediated automatically by running the ``oci setup repair-file-permissions`` command.",
            "cve": null,
            "id": "pyup.io-36148",
            "specs": [
                "<2.4.10"
            ],
            "v": "<2.4.10"
        }
    ],
    "onegov.form": [
        {
            "advisory": "onegov.form before 0.16.1 is not escaping HTML labels in the dynamic formbuilder.",
            "cve": null,
            "id": "pyup.io-25911",
            "specs": [
                "<0.16.1"
            ],
            "v": "<0.16.1"
        }
    ],
    "onixcheck": [
        {
            "advisory": "onixcheck 0.8.0 adds secured XML-Parsing via defusedxml.",
            "cve": null,
            "id": "pyup.io-25912",
            "specs": [
                "<0.8.0"
            ],
            "v": "<0.8.0"
        }
    ],
    "oodt": [
        {
            "advisory": "oodt before 0.4 is vulnerable to XSS attacks via malformed query strings.",
            "cve": null,
            "id": "pyup.io-25913",
            "specs": [
                "<0.4"
            ],
            "v": "<0.4"
        }
    ],
    "ooniprobe": [
        {
            "advisory": "ooniprobe before 1.0.2 is vulnerable to several undisclosed security issues.",
            "cve": null,
            "id": "pyup.io-25914",
            "specs": [
                "<1.0.2"
            ],
            "v": "<1.0.2"
        }
    ],
    "openslides": [
        {
            "advisory": "openslides 2.1 now validates HTML strings from CKEditor against XSS attacks.",
            "cve": null,
            "id": "pyup.io-34681",
            "specs": [
                "<2.1"
            ],
            "v": "<2.1"
        }
    ],
    "otpauth": [
        {
            "advisory": "otpauth before 1.0.1 is vulnerable to timing attacks.",
            "cve": null,
            "id": "pyup.io-25915",
            "specs": [
                "<1.0.1"
            ],
            "v": "<1.0.1"
        }
    ],
    "ovirt-engine-sdk-python": [
        {
            "advisory": "The python SDK before 3.1.0.6 and CLI before 3.1.0.8 for oVirt 3.1 does not check the server SSL certificate against the client keys, which allows remote attackers to spoof a server via a man-in-the-middle (MITM) attack.",
            "cve": "CVE-2012-3533",
            "id": "pyup.io-25916",
            "specs": [
                "<3.1.0.8"
            ],
            "v": "<3.1.0.8"
        }
    ],
    "ovs": [
        {
            "advisory": "ovs 1.3.0 includes a fix that flow setups are now processed in a round-robin manner across ports to prevent any single client from monopolizing the CPU and conducting a denial of service attack.",
            "cve": null,
            "id": "pyup.io-25917",
            "specs": [
                "<1.3.0"
            ],
            "v": "<1.3.0"
        }
    ],
    "owlmixin": [
        {
            "advisory": "An exploitable vulnerability exists in the YAML loading functionality of util.py in OwlMixin before 2.0.0a12. A \"Load YAML\" string or file (aka load_yaml or load_yamlf) can execute arbitrary Python commands resulting in command execution because load is used where safe_load should have been used. An attacker can insert Python into loaded YAML to trigger this vulnerability.",
            "cve": "CVE-2017-16618",
            "id": "pyup.io-35720",
            "specs": [
                "<2.0.0a12"
            ],
            "v": "<2.0.0a12"
        }
    ],
    "pando": [
        {
            "advisory": "pando before 0.39 is vulnerable to security bugs related to CRLF injection.",
            "cve": null,
            "id": "pyup.io-25918",
            "specs": [
                "<0.39"
            ],
            "v": "<0.39"
        },
        {
            "advisory": "pando before 0.42 is vulnerable to URL redirection attacks.",
            "cve": null,
            "id": "pyup.io-25919",
            "specs": [
                "<0.42"
            ],
            "v": "<0.42"
        }
    ],
    "passlib": [
        {
            "advisory": "passlib before 1.4 not disabled unix_fallback's \"wildcard password\" support unless explicitly enabled by user.",
            "cve": null,
            "id": "pyup.io-25921",
            "specs": [
                "<1.4"
            ],
            "v": "<1.4"
        }
    ],
    "paste": [
        {
            "advisory": "paste before 0.9.5 has a security vulnerability in ``paste.urlparser``'s StaticURLParser and PkgResourcesParser where, with some servers, you could escape the document root.",
            "cve": null,
            "id": "pyup.io-25922",
            "specs": [
                "<0.9.5"
            ],
            "v": "<0.9.5"
        },
        {
            "advisory": "paste 1.1 includes a security fix for ``paste.urlparser.StaticURLParser``.  The problem allowed escaping the root (and reading files) when used with ``paste.httpserver`` (this does not effect other servers, and does not apply when proxying requests from Apache to  ``paste.httpserver``).",
            "cve": null,
            "id": "pyup.io-25923",
            "specs": [
                "<1.1"
            ],
            "v": "<1.1"
        },
        {
            "advisory": "paste before 1.7.4 is vulnerable to a XSS attack in paste.urlparser.StaticURLParser.",
            "cve": null,
            "id": "pyup.io-25924",
            "specs": [
                "<1.7.4"
            ],
            "v": "<1.7.4"
        },
        {
            "advisory": "Multiple cross-site scripting (XSS) vulnerabilities in the paste.httpexceptions implementation in Paste before 1.7.4 allow remote attackers to inject arbitrary web script or HTML via vectors involving a 404 status code, related to (1) paste.urlparser.StaticURLParser, (2) paste.urlparser.PkgResourcesParser, (3) paste.urlmap.URLMap, and (4) HTTPNotFound.",
            "cve": "CVE-2010-2477",
            "id": "pyup.io-35340",
            "specs": [
                "<1.7.4"
            ],
            "v": "<1.7.4"
        }
    ],
    "pastescript": [
        {
            "advisory": "Paste Script 1.7.5 and earlier does not properly set group memberships during execution with root privileges, which might allow remote attackers to bypass intended file-access restrictions by leveraging a web application that uses the local filesystem.",
            "cve": "CVE-2012-0878",
            "id": "pyup.io-25925",
            "specs": [
                "<1.7.5"
            ],
            "v": "<1.7.5"
        }
    ],
    "pcp": [
        {
            "advisory": "pcp before 2.1.911 has a not further described vulnerability in pcp.spec.in.",
            "cve": null,
            "id": "pyup.io-25926",
            "specs": [
                "<2.1.911"
            ],
            "v": "<2.1.911"
        }
    ],
    "pdfextract": [
        {
            "advisory": "pdfextract before 0.0.2 is using `eval` on filenames, leading to execution of arbitrary Python code.",
            "cve": null,
            "id": "pyup.io-25927",
            "specs": [
                "<0.0.2"
            ],
            "v": "<0.0.2"
        }
    ],
    "peewee": [
        {
            "advisory": "The main change in this release is the removal of the `AESEncryptedField`,\r\nwhich was included as part of the `playhouse.fields` extension. It was brought\r\nto my attention that there was some serious potential for security\r\nvulnerabilities. Rather than give users a false sense of security, I've decided\r\nthe best course of action is to remove the field.",
            "cve": null,
            "id": "pyup.io-34337",
            "specs": [
                "<2.10.0"
            ],
            "v": "<2.10.0"
        }
    ],
    "peppercorn": [
        {
            "advisory": "peppercorn before 0.5 is vulnerable to DoS attacks due to the use of an iterative parser rather than a recursive parser.",
            "cve": null,
            "id": "pyup.io-25928",
            "specs": [
                "<0.5"
            ],
            "v": "<0.5"
        }
    ],
    "pex": [
        {
            "advisory": "pex before 0.5.6 follows links which may lead to security issues: https://rbcommons.com/s/twitter/r/293/.",
            "cve": null,
            "id": "pyup.io-25929",
            "specs": [
                "<0.5.6"
            ],
            "v": "<0.5.6"
        }
    ],
    "phileo": [
        {
            "advisory": "phileo before 0.3 allows users to like anything and everything, which could potentially lead to security problems (eg. liking entries in permission tables, and thus seeing their content; liking administrative users and thus getting their username).",
            "cve": null,
            "id": "pyup.io-25930",
            "specs": [
                "<0.3"
            ],
            "v": "<0.3"
        }
    ],
    "pillow": [
        {
            "advisory": "pillow before 2.3.1 makes insecure use of tempfile.mktemp (CVE-2014-1932 CVE-2014-1933).",
            "cve": null,
            "id": "pyup.io-25931",
            "specs": [
                "<2.3.1"
            ],
            "v": "<2.3.1"
        },
        {
            "advisory": "pillow before 2.3.2 is vulnerable to a DOS in the IcnsImagePlugin.",
            "cve": null,
            "id": "pyup.io-25932",
            "specs": [
                "<2.3.2"
            ],
            "v": "<2.3.2"
        },
        {
            "advisory": "pillow before 2.5.2 is vulnerable to a DoS in the IcnsImagePlugin.",
            "cve": null,
            "id": "pyup.io-25933",
            "specs": [
                "<2.5.2"
            ],
            "v": "<2.5.2"
        },
        {
            "advisory": "pillow before 2.5.3 is vulnerable to a DoS in the Jpeg2KImagePlugin.",
            "cve": null,
            "id": "pyup.io-25934",
            "specs": [
                "<2.5.3"
            ],
            "v": "<2.5.3"
        },
        {
            "advisory": "pillow before 2.6.0rc1 is vulnerable to CVE-2014-3598, a DOS in the Jpeg2KImagePlugin and CVE-2014-3589, a DOS in the IcnsImagePlugin.",
            "cve": null,
            "id": "pyup.io-25935",
            "specs": [
                "<2.6.0rc1"
            ],
            "v": "<2.6.0rc1"
        },
        {
            "advisory": "pillow before 2.6.2 is vulnerable to a PNG decompression DoS (CVE-2014-9601).",
            "cve": null,
            "id": "pyup.io-25936",
            "specs": [
                "<2.6.2"
            ],
            "v": "<2.6.2"
        },
        {
            "advisory": "pillow before 2.7.0 is vulnerable to a PNG decompression DoS (CVE-2014-9601).",
            "cve": null,
            "id": "pyup.io-25937",
            "specs": [
                "<2.7.0"
            ],
            "v": "<2.7.0"
        },
        {
            "advisory": "Buffer overflow in the ImagingLibTiffDecode function in libImaging/TiffDecode.c in Pillow before 3.1.1 allows remote attackers to overwrite memory via a crafted TIFF file.",
            "cve": "CVE-2016-0740",
            "id": "pyup.io-33134",
            "specs": [
                "<3.1.1"
            ],
            "v": "<3.1.1"
        },
        {
            "advisory": "Buffer overflow in the ImagingFliDecode function in libImaging/FliDecode.c in Pillow before 3.1.1 allows remote attackers to cause a denial of service (crash) via a crafted FLI file.",
            "cve": "CVE-2016-0775",
            "id": "pyup.io-33135",
            "specs": [
                "<3.1.1"
            ],
            "v": "<3.1.1"
        },
        {
            "advisory": "Buffer overflow in the ImagingPcdDecode function in PcdDecode.c in Pillow before 3.1.1 and Python Imaging Library (PIL) 1.1.7 and earlier allows remote attackers to cause a denial of service (crash) via a crafted PhotoCD file.",
            "cve": "CVE-2016-2533",
            "id": "pyup.io-33136",
            "specs": [
                "<3.1.1"
            ],
            "v": "<3.1.1"
        },
        {
            "advisory": "Integer overflow in the ImagingResampleHorizontal function in libImaging/Resample.c in Pillow before 3.1.1 allows remote attackers to have unspecified impact via negative values of the new size, which triggers a heap-based buffer overflow.",
            "cve": "CVE-2016-4009",
            "id": "pyup.io-33137",
            "specs": [
                "<3.1.1"
            ],
            "v": "<3.1.1"
        },
        {
            "advisory": "pillow before 3.1.2 is vulnerable to an integer overflow in Jpeg2KEncode.c causing a buffer overflow. CVE-2016-3076.",
            "cve": null,
            "id": "pyup.io-25943",
            "specs": [
                "<3.1.2"
            ],
            "v": "<3.1.2"
        },
        {
            "advisory": "Pillow before 3.3.2 allows context-dependent attackers to execute arbitrary code by using the \"crafted image file\" approach, related to an \"Insecure Sign Extension\" issue affecting the ImagingNew in Storage.c component.",
            "cve": "CVE-2016-9190",
            "id": "pyup.io-33138",
            "specs": [
                "<3.3.2"
            ],
            "v": "<3.3.2"
        },
        {
            "advisory": "Pillow before 3.3.2 allows context-dependent attackers to obtain sensitive information by using the \"crafted image file\" approach, related to an \"Integer Overflow\" issue affecting the Image.core.map_buffer in map.c component.",
            "cve": "CVE-2016-9189",
            "id": "pyup.io-33139",
            "specs": [
                "<3.3.2"
            ],
            "v": "<3.3.2"
        }
    ],
    "pillow-simd": [
        {
            "advisory": "pillow-simd before 2.3.2 is vulnerable to CVE-2014-3598, a DOS in the Jpeg2KImagePlugin and CVE-2014-3589, a DOS in the IcnsImagePlugin.",
            "cve": null,
            "id": "pyup.io-25947",
            "specs": [
                "<2.3.2"
            ],
            "v": "<2.3.2"
        },
        {
            "advisory": "pillow-simd before 2.5.2 is vulnerable to CVE-2014-3598, a DOS in the Jpeg2KImagePlugin and CVE-2014-3589, a DOS in the IcnsImagePlugin.",
            "cve": null,
            "id": "pyup.io-25948",
            "specs": [
                "<2.5.2"
            ],
            "v": "<2.5.2"
        },
        {
            "advisory": "pillow-simd before 2.5.3 is vulnerable to CVE-2014-3598, a DOS in the Jpeg2KImagePlugin and CVE-2014-3589, a DOS in the IcnsImagePlugin.",
            "cve": null,
            "id": "pyup.io-25949",
            "specs": [
                "<2.5.3"
            ],
            "v": "<2.5.3"
        },
        {
            "advisory": "pillow-simd before 2.6.0rc1 is vulnerable to CVE-2014-3598, a DOS in the Jpeg2KImagePlugin and CVE-2014-3589, a DOS in the IcnsImagePlugin.",
            "cve": null,
            "id": "pyup.io-25950",
            "specs": [
                "<2.6.0rc1"
            ],
            "v": "<2.6.0rc1"
        },
        {
            "advisory": "pillow-simd before 2.6.2 is vulnerable to a PNG decompression DoS (CVE-2014-9601).",
            "cve": null,
            "id": "pyup.io-25951",
            "specs": [
                "<2.6.2"
            ],
            "v": "<2.6.2"
        },
        {
            "advisory": "pillow-simd before 2.7.0 is vulnerable to a PNG decompression DoS (CVE-2014-9601).",
            "cve": null,
            "id": "pyup.io-25952",
            "specs": [
                "<2.7.0"
            ],
            "v": "<2.7.0"
        },
        {
            "advisory": "pillow-simd before 3.1.1 is vulnerable to multiple buffer overlows in Resample.c, PcdDecode.c, FliDecode.c and TiffDecode.c.",
            "cve": null,
            "id": "pyup.io-25953",
            "specs": [
                "<3.1.1"
            ],
            "v": "<3.1.1"
        },
        {
            "advisory": "pillow-simd before 3.1.2 is vulnerable to an integer overflow in Jpeg2KEncode.c causing a buffer overflow. CVE-2016-3076.",
            "cve": null,
            "id": "pyup.io-25954",
            "specs": [
                "<3.1.2"
            ],
            "v": "<3.1.2"
        }
    ],
    "pinax-likes": [
        {
            "advisory": "pinax-likes before 0.3 allows users to like anything and everything, which could potentially lead to security problems (eg. liking entries in permission tables, and thus seeing their content; liking administrative users and thus getting their username).",
            "cve": null,
            "id": "pyup.io-25955",
            "specs": [
                "<0.3"
            ],
            "v": "<0.3"
        }
    ],
    "pip": [
        {
            "advisory": "pip before 1.3 uses HTTP to retrieve packages from the PyPI repository, and does not perform integrity checks on package contents, which allows man-in-the-middle attackers to execute arbitrary code via a crafted response to a \"pip install\" operation.",
            "cve": "CVE-2013-1629",
            "id": "pyup.io-33140",
            "specs": [
                "<1.3"
            ],
            "v": "<1.3"
        },
        {
            "advisory": "pip before 1.3 allows local users to overwrite arbitrary files via a symlink attack on a file in the /tmp/pip-build temporary directory.",
            "cve": "CVE-2013-1888",
            "id": "pyup.io-33141",
            "specs": [
                "<1.3"
            ],
            "v": "<1.3"
        },
        {
            "advisory": "pip 1.4 includes a security patch to pip's ssl support related to certificate DNS wildcard matching.",
            "cve": null,
            "id": "pyup.io-25959",
            "specs": [
                "<1.4"
            ],
            "v": "<1.4"
        },
        {
            "advisory": "pip before 6.0 is not using a randomized and secure default build directory when possible. (CVE-2014-8991).",
            "cve": null,
            "id": "pyup.io-25960",
            "specs": [
                "<6.0"
            ],
            "v": "<6.0"
        },
        {
            "advisory": "pip before 6.1.0 bundles a request release with a known security vulnerability. See  CVE-2015-2296.",
            "cve": null,
            "id": "pyup.io-25961",
            "specs": [
                "<6.1.0"
            ],
            "v": "<6.1.0"
        }
    ],
    "pirate-get": [
        {
            "advisory": "pirate-get before 0.2.8 is not properly validating torrent file names.\r\n\r\n- https://github.com/vikstrous/pirate-get/issues/73",
            "cve": null,
            "id": "pyup.io-34168",
            "specs": [
                "<0.2.8"
            ],
            "v": "<0.2.8"
        }
    ],
    "pkgcore": [
        {
            "advisory": "pkgcore 0.4.7.12 includes a security fix; force cwd to something controlled for ebuild env.  This blocks an attack detailed in glsa 200810-02; namely that an ebuild invoking python -c (which looks in cwd for modules to load) allows for an attacker to slip something in.",
            "cve": null,
            "id": "pyup.io-25962",
            "specs": [
                "<0.4.7.12"
            ],
            "v": "<0.4.7.12"
        }
    ],
    "plomino": [
        {
            "advisory": "plomino before 1.18 has a major vulnerability in open_url (now, targeted sources must be declared safe from an local package).",
            "cve": null,
            "id": "pyup.io-25963",
            "specs": [
                "<1.18"
            ],
            "v": "<1.18"
        },
        {
            "advisory": "plomino 1.5.3 includes a security fix: when a group has PlominoAuthors rights, members of this group are just authors on their own documents.",
            "cve": null,
            "id": "pyup.io-25964",
            "specs": [
                "<1.5.3"
            ],
            "v": "<1.5.3"
        }
    ],
    "plone": [
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in skins/plone_templates/default_error_message.pt in Plone before 2.5.3 allows remote attackers to inject arbitrary web script or HTML via the type_name parameter to Members/ipa/createObject.",
            "cve": "CVE-2011-1340",
            "id": "pyup.io-25966",
            "specs": [
                "<2.5.3"
            ],
            "v": "<2.5.3"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in PortalTransforms in Plone 2.1 through 3.3.4 before hotfix 20100612 allows remote attackers to inject arbitrary web script or HTML via the safe_html transform.",
            "cve": "CVE-2010-2422",
            "id": "pyup.io-25967",
            "specs": [
                "<3.3.4"
            ],
            "v": "<3.3.4"
        },
        {
            "advisory": "kupu_spellcheck.py in Kupu in Plone before 4.0 allows remote attackers to cause a denial of service (ZServer thread lock) via a crafted URL.",
            "cve": "CVE-2012-5496",
            "id": "pyup.io-33143",
            "specs": [
                "<4.0"
            ],
            "v": "<4.0"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in Plone 4.1 and earlier allows remote attackers to inject arbitrary web script or HTML via a crafted URL.",
            "cve": "CVE-2011-1948",
            "id": "pyup.io-25972",
            "specs": [
                "<4.1"
            ],
            "v": "<4.1"
        },
        {
            "advisory": "Plone 4.1.3 and earlier computes hash values for form parameters without restricting the ability to trigger hash collisions predictably, which allows remote attackers to cause a denial of service (CPU consumption) by sending many crafted parameters.",
            "cve": "CVE-2011-4462",
            "id": "pyup.io-25973",
            "specs": [
                "<4.1.3"
            ],
            "v": "<4.1.3"
        },
        {
            "advisory": "plone.app.users in Plone 4.0 and 4.1 allows remote authenticated users to modify the properties of arbitrary accounts via unspecified vectors, as exploited in the wild in June 2011.",
            "cve": "CVE-2011-1950",
            "id": "pyup.io-25974",
            "specs": [
                "<4.2"
            ],
            "v": "<4.2"
        },
        {
            "advisory": "ftp.py in Plone before 4.2.3 and 4.3 before beta 1 allows remote attackers to read hidden folder contents via unspecified vectors.",
            "cve": "CVE-2012-5503",
            "id": "pyup.io-25999",
            "specs": [
                "<4.2.3",
                "<4.3b1"
            ],
            "v": "<4.2.3,<4.3b1"
        },
        {
            "advisory": "ZPublisher.HTTPRequest._scrubHeader in Zope 2 before 2.13.19, as used in Plone before 4.3 beta 1, allows remote attackers to inject arbitrary HTTP headers via a linefeed (LF) character.",
            "cve": "CVE-2012-5486",
            "id": "pyup.io-25996",
            "specs": [
                "<4.3"
            ],
            "v": "<4.3"
        },
        {
            "advisory": "Unspecified vulnerability in (1) Zope 2.12.x before 2.12.19 and 2.13.x before 2.13.8, as used in Plone 4.x and other products, and (2) PloneHotfix20110720 for Plone 3.x allows attackers to gain privileges via unspecified vectors, related to a \"highly serious vulnerability.\" NOTE: this vulnerability exists because of an incorrect fix for CVE-2011-0720.",
            "cve": "CVE-2011-2528",
            "id": "pyup.io-25965",
            "specs": [
                "==3.3.5,==3.3.4,==3.3.3,==3.3.2"
            ],
            "v": "==3.3.5,==3.3.4,==3.3.3,==3.3.2"
        },
        {
            "advisory": "Unspecified vulnerability in Zope 2.12.x and 2.13.x, as used in Plone 4.0.x through 4.0.9, 4.1, and 4.2 through 4.2a2, allows remote attackers to execute arbitrary commands via vectors related to the p_ class in OFS/misc_.py and the use of Python modules.",
            "cve": "CVE-2011-3587",
            "id": "pyup.io-33144",
            "specs": [
                ">4,<4.2a2"
            ],
            "v": ">4,<4.2a2"
        },
        {
            "advisory": "Plone 4.x through 4.3.11 and 5.x through 5.0.6 allow remote attackers to bypass a sandbox protection mechanism and obtain sensitive information by leveraging the Python string format method.",
            "cve": "CVE-2017-5524",
            "id": "pyup.io-35733",
            "specs": [
                ">4,<=4.3.11",
                ">5,<=5.0.6"
            ],
            "v": ">4,<=4.3.11,>5,<=5.0.6"
        },
        {
            "advisory": "By linking to a specific url in Plone 2.5-5.1rc1 with a parameter, an attacker could send you to his own website. On its own this is not so bad: the attacker could more easily link directly to his own website instead. But in combination with another attack, you could be sent to the Plone login form and login, then get redirected to the specific url, and then get a second redirect to the attacker website. (The specific url can be seen by inspecting the hotfix code, but we don't want to make it too easy for attackers by spelling it out here.)",
            "cve": "CVE-2017-1000484",
            "id": "pyup.io-35704",
            "specs": [
                ">4,<=4.3.15",
                ">=5.0,<5.1rc1"
            ],
            "v": ">4,<=4.3.15,>=5.0,<5.1rc1"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in the safe_html filter in Products.PortalTransforms in Plone 2.1 through 4.1 allows remote authenticated users to inject arbitrary web script or HTML via unspecified vectors, a different vulnerability than CVE-2010-2422.",
            "cve": "CVE-2011-1949",
            "id": "pyup.io-25997",
            "specs": [
                ">=2.1,<4.2"
            ],
            "v": ">=2.1,<4.2"
        },
        {
            "advisory": "Unspecified vulnerability in Plone 2.5 through 4.0, as used in Conga, luci, and possibly other products, allows remote attackers to obtain administrative access, read or create arbitrary content, and change the site skin via unknown vectors.",
            "cve": "CVE-2011-0720",
            "id": "pyup.io-33142",
            "specs": [
                ">=2.5,<4.0"
            ],
            "v": ">=2.5,<4.0"
        },
        {
            "advisory": "The CMFEditions component 2.x in Plone 4.0.x through 4.0.9, 4.1, and 4.2 through 4.2a2 does not prevent the KwAsAttributes classes from being publishable, which allows remote attackers to access sub-objects via unspecified vectors, a different vulnerability than CVE-2011-3587.",
            "cve": "CVE-2011-4030",
            "id": "pyup.io-33145",
            "specs": [
                ">=4,<4.2a2"
            ],
            "v": ">=4,<4.2a2"
        }
    ],
    "plone-app-contenttypes": [
        {
            "advisory": "plone-app-contenttypes 1.2.15 fixes a possible cross site scripting (XSS) attack in lead image caption.",
            "cve": null,
            "id": "pyup.io-35870",
            "specs": [
                "<1.2.15"
            ],
            "v": "<1.2.15"
        }
    ],
    "plone-app-discussion": [
        {
            "advisory": "plone-app-discussion 2.4.14 fixes a possible cross site scripting (XSS) attack on moderate comments page.",
            "cve": null,
            "id": "pyup.io-35864",
            "specs": [
                "<2.4.14"
            ],
            "v": "<2.4.14"
        }
    ],
    "plone-app-event": [
        {
            "advisory": "plone-app-event  3.0 fixes a possible cross site scripting (XSS) attack in location field.",
            "cve": null,
            "id": "pyup.io-35923",
            "specs": [
                "<3.0"
            ],
            "v": "<3.0"
        }
    ],
    "plone-app-users": [
        {
            "advisory": "plone-app-users before 1.0.5 does not check for permission when editing other users' profiles.\r\n  This fixes http://dev.plone.org/plone/ticket/11842 and\r\n  http://plone.org/products/plone/security/advisories/CVE-2011-1950",
            "cve": null,
            "id": "pyup.io-36096",
            "specs": [
                "<1.0.5"
            ],
            "v": "<1.0.5"
        }
    ],
    "plone-dexterity": [
        {
            "advisory": "In plone-dexterity before 2.3.0 Attribute access to schema fields can be protected. This\r\n  worked for direct schemas, but was not implemented for permissions coming\r\n  from behaviors.",
            "cve": null,
            "id": "pyup.io-35873",
            "specs": [
                "<2.3.0"
            ],
            "v": "<2.3.0"
        }
    ],
    "plone.app.content": [
        {
            "advisory": "plone.app.content 3.3.1 includes security hotfix 20160830 for folder factories redirection.",
            "cve": null,
            "id": "pyup.io-26000",
            "specs": [
                "<3.3.1"
            ],
            "v": "<3.3.1"
        }
    ],
    "plone.app.contentmenu": [
        {
            "advisory": "plone.app.contentmenu 1.1.7 fixes a potential xss attack and http://dev.plone.org/plone/ticket/8377.",
            "cve": null,
            "id": "pyup.io-26001",
            "specs": [
                "<1.1.7"
            ],
            "v": "<1.1.7"
        }
    ],
    "plone.app.contenttypes": [
        {
            "advisory": "plone.app.contenttypes 1.2.15 fixes a possible cross site scripting (XSS) attack in lead image caption.",
            "cve": null,
            "id": "pyup.io-26002",
            "specs": [
                "<1.2.15"
            ],
            "v": "<1.2.15"
        }
    ],
    "plone.app.discussion": [
        {
            "advisory": "plone.app.discussion 2.4.14 fixes a possible cross site scripting (XSS) attack on moderate comments page.",
            "cve": null,
            "id": "pyup.io-26003",
            "specs": [
                "<2.4.14"
            ],
            "v": "<2.4.14"
        },
        {
            "advisory": "plone.app.discussion 2.4.18 includes security hotfix 20160830 for redirects.",
            "cve": null,
            "id": "pyup.io-26004",
            "specs": [
                "<2.4.18"
            ],
            "v": "<2.4.18"
        }
    ],
    "plone.app.event": [
        {
            "advisory": "plone.app.event 3.0 fixes a possible cross site scripting (XSS) attack in location field",
            "cve": null,
            "id": "pyup.io-26005",
            "specs": [
                "<3.0"
            ],
            "v": "<3.0"
        }
    ],
    "plone.app.linkintegrity": [
        {
            "advisory": "plone.app.linkintegrity 1.0.2 fixed security issue due to using pickles (see CVE-2007-5741).",
            "cve": null,
            "id": "pyup.io-26006",
            "specs": [
                "<1.0.2"
            ],
            "v": "<1.0.2"
        }
    ],
    "plone.dexterity": [
        {
            "advisory": "plone.dexterity 2.3.0 fixes a security issue. Attribute access to schema fields can be protected. This worked for direct schemas, but was not implemented for permissions coming from behaviors.",
            "cve": null,
            "id": "pyup.io-26007",
            "specs": [
                "<2.3.0"
            ],
            "v": "<2.3.0"
        }
    ],
    "plone.formwidget.contenttree": [
        {
            "advisory": "plone.formwidget.contenttree 1.0a3 fixes an issues with the security validator to work properly on add views and other views using namespace traversal.",
            "cve": null,
            "id": "pyup.io-26008",
            "specs": [
                "<1.0a3"
            ],
            "v": "<1.0a3"
        }
    ],
    "plone.mockup": [
        {
            "advisory": "plone.mockup before 2.1.3 is vulnerable to a XSS attack in structure and relateditem pattern.",
            "cve": null,
            "id": "pyup.io-26009",
            "specs": [
                "<2.1.3"
            ],
            "v": "<2.1.3"
        }
    ],
    "plone.openid": [
        {
            "advisory": "plone.openid before 2.0.2 is not using the system number generator, even if it is available.",
            "cve": null,
            "id": "pyup.io-26010",
            "specs": [
                "<2.0.2"
            ],
            "v": "<2.0.2"
        }
    ],
    "plumi.app": [
        {
            "advisory": "plumi.app 4.2 includes a security hotfix related to  LinguaPlone & plone.app.discussion.",
            "cve": null,
            "id": "pyup.io-26011",
            "specs": [
                "<4.2"
            ],
            "v": "<4.2"
        },
        {
            "advisory": "plumi.app before 4.2.1 uses a insecure transitive dependency (plone<4.0.7).",
            "cve": null,
            "id": "pyup.io-26012",
            "specs": [
                "<4.2.1"
            ],
            "v": "<4.2.1"
        },
        {
            "advisory": "plumi.app 4.2.2 patches a serious security vulnerability/",
            "cve": null,
            "id": "pyup.io-26013",
            "specs": [
                "<4.2.2"
            ],
            "v": "<4.2.2"
        }
    ],
    "pmr2.oauth": [
        {
            "advisory": "pmr2.oauth before 0.4.2 is vulnerable to CSRF attacks.",
            "cve": null,
            "id": "pyup.io-26014",
            "specs": [
                "<0.4.2"
            ],
            "v": "<0.4.2"
        }
    ],
    "poorwsgi": [
        {
            "advisory": "poorwsgi 1.0.2 includes several security related enhancements related to secret key generation.",
            "cve": null,
            "id": "pyup.io-26015",
            "specs": [
                "<1.0.2"
            ],
            "v": "<1.0.2"
        }
    ],
    "pootle": [
        {
            "advisory": "pootle before 2.8.0rc5 is vulnerable to several undisclosed security vulnerabilites.",
            "cve": null,
            "id": "pyup.io-34211",
            "specs": [
                "<2.8.0rc5"
            ],
            "v": "<2.8.0rc5"
        },
        {
            "advisory": "pootle before 2.8.0rc6 has multiple, undisclosed, security vulnerabilites that were found during an audit.",
            "cve": null,
            "id": "pyup.io-34790",
            "specs": [
                "<2.8.0rc6"
            ],
            "v": "<2.8.0rc6"
        },
        {
            "advisory": "pootle before 2.7.3 is vulnerable to XSS attacks, so everybody with Pootle 2.7.x needs to upgrade.",
            "cve": null,
            "id": "pyup.io-34201",
            "specs": [
                ">=2.6,<2.7.3"
            ],
            "v": ">=2.6,<2.7.3"
        }
    ],
    "pretaweb.healthcheck": [
        {
            "advisory": "pretaweb.healthcheck before 1.0 is vulnerable to DoS attacks.",
            "cve": null,
            "id": "pyup.io-26016",
            "specs": [
                "<1.0"
            ],
            "v": "<1.0"
        }
    ],
    "priority": [
        {
            "advisory": "priority before 1.2.0 is vulnerable to a denial of service attack whereby a remote peer can cause a user to insert an unbounded number of streams into the priority tree, eventually consuming all available memory.",
            "cve": null,
            "id": "pyup.io-26017",
            "specs": [
                "<1.2.0"
            ],
            "v": "<1.2.0"
        }
    ],
    "products-cmfcore": [
        {
            "advisory": "products-cmfcore 2.1.0beta2 adds POST-only protections to security critical methods.\r\n  http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-0240)",
            "cve": null,
            "id": "pyup.io-36125",
            "specs": [
                "<2.1.0beta2"
            ],
            "v": "<2.1.0beta2"
        }
    ],
    "products-ploneformgen": [
        {
            "advisory": "products-ploneformgen before 1.8.1 has a XSS vulnerability that could be exploited by users with the ability\r\n  to create forms.",
            "cve": null,
            "id": "pyup.io-35878",
            "specs": [
                "<1.8.1"
            ],
            "v": "<1.8.1"
        }
    ],
    "products.cmfcontentpanels": [
        {
            "advisory": "products.cmfcontentpanels before 1.4.1 has two not disclosed security issues.",
            "cve": null,
            "id": "pyup.io-26020",
            "specs": [
                "<1.4.1"
            ],
            "v": "<1.4.1"
        }
    ],
    "products.cmfcore": [
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in Zope 2.10.2 and earlier allows remote attackers to inject arbitrary web script or HTML via unspecified vectors in a HTTP GET request.",
            "cve": "CVE-2007-0240",
            "id": "pyup.io-35820",
            "specs": [
                "<2.1.0beta2"
            ],
            "v": "<2.1.0beta2"
        }
    ],
    "products.cmfplone": [
        {
            "advisory": "In Products.CMFPlone before 5.1b1, it's possible to access private content via str.format in through-the-web templates and scripts.",
            "cve": null,
            "id": "pyup.io-32997",
            "specs": [
                "<5.1b1"
            ],
            "v": "<5.1b1"
        }
    ],
    "products.cmfquickinstallertool": [
        {
            "advisory": "products.cmfquickinstallertool before 3.0.14 is vulnerable to several cross site scripting (XSS) attacks.",
            "cve": null,
            "id": "pyup.io-26021",
            "specs": [
                "<3.0.14"
            ],
            "v": "<3.0.14"
        }
    ],
    "products.ldapuserfolder": [
        {
            "advisory": "The authenticate function in LDAPUserFolder/LDAPUserFolder.py in zope-ldapuserfolder 2.9-1 does not verify the password for the emergency account, which allows remote attackers to gain privileges.",
            "cve": null,
            "id": "pyup.io-33148",
            "specs": [
                "<2.19"
            ],
            "v": "<2.19"
        },
        {
            "advisory": "The authenticate function in LDAPUserFolder/LDAPUserFolder.py in zope-ldapuserfolder 2.9-1 does not verify the password for the emergency account, which allows remote attackers to gain privileges.",
            "cve": "CVE-2010-2944",
            "id": "pyup.io-26023",
            "specs": [
                "==2.9"
            ],
            "v": "==2.9"
        }
    ],
    "products.ploneformgen": [
        {
            "advisory": "products.ploneformgen before 1.8.1 is vulnerable to a XSS attack that could be exploited by users with the ability to create forms.",
            "cve": null,
            "id": "pyup.io-26024",
            "specs": [
                "<1.8.1"
            ],
            "v": "<1.8.1"
        }
    ],
    "products.plonepas": [
        {
            "advisory": "The PlonePAS product 3.x before 3.9 and 3.2.x before 3.2.2, a product for Plone, does not properly handle the login form, which allows remote authenticated users to acquire the identity of an arbitrary user via unspecified vectors.",
            "cve": "CVE-2009-0662",
            "id": "pyup.io-33149",
            "specs": [
                ">3.2.2,<3.9"
            ],
            "v": ">3.2.2,<3.9"
        }
    ],
    "products.poi": [
        {
            "advisory": "products.poi before 2.2.3 allows anonymous users to see issues inside private folders.",
            "cve": null,
            "id": "pyup.io-26027",
            "specs": [
                "<2.2.3"
            ],
            "v": "<2.2.3"
        }
    ],
    "ptah": [
        {
            "advisory": "ptah before 0.3.3 is vulnerable to a undisclosed attack.",
            "cve": null,
            "id": "pyup.io-26028",
            "specs": [
                "<0.3.3"
            ],
            "v": "<0.3.3"
        }
    ],
    "pwd": [
        {
            "advisory": "pwd  is a package affected by pytosquatting: http://www.nbu.gov.sk/skcsirt-sa-20170909-pypi/",
            "cve": null,
            "id": "pyup.io-34983",
            "specs": [
                ">0",
                "<0"
            ],
            "v": ">0,<0"
        }
    ],
    "pwman3": [
        {
            "advisory": "pwman3 before 0.4.0 uses cPickle.loads and cPickle.dumps.",
            "cve": null,
            "id": "pyup.io-26029",
            "specs": [
                "<0.4.0"
            ],
            "v": "<0.4.0"
        }
    ],
    "py3web": [
        {
            "advisory": "py3web before 0.21 isn't checking for bad characters in headers.",
            "cve": null,
            "id": "pyup.io-32919",
            "specs": [
                "<0.21"
            ],
            "v": "<0.21"
        }
    ],
    "pyamf": [
        {
            "advisory": "pyamf 0.8 fixes a security issue and now wrappes all xml parsing in ``defusedxml`` to protect against any XML entity attacks. See https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Processing for more details. Thanks to Nicolas Gr\u00e9goire (Agarri_FR) for the report.",
            "cve": null,
            "id": "pyup.io-34622",
            "specs": [
                "<0.8"
            ],
            "v": "<0.8"
        }
    ],
    "pyanyapi": [
        {
            "advisory": "An exploitable vulnerability exists in the YAML parsing functionality in the YAMLParser method in Interfaces.py in PyAnyAPI before 0.6.1. A YAML parser can execute arbitrary Python commands resulting in command execution because load is used where safe_load should have been used. An attacker can insert Python into loaded YAML to trigger this vulnerability.",
            "cve": "CVE-2017-16616",
            "id": "pyup.io-35719",
            "specs": [
                "<0.6.1"
            ],
            "v": "<0.6.1"
        }
    ],
    "pycapnp": [
        {
            "advisory": "pycapnp before 0.5.5 bundled an insecure library (libcapnp).",
            "cve": null,
            "id": "pyup.io-26030",
            "specs": [
                "<0.5.5"
            ],
            "v": "<0.5.5"
        }
    ],
    "pycares": [
        {
            "advisory": "pycares before 2.1.1 is vulnerable to CVE-2016-5180.",
            "cve": null,
            "id": "pyup.io-26031",
            "specs": [
                "<2.1.1"
            ],
            "v": "<2.1.1"
        }
    ],
    "pycrypto": [
        {
            "advisory": "In the ElGamal schemes (for both encryption and signatures), g is supposed to be the generator of the entire Z^*_p group.  However, in PyCrypto 2.5 and earlier, g is more simply the generator of a random sub-group of Z^*_p.",
            "cve": null,
            "id": "pyup.io-26032",
            "specs": [
                "<2.6"
            ],
            "v": "<2.6"
        },
        {
            "advisory": "The Crypto.Random.atfork function in PyCrypto before 2.6.1 does not properly reseed the pseudo-random number generator (PRNG) before allowing a child process to access it, which makes it easier for context-dependent attackers to obtain sensitive information by leveraging a race condition in which a child process is created and accesses the PRNG within the same rate-limit period as another process.",
            "cve": "CVE-2013-1445",
            "id": "pyup.io-33150",
            "specs": [
                "<2.6.1"
            ],
            "v": "<2.6.1"
        },
        {
            "advisory": "lib/Crypto/PublicKey/ElGamal.py in PyCrypto through 2.6.1 generates weak ElGamal key parameters, which allows attackers to obtain sensitive information by reading ciphertext data (i.e., it does not have semantic security in face of a ciphertext-only attack). The Decisional Diffie-Hellman (DDH) assumption does not hold for PyCrypto's ElGamal implementation.",
            "cve": "CVE-2018-6594",
            "id": "pyup.io-35765",
            "specs": [
                "<2.6.1"
            ],
            "v": "<2.6.1"
        },
        {
            "advisory": "Heap-based buffer overflow in the ALGnew function in block_templace.c in Python Cryptography Toolkit (aka pycrypto) 2.6.1 allows remote attackers to execute arbitrary code as demonstrated by a crafted iv parameter to cryptmsg.py.",
            "cve": "CVE-2013-7459",
            "id": "pyup.io-35015",
            "specs": [
                "<=2.6.1"
            ],
            "v": "<=2.6.1"
        }
    ],
    "pydal": [
        {
            "advisory": "pydal before 15.02.27 has a security flaw which could lead to db password storing in cache.",
            "cve": null,
            "id": "pyup.io-33022",
            "specs": [
                "<15.02.27"
            ],
            "v": "<15.02.27"
        }
    ],
    "pyftpdlib": [
        {
            "advisory": "pyftpdlib before 0.3.0 has a path traversal vulnerability in case of symbolic links escaping user's home directory.",
            "cve": null,
            "id": "pyup.io-26036",
            "specs": [
                "<0.3.0"
            ],
            "v": "<0.3.0"
        },
        {
            "advisory": "Race condition in the FTPHandler class in ftpserver.py in pyftpdlib before 0.5.1 allows remote attackers to cause a denial of service (daemon outage) by establishing and then immediately closing a TCP connection, leading to the accept function having an unexpected return value of None, a different vulnerability than CVE-2010-3494.",
            "cve": "CVE-2009-5010",
            "id": "pyup.io-26037",
            "specs": [
                "<0.5.1"
            ],
            "v": "<0.5.1"
        },
        {
            "advisory": "Race condition in the FTPHandler class in ftpserver.py in pyftpdlib before 0.5.2 allows remote attackers to cause a denial of service (daemon outage) by establishing and then immediately closing a TCP connection, leading to the accept function having an unexpected value of None for the address, or an ECONNABORTED, EAGAIN, or EWOULDBLOCK error, a related issue to CVE-2010-3492.",
            "cve": "CVE-2010-3494",
            "id": "pyup.io-26038",
            "specs": [
                "<0.5.2"
            ],
            "v": "<0.5.2"
        }
    ],
    "pygresql": [
        {
            "advisory": "The pygresql module 3.8.1 and 4.0 for Python does not properly support the PQescapeStringConn function, which might allow remote attackers to leverage escaping issues involving multibyte character encodings.",
            "cve": "CVE-2009-2940",
            "id": "pyup.io-26039",
            "specs": [
                "<4.0"
            ],
            "v": "<4.0"
        }
    ],
    "pyjwt": [
        {
            "advisory": "pyjwt before 1.0.0  allows to bypass signature verification by setting the alg header to None.",
            "cve": null,
            "id": "pyup.io-26040",
            "specs": [
                "<1.0.0"
            ],
            "v": "<1.0.0"
        },
        {
            "advisory": "In PyJWT 1.5.0 and below the `invalid_strings` check in `HMACAlgorithm.prepare_key` does not account for all PEM encoded public keys. Specifically, the PKCS1 PEM encoded format would be allowed because it is prefaced with the string `-----BEGIN RSA PUBLIC KEY-----` which is not accounted for. This enables symmetric/asymmetric key confusion attacks against users using the PKCS1 PEM encoded public keys, which would allow an attacker to craft JWTs from scratch.",
            "cve": null,
            "id": "pyup.io-35014",
            "specs": [
                "<1.5.1"
            ],
            "v": "<1.5.1"
        }
    ],
    "pyldap": [
        {
            "advisory": "pyldap before 2.0.0pre05 is using an insecure transitive dependency (ldapurl).",
            "cve": null,
            "id": "pyup.io-26041",
            "specs": [
                "<2.0.0pre05"
            ],
            "v": "<2.0.0pre05"
        }
    ],
    "pylons": [
        {
            "advisory": "pylons before 0.9.6.1 allows to access private controller methods to be accessed from the outside.",
            "cve": null,
            "id": "pyup.io-26042",
            "specs": [
                "<0.9.6.1"
            ],
            "v": "<0.9.6.1"
        },
        {
            "advisory": "pylons before 0.9.7 is vulnerable to a XSS attack on the default error page.",
            "cve": null,
            "id": "pyup.io-26043",
            "specs": [
                "<0.9.7"
            ],
            "v": "<0.9.7"
        },
        {
            "advisory": "pylons before 1.0.1RC1 is vulnerable to timing attacks on secure cookies.",
            "cve": null,
            "id": "pyup.io-26044",
            "specs": [
                "<1.0.1RC1"
            ],
            "v": "<1.0.1RC1"
        },
        {
            "advisory": "pylons before 1.0.1rc1 is vulnerable to cookie timing attacks.",
            "cve": null,
            "id": "pyup.io-26045",
            "specs": [
                "<1.0.1rc1"
            ],
            "v": "<1.0.1rc1"
        },
        {
            "advisory": "pylons before 1.0.2 includes \"Post Traceback\" which is a possible XSS vector.",
            "cve": null,
            "id": "pyup.io-26046",
            "specs": [
                "<1.0.2"
            ],
            "v": "<1.0.2"
        }
    ],
    "pymemcache": [
        {
            "advisory": "pymemcache before 1.3.6 isn't sanitizing key inputs.",
            "cve": null,
            "id": "pyup.io-26047",
            "specs": [
                "<1.3.6"
            ],
            "v": "<1.3.6"
        }
    ],
    "pymongo": [
        {
            "advisory": "bson/_cbsonmodule.c in the mongo-python-driver (aka. pymongo) before 2.5.2, as used in MongoDB, allows context-dependent attackers to cause a denial of service (NULL pointer dereference and crash) via vectors related to decoding of an \"invalid DBRef.\"",
            "cve": "CVE-2013-2132",
            "id": "pyup.io-35429",
            "specs": [
                "<2.5.2"
            ],
            "v": "<2.5.2"
        }
    ],
    "pyopenssl": [
        {
            "advisory": "The X509Extension in pyOpenSSL before 0.13.1 does not properly handle a '\\0' character in a domain name in the Subject Alternative Name field of an X.509 certificate, which allows man-in-the-middle attackers to spoof arbitrary SSL servers via a crafted certificate issued by a legitimate Certification Authority.",
            "cve": "CVE-2013-4314",
            "id": "pyup.io-35460",
            "specs": [
                "<0.13.1"
            ],
            "v": "<0.13.1"
        }
    ],
    "pyorient": [
        {
            "advisory": "pyorient before 1.4.9 has an SQL injection attack vector, exploitable in one location and potentially a few more, that allowed an attacker to change the WHERE clause in a query and cause it to return unexpected results",
            "cve": null,
            "id": "pyup.io-34150",
            "specs": [
                "<1.4.9"
            ],
            "v": "<1.4.9"
        }
    ],
    "pypicloud": [
        {
            "advisory": "pypicloud before 0.2.2 is vulnerable to a undisclosed attack.",
            "cve": null,
            "id": "pyup.io-26048",
            "specs": [
                "<0.2.2"
            ],
            "v": "<0.2.2"
        }
    ],
    "pypiserver": [
        {
            "advisory": "pypiserver before 1.1.7 is vulnerable to XSS attacks.",
            "cve": null,
            "id": "pyup.io-26049",
            "specs": [
                "<1.1.7"
            ],
            "v": "<1.1.7"
        }
    ],
    "pyrad": [
        {
            "advisory": "pyrad before 0.6 isn't handling timeouts in client module correctly, leading to a potential denial of service.",
            "cve": null,
            "id": "pyup.io-26050",
            "specs": [
                "<0.6"
            ],
            "v": "<0.6"
        }
    ],
    "pyramid": [
        {
            "advisory": "pyramid before 1.6a2 isn't sanitising JSONP callbacks correctly, see CVE-2014-4671.",
            "cve": null,
            "id": "pyup.io-32204",
            "specs": [
                "<1.6a2"
            ],
            "v": "<1.6a2"
        }
    ],
    "pyramid-odesk": [
        {
            "advisory": "pyramid-odesk before 1.1.2 performs logins and logouts through GET and is vulnerable to CSRF attacks.",
            "cve": null,
            "id": "pyup.io-26051",
            "specs": [
                "<1.1.2"
            ],
            "v": "<1.1.2"
        }
    ],
    "pyramid-weblayer": [
        {
            "advisory": "pyramid-weblayer before 0.12 does not protect AJAX requests through the CSRF machinery.",
            "cve": null,
            "id": "pyup.io-26052",
            "specs": [
                "<0.12"
            ],
            "v": "<0.12"
        }
    ],
    "pysam": [
        {
            "advisory": "pysam  0.11.2 wraps htslib/samtools/bcfools versions 1.4.1 in response to a security fix in these libraries",
            "cve": null,
            "id": "pyup.io-34332",
            "specs": [
                "<0.11.2"
            ],
            "v": "<0.11.2"
        }
    ],
    "pysaml2": [
        {
            "advisory": "PySAML2 allows remote attackers to conduct XML external entity (XXE) attacks via a crafted SAML XML request or response.",
            "cve": "CVE-2016-10127",
            "id": "pyup.io-35659",
            "specs": [
                "<4.4.0"
            ],
            "v": "<4.4.0"
        },
        {
            "advisory": "XML External Entity (XXE) vulnerability in PySAML2 4.4.0 and earlier allows remote attackers to read arbitrary files via a crafted SAML XML request or response.",
            "cve": "CVE-2016-10149",
            "id": "pyup.io-35660",
            "specs": [
                "<4.4.0"
            ],
            "v": "<4.4.0"
        },
        {
            "advisory": "pysaml2 version 4.4.0 and older accept any password when run with python optimizations enabled. This allows attackers to log in as any user without knowing their password.",
            "cve": "CVE-2017-1000433",
            "id": "pyup.io-35700",
            "specs": [
                "<=4.4.0"
            ],
            "v": "<=4.4.0"
        },
        {
            "advisory": "Python package pysaml2 version 4.4.0 and earlier reuses the initialization vector across encryptions in the IDP server, resulting in weak encryption of data.",
            "cve": "CVE-2017-1000246",
            "id": "pyup.io-35699",
            "specs": [
                "<=4.4.0"
            ],
            "v": "<=4.4.0"
        }
    ],
    "pysandbox": [
        {
            "advisory": "pysandbox before 1.0.2 allows access to several dict methods.",
            "cve": null,
            "id": "pyup.io-26053",
            "specs": [
                "<1.0.2"
            ],
            "v": "<1.0.2"
        },
        {
            "advisory": "pysandbox before 1.0.3 allows access to dict.__init__().",
            "cve": null,
            "id": "pyup.io-26054",
            "specs": [
                "<1.0.3"
            ],
            "v": "<1.0.3"
        },
        {
            "advisory": "pysandbox before 1.5 has several security vulnerabilities.",
            "cve": null,
            "id": "pyup.io-26055",
            "specs": [
                "<1.5"
            ],
            "v": "<1.5"
        },
        {
            "advisory": "pysandbox before 1.6 isn't setting __builtins__ to readonly when execute() is used.",
            "cve": null,
            "id": "pyup.io-26056",
            "specs": [
                "<1.6"
            ],
            "v": "<1.6"
        }
    ],
    "pyshop": [
        {
            "advisory": "pyshop before 0.7.1 uses HTTP to retrieve packages from the PyPI repository, and does not perform integrity checks on package contents, which allows man-in-the-middle attackers to execute arbitrary code via a crafted response to a download operation.",
            "cve": "CVE-2013-1630",
            "id": "pyup.io-26057",
            "specs": [
                "<0.7.1"
            ],
            "v": "<0.7.1"
        }
    ],
    "pytest-devpi-server": [
        {
            "advisory": "pytest-devpi-server before 1.1.0  uses a subshell in workspace.run.",
            "cve": null,
            "id": "pyup.io-26059",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "pytest-git": [
        {
            "advisory": "pytest-git before 1.1.0  uses a subshell in workspace.run.",
            "cve": null,
            "id": "pyup.io-26060",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "pytest-profiling": [
        {
            "advisory": "pytest-profiling before 1.1.0  uses a subshell in workspace.run.",
            "cve": null,
            "id": "pyup.io-26061",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "pytest-qt-app": [
        {
            "advisory": "pytest-qt-app before 1.1.0  uses a subshell in workspace.run.",
            "cve": null,
            "id": "pyup.io-26062",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "pytest-server-fixtures": [
        {
            "advisory": "pytest-server-fixtures before 1.1.0  uses a subshell in workspace.run.",
            "cve": null,
            "id": "pyup.io-26063",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "pytest-shutil": [
        {
            "advisory": "pytest-shutil before 1.1.0  uses a subshell in workspace.run.",
            "cve": null,
            "id": "pyup.io-26064",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "pytest-verbose-parametrize": [
        {
            "advisory": "pytest-verbose-parametrize before 1.1.0 uses a subshell in workspace.run.",
            "cve": null,
            "id": "pyup.io-26065",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "python": [
        {
            "advisory": "Integer signedness error in the zlib extension module in Python 2.5.2 and earlier allows remote attackers to execute arbitrary code via a negative signed integer, which triggers insufficient memory allocation and a buffer overflow.",
            "cve": "CVE-2008-1721",
            "id": "pyup.io-33152",
            "specs": [
                "<2.5.2"
            ],
            "v": "<2.5.2"
        },
        {
            "advisory": "Python 2.5.2 and earlier allows context-dependent attackers to execute arbitrary code via multiple vectors that cause a negative size value to be provided to the PyString_FromStringAndSize function, which allocates less memory than expected when assert() is disabled and triggers a buffer overflow.",
            "cve": "CVE-2008-1887",
            "id": "pyup.io-33153",
            "specs": [
                "<2.5.2"
            ],
            "v": "<2.5.2"
        },
        {
            "advisory": "Multiple integer overflows in imageop.c in Python before 2.5.3 allow context-dependent attackers to cause a denial of service (crash) and possibly execute arbitrary code via crafted images that trigger heap-based buffer overflows.  NOTE: this issue is due to an incomplete fix for CVE-2007-4965.",
            "cve": "CVE-2008-1679",
            "id": "pyup.io-33151",
            "specs": [
                "<2.5.3"
            ],
            "v": "<2.5.3"
        },
        {
            "advisory": "The smtplib library in CPython (aka Python) before 2.7.12, 3.x before 3.4.5, and 3.5.x before 3.5.2 does not return an error when StartTLS fails, which might allow man-in-the-middle attackers to bypass the TLS protections by leveraging a network position between the client and the registry to block the StartTLS command, aka a \"StartTLS stripping attack.\"",
            "cve": "CVE-2016-0772",
            "id": "pyup.io-33154",
            "specs": [
                "<2.7.12",
                ">=3.0,<3.4.5",
                ">=3.5,<3.5.2"
            ],
            "v": "<2.7.12,>=3.0,<3.4.5,>=3.5,<3.5.2"
        },
        {
            "advisory": "Integer overflow in the get_data function in zipimport.c in CPython (aka Python) before 2.7.12, 3.x before 3.4.5, and 3.5.x before 3.5.2 allows remote attackers to have unspecified impact via a negative data size value, which triggers a heap-based buffer overflow.",
            "cve": "CVE-2016-5636",
            "id": "pyup.io-33155",
            "specs": [
                "<2.7.12",
                ">=3.0,<3.4.5",
                ">=3.5,<3.5.2"
            ],
            "v": "<2.7.12,>=3.0,<3.4.5,>=3.5,<3.5.2"
        },
        {
            "advisory": "The list_directory function in Lib/SimpleHTTPServer.py in SimpleHTTPServer in Python before 2.5.6c1, 2.6.x before 2.6.7 rc2, and 2.7.x before 2.7.2 does not place a charset parameter in the Content-Type HTTP header, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks against Internet Explorer 7 via UTF-7 encoding.",
            "cve": "CVE-2011-4940",
            "id": "pyup.io-26069",
            "specs": [
                ">=2.6,<2.6.7",
                "<2.5.6c1",
                ">=2.7,<2.7.2"
            ],
            "v": ">=2.6,<2.6.7,<2.5.6c1,>=2.7,<2.7.2"
        },
        {
            "advisory": "Python 2.6 through 3.2 creates ~/.pypirc with world-readable permissions before changing them after data has been written, which introduces a race condition that allows local users to obtain a username and password by reading this file.",
            "cve": "CVE-2011-4944",
            "id": "pyup.io-26074",
            "specs": [
                ">=2.6,<3.3"
            ],
            "v": ">=2.6,<3.3"
        },
        {
            "advisory": "Python before 2.6.8, 2.7.x before 2.7.3, 3.x before 3.1.5, and 3.2.x before 3.2.3 computes hash values without restricting the ability to trigger hash collisions predictably, which allows context-dependent attackers to cause a denial of service (CPU consumption) via crafted input to an application that maintains a hash table.",
            "cve": "CVE-2012-1150",
            "id": "pyup.io-26071",
            "specs": [
                ">=2.7,<2.7.3",
                ">=3.0,<3.1.5",
                ">=3.2,<3.2.3",
                "<2.6.8"
            ],
            "v": ">=2.7,<2.7.3,>=3.0,<3.1.5,>=3.2,<3.2.3,<2.6.8"
        },
        {
            "advisory": "SimpleXMLRPCServer.py in SimpleXMLRPCServer in Python before 2.6.8, 2.7.x before 2.7.3, 3.x before 3.1.5, and 3.2.x before 3.2.3 allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via an XML-RPC POST request that contains a smaller amount of data than specified by the Content-Length header.",
            "cve": "CVE-2012-0845",
            "id": "pyup.io-26070",
            "specs": [
                ">=2.7,<2.7.3",
                ">=3.2,<3.2.3",
                ">=3.1,<3.1.5",
                "<2.6.8"
            ],
            "v": ">=2.7,<2.7.3,>=3.2,<3.2.3,>=3.1,<3.1.5,<2.6.8"
        },
        {
            "advisory": "The utf-16 decoder in Python 3.1 through 3.3 does not update the aligned_end variable after calling the unicode_decode_call_errorhandler function, which allows remote attackers to obtain sensitive information (process memory) or cause a denial of service (memory corruption and crash) via unspecified vectors.",
            "cve": "CVE-2012-2135",
            "id": "pyup.io-26076",
            "specs": [
                ">=3.1,<3.4"
            ],
            "v": ">=3.1,<3.4"
        },
        {
            "advisory": "The urllib and urllib2 modules in Python 2.x before 2.7.2 and 3.x before 3.2.1 process Location headers that specify redirection to file: URLs, which makes it easier for remote attackers to obtain sensitive information or cause a denial of service (resource consumption) via a crafted URL, as demonstrated by the file:///etc/passwd and file:///dev/zero URLs.",
            "cve": "CVE-2011-1521",
            "id": "pyup.io-26075",
            "specs": [
                ">=3.2,<3.2.1",
                ">=2.7,<2.7.2"
            ],
            "v": ">=3.2,<3.2.1,>=2.7,<2.7.2"
        }
    ],
    "python-augeas": [
        {
            "advisory": "python-augeas before 1.0.0 is vulnerable to cross-mountpoint and symlink attacks.",
            "cve": null,
            "id": "pyup.io-26077",
            "specs": [
                "<1.0.0"
            ],
            "v": "<1.0.0"
        }
    ],
    "python-bugzilla": [
        {
            "advisory": "python-bugzilla before 0.9.0 does not validate X.509 certificates, which allows man-in-the-middle attackers to spoof Bugzilla servers via a crafted certificate.",
            "cve": "CVE-2013-2191",
            "id": "pyup.io-35432",
            "specs": [
                "<0.9.0"
            ],
            "v": "<0.9.0"
        }
    ],
    "python-cjson": [
        {
            "advisory": "Dan Pascu python-cjson 1.0.5 does not properly handle a ['/'] argument to cjson.encode, which makes it easier for remote attackers to conduct certain cross-site scripting (XSS) attacks involving Firefox and the end tag of a SCRIPT element.",
            "cve": "CVE-2009-4924",
            "id": "pyup.io-33160",
            "specs": [
                "<1.0.5"
            ],
            "v": "<1.0.5"
        },
        {
            "advisory": "Buffer overflow in Dan Pascu python-cjson 1.0.5, when UCS-4 encoding is enabled, allows context-dependent attackers to cause a denial of service (application crash) or possibly have unspecified other impact via vectors involving crafted Unicode input to the cjson.encode function.",
            "cve": "CVE-2010-1666",
            "id": "pyup.io-33161",
            "specs": [
                "<1.0.5"
            ],
            "v": "<1.0.5"
        }
    ],
    "python-dbusmock": [
        {
            "advisory": "python-dbusmock before 0.15.1 is vulnerable to a tempfile attack. When loading a template from an arbitrary file through the AddTemplate() D-Bus method call or DBusTestCase.spawn_server_template() Python method, don't create or use Python's *.pyc cached files. By tricking a user into loading a template from a world-writable directory like /tmp, an attacker could run arbitrary code with the user's privileges by putting a crafted .pyc file into that directory. Note that this is highly unlikely to actually appear in practice as custom dbusmock templates are usually shipped in project directories, not directly in world-writable directories.",
            "cve": null,
            "id": "pyup.io-26080",
            "specs": [
                "<0.15.1"
            ],
            "v": "<0.15.1"
        }
    ],
    "python-docx": [
        {
            "advisory": "python-docx before 0.8.6 allows context-dependent attackers to conduct XML External Entity (XXE) attacks via a crafted document.",
            "cve": "CVE-2016-5851",
            "id": "pyup.io-26081",
            "specs": [
                "<0.8.6"
            ],
            "v": "<0.8.6"
        }
    ],
    "python-fedora": [
        {
            "advisory": "python-fedora 0.8.0 and lower is vulnerable to an open redirect resulting in loss of CSRF protection",
            "cve": "CVE-2017-1002150",
            "id": "pyup.io-35705",
            "specs": [
                "<=0.8.0"
            ],
            "v": "<=0.8.0"
        }
    ],
    "python-jose": [
        {
            "advisory": "python-jose before 1.3.2 allows attackers to have unspecified impact by leveraging failure to use a constant time comparison for HMAC keys.",
            "cve": "CVE-2016-7036",
            "id": "pyup.io-35682",
            "specs": [
                "<1.3.2"
            ],
            "v": "<1.3.2"
        }
    ],
    "python-keystoneclient": [
        {
            "advisory": "The s3_token middleware in OpenStack keystonemiddleware before 1.6.0 and python-keystoneclient before 1.4.0 disables certification verification when the \"insecure\" option is set in a paste configuration (paste.ini) file regardless of the value, which allows remote attackers to conduct man-in-the-middle attacks via a crafted certificate, a different vulnerability than CVE-2014-7144.",
            "cve": "CVE-2015-1852",
            "id": "pyup.io-26082",
            "specs": [
                "<1.4.0"
            ],
            "v": "<1.4.0"
        },
        {
            "advisory": "The identity service in OpenStack Identity (Keystone) before 2015.1.3 (Kilo) and 8.0.x before 8.0.2 (Liberty) and keystonemiddleware (formerly python-keystoneclient) before 1.5.4 (Kilo) and Liberty before 2.3.3 does not properly invalidate authorization tokens when using the PKI or PKIZ token providers, which allows remote authenticated users to bypass intended access restrictions and gain access to cloud resources by manipulating byte fields within a revoked token.",
            "cve": "CVE-2015-7546",
            "id": "pyup.io-26083",
            "specs": [
                "<1.5.4",
                ">=2.0,<2.3.3"
            ],
            "v": "<1.5.4,>=2.0,<2.3.3"
        }
    ],
    "python-libtorrent": [
        {
            "advisory": "python-libtorrent before 1.0.6 has several undisclosed vulnerabilities related to uTP.",
            "cve": null,
            "id": "pyup.io-26084",
            "specs": [
                "<1.0.6"
            ],
            "v": "<1.0.6"
        }
    ],
    "python-muranoclient": [
        {
            "advisory": "OpenStack Murano before 1.0.3 (liberty) and 2.x before 2.0.1 (mitaka), Murano-dashboard before 1.0.3 (liberty) and 2.x before 2.0.1 (mitaka), and python-muranoclient before 0.7.3 (liberty) and 0.8.x before 0.8.5 (mitaka) improperly use loaders inherited from yaml.Loader when parsing MuranoPL and UI files, which allows remote attackers to create arbitrary Python objects and execute arbitrary code via crafted extended YAML tags in UI definitions in packages.",
            "cve": "CVE-2016-4972",
            "id": "pyup.io-26085",
            "specs": [
                "<0.7.3",
                ">=0.8,<0.8.5"
            ],
            "v": "<0.7.3,>=0.8,<0.8.5"
        }
    ],
    "python-openflow": [
        {
            "advisory": "python-openflow 2016.1.a1 fixes a undisclosed security vulnerability.",
            "cve": null,
            "id": "pyup.io-33282",
            "specs": [
                "<2016.1.a1"
            ],
            "v": "<2016.1.a1"
        }
    ],
    "python-otr": [
        {
            "advisory": "python-otr before 1.1.0 is vulnerable to man-in-the-middle attacks as it allows to restart the protocol.",
            "cve": null,
            "id": "pyup.io-26086",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "python-saml": [
        {
            "advisory": "python-saml before 2.1.6 is vulnerable to Signature Wrapping attacks.",
            "cve": null,
            "id": "pyup.io-26087",
            "specs": [
                "<2.1.6"
            ],
            "v": "<2.1.6"
        },
        {
            "advisory": "python-saml before 2.1.9 is vulnerable to Signature Wrapping attacks.",
            "cve": null,
            "id": "pyup.io-26088",
            "specs": [
                "<2.1.9"
            ],
            "v": "<2.1.9"
        },
        {
            "advisory": "Multiple SAML libraries may incorrectly utilize the results of XML DOM traversal and canonicalization APIs in such a way that an attacker may be able to manipulate the SAML data without invalidating the cryptographic signature, allowing the attack to potentially bypass authentication to SAML service providers.",
            "cve": "CVE-2017-11427",
            "id": "pyup.io-35779",
            "specs": [
                "<2.4.0"
            ],
            "v": "<2.4.0"
        }
    ],
    "python3-ldap": [
        {
            "advisory": "python3-ldap before 0.9.5.4 has a security issue in lazy connections.",
            "cve": null,
            "id": "pyup.io-26089",
            "specs": [
                "<0.9.5.4"
            ],
            "v": "<0.9.5.4"
        }
    ],
    "python3-saml": [
        {
            "advisory": "python3-saml before 1.1.4 is vulnerable to signature wrapping attacks.",
            "cve": null,
            "id": "pyup.io-26090",
            "specs": [
                "<1.1.4"
            ],
            "v": "<1.1.4"
        },
        {
            "advisory": "python3-saml 1.2.0 introduces several undisclosed security improvements.",
            "cve": null,
            "id": "pyup.io-26091",
            "specs": [
                "<1.2.0"
            ],
            "v": "<1.2.0"
        },
        {
            "advisory": "python3-saml 1.2.6 now uses defusedxml that will prevent XEE and other attacks based on the abuse on XMLs. (CVE-2017-9672)",
            "cve": null,
            "id": "pyup.io-34782",
            "specs": [
                "<1.2.6"
            ],
            "v": "<1.2.6"
        },
        {
            "advisory": "Multiple SAML libraries may incorrectly utilize the results of XML DOM traversal and canonicalization APIs in such a way that an attacker may be able to manipulate the SAML data without invalidating the cryptographic signature, allowing the attack to potentially bypass authentication to SAML service providers.",
            "cve": "CVE-2017-11427",
            "id": "pyup.io-35780",
            "specs": [
                "<1.4.0"
            ],
            "v": "<1.4.0"
        }
    ],
    "pytsite": [
        {
            "advisory": "pytsite before 1.2 has a critical web login security issue.",
            "cve": null,
            "id": "pyup.io-34825",
            "specs": [
                "<1.2"
            ],
            "v": "<1.2"
        }
    ],
    "pyupdater": [
        {
            "advisory": "pyupdater before 0.20.0 is vulnerable to session fixation attacks and potentially cookie stealing.",
            "cve": null,
            "id": "pyup.io-26092",
            "specs": [
                "<0.20.0"
            ],
            "v": "<0.20.0"
        }
    ],
    "pyvisa": [
        {
            "advisory": "pyvisa before 0.9 has a undisclosed security vulnerability in visa.py.",
            "cve": null,
            "id": "pyup.io-26093",
            "specs": [
                "<0.9"
            ],
            "v": "<0.9"
        }
    ],
    "pywebsite": [
        {
            "advisory": "pywebsite 0.1.14pre's signed_url  method is now (more) immune to VS timing attacks.",
            "cve": null,
            "id": "pyup.io-26094",
            "specs": [
                "<0.1.14pre"
            ],
            "v": "<0.1.14pre"
        },
        {
            "advisory": "pywebsite before 0.1.9pre is vulnerable to length extension attacks, and value equivalence attacks.",
            "cve": null,
            "id": "pyup.io-26095",
            "specs": [
                "<0.1.9pre"
            ],
            "v": "<0.1.9pre"
        }
    ],
    "pyxmlsecurity": [
        {
            "advisory": "pyxmlsecurity 0.9 protects against wrapping attacks.",
            "cve": null,
            "id": "pyup.io-26096",
            "specs": [
                "<0.9"
            ],
            "v": "<0.9"
        }
    ],
    "qi-jabberhelpdesk": [
        {
            "advisory": "qi-jabberhelpdesk  0.30 includes unspecified security fixes, some vulnerable xml-rpc calls fixed. [ggozad]",
            "cve": null,
            "id": "pyup.io-36052",
            "specs": [
                "<0.30"
            ],
            "v": "<0.30"
        }
    ],
    "qi.jabberhelpdesk": [
        {
            "advisory": "qi.jabberhelpdesk before 0.30 has several undisclosed vulnerabilities in xml-rpc calls.",
            "cve": null,
            "id": "pyup.io-26097",
            "specs": [
                "<0.30"
            ],
            "v": "<0.30"
        }
    ],
    "quintagroup-seoptimizer": [
        {
            "advisory": "quintagroup-seoptimizer  3.0.4 fixes a security issue for SEO Property action and view\r\n  http://plone.org/products/plone-seo/issues/24",
            "cve": null,
            "id": "pyup.io-36006",
            "specs": [
                "<3.0.4"
            ],
            "v": "<3.0.4"
        }
    ],
    "quintagroup.seoptimizer": [
        {
            "advisory": "quintagroup.seoptimizer before 3.0.4 has a security issue for SEO Property action and view.",
            "cve": null,
            "id": "pyup.io-26098",
            "specs": [
                "<3.0.4"
            ],
            "v": "<3.0.4"
        }
    ],
    "radicale": [
        {
            "advisory": "radicale before 1.1.2 is vulnerable to bruteforce attacks when using the htpasswd authentication method.",
            "cve": null,
            "id": "pyup.io-33323",
            "specs": [
                "<1.1.2"
            ],
            "v": "<1.1.2"
        }
    ],
    "rauth": [
        {
            "advisory": "rauth before 0.7.0 isn't using a secure random number generator.",
            "cve": null,
            "id": "pyup.io-26099",
            "specs": [
                "<0.7.0"
            ],
            "v": "<0.7.0"
        }
    ],
    "recurly": [
        {
            "advisory": "The Recurly Client Python Library before 2.0.5, 2.1.16, 2.2.22, 2.3.1, 2.4.5, 2.5.1, 2.6.2 is vulnerable to a Server-Side Request Forgery vulnerability in the \"Resource.get\" method that could result in compromise of API keys or other critical resources.",
            "cve": "CVE-2017-0906",
            "id": "pyup.io-35697",
            "specs": [
                "<=2.6.2"
            ],
            "v": "<=2.6.2"
        }
    ],
    "requests": [
        {
            "advisory": "requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect.\r\n  Fix CVE-2014-1829 and CVE-2014-1830 respectively",
            "cve": null,
            "id": "pyup.io-26101",
            "specs": [
                "<2.3.0"
            ],
            "v": "<2.3.0"
        },
        {
            "advisory": "requests 2.6.0 fixes handling of cookies on redirect. Previously a cookie without a host value set would use the hostname for the redirected URL exposing requests users to session fixation attacks and potentially cookie stealing.",
            "cve": null,
            "id": "pyup.io-26102",
            "specs": [
                "<2.6.0"
            ],
            "v": "<2.6.0"
        },
        {
            "advisory": "The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.",
            "cve": "CVE-2015-2296",
            "id": "pyup.io-26103",
            "specs": [
                ">=2.1,<=2.5.3"
            ],
            "v": ">=2.1,<=2.5.3"
        }
    ],
    "requests-kerberos": [
        {
            "advisory": "requests-kerberos before 0.6 isn't handling mutual authentication correctly.",
            "cve": null,
            "id": "pyup.io-26104",
            "specs": [
                "<0.6"
            ],
            "v": "<0.6"
        }
    ],
    "restauth": [
        {
            "advisory": "restauth before 0.6.3 did not verify passwords for services when using SECURE_CACHE = True.",
            "cve": null,
            "id": "pyup.io-26105",
            "specs": [
                "<0.6.3"
            ],
            "v": "<0.6.3"
        }
    ],
    "restkit": [
        {
            "advisory": "Restkit allows man-in-the-middle attackers to spoof TLS servers by leveraging use of the ssl.wrap_socket function in Python with the default CERT_NONE value for the cert_reqs argument.",
            "cve": "CVE-2015-2674",
            "id": "pyup.io-35609",
            "specs": [
                "<=4.2.2"
            ],
            "v": "<=4.2.2"
        }
    ],
    "restview": [
        {
            "advisory": "restview before 2.8.1 isn't properly checking the host header in HTTP requests, leading to possible DNS rebinding attacks. More info: https://github.com/mgedmin/restview/issues/51",
            "cve": null,
            "id": "pyup.io-35166",
            "specs": [
                "<2.8.1"
            ],
            "v": "<2.8.1"
        }
    ],
    "rope": [
        {
            "advisory": "base/oi/doa.py in the Rope library in CPython (aka Python) allows remote attackers to execute arbitrary code by leveraging an unsafe call to pickle.load.",
            "cve": "CVE-2014-3539",
            "id": "pyup.io-36155",
            "specs": [
                "<0.10"
            ],
            "v": "<0.10"
        }
    ],
    "roundup": [
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in the history display in Roundup before 1.4.20 allows remote attackers to inject arbitrary web script or HTML via a username, related to generating a link.",
            "cve": "CVE-2012-6130",
            "id": "pyup.io-33162",
            "specs": [
                "<1.4.20"
            ],
            "v": "<1.4.20"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in cgi/client.py in Roundup before 1.4.20 allows remote attackers to inject arbitrary web script or HTML via the @action parameter to support/issue1.",
            "cve": "CVE-2012-6131",
            "id": "pyup.io-33163",
            "specs": [
                "<1.4.20"
            ],
            "v": "<1.4.20"
        }
    ],
    "rpc4django": [
        {
            "advisory": "rpc4django before 0.2.3 is vulnerable to billion laughs denial of service attack.",
            "cve": null,
            "id": "pyup.io-26108",
            "specs": [
                "<0.2.3"
            ],
            "v": "<0.2.3"
        }
    ],
    "rply": [
        {
            "advisory": "The parser cache functionality in parsergenerator.py in RPLY (aka python-rply) before 0.7.1 allows local users to spoof cache data by pre-creating a temporary rply-*.json file with a predictable name.",
            "cve": "CVE-2014-1604",
            "id": "pyup.io-35520",
            "specs": [
                "<0.7.1"
            ],
            "v": "<0.7.1"
        }
    ],
    "rsa": [
        {
            "advisory": "rsa 2.0 includes several undisclosed security improvements.",
            "cve": null,
            "id": "pyup.io-26109",
            "specs": [
                "<2.0"
            ],
            "v": "<2.0"
        },
        {
            "advisory": "The verify function in the RSA package for Python (Python-RSA) before 3.3 allows attackers to spoof signatures with a small public exponent via crafted signature padding, aka a BERserk attack.",
            "cve": "CVE-2016-1494",
            "id": "pyup.io-33164",
            "specs": [
                "<3.3"
            ],
            "v": "<3.3"
        },
        {
            "advisory": "rsa before 3.4 has a undisclosed side-channel vulnerability.",
            "cve": null,
            "id": "pyup.io-26112",
            "specs": [
                "<3.4"
            ],
            "v": "<3.4"
        }
    ],
    "rsanic": [
        {
            "advisory": "rsanic before 0.2.2 is vulnerable to XSS attacks.",
            "cve": null,
            "id": "pyup.io-33007",
            "specs": [
                "<0.2.2"
            ],
            "v": "<0.2.2"
        }
    ],
    "rtv": [
        {
            "advisory": "rtv before 1.12.1 has a security vulnerability where malicious URLs could inject python code.",
            "cve": null,
            "id": "pyup.io-26113",
            "specs": [
                "<1.12.1"
            ],
            "v": "<1.12.1"
        }
    ],
    "ruffruffs": [
        {
            "advisory": "ruffruffs 2.6.0 fixes handling of cookies on redirect. Previously a cookie without a host value set would use the hostname for the redirected URL exposing requests users to session fixation attacks and potentially cookie stealing.",
            "cve": null,
            "id": "pyup.io-26116",
            "specs": [
                "<2.6.0"
            ],
            "v": "<2.6.0"
        }
    ],
    "satosa": [
        {
            "advisory": "satosa before 0.6.1 uses an insecure transitive dependency (pycrypto).",
            "cve": null,
            "id": "pyup.io-34714",
            "specs": [
                "<0.6.1"
            ],
            "v": "<0.6.1"
        }
    ],
    "sentry": [
        {
            "advisory": "sentry before 0.12.2 has a security flaw where exponential numbers in specially crafted params could cause a CPU attack.",
            "cve": null,
            "id": "pyup.io-33030",
            "specs": [
                "<0.12.2"
            ],
            "v": "<0.12.2"
        },
        {
            "advisory": "sentry before 6.1.1 is vulnerable to a remote code execution exploit.",
            "cve": null,
            "id": "pyup.io-26117",
            "specs": [
                "<6.1.1"
            ],
            "v": "<6.1.1"
        },
        {
            "advisory": "sentry before 7.4.0 has a XSS vulnerability with tag values not being escaped (on the group details page).",
            "cve": null,
            "id": "pyup.io-26118",
            "specs": [
                "<7.4.0"
            ],
            "v": "<7.4.0"
        },
        {
            "advisory": "sentry before 7.5.5 is vulnerable to a XSS attack in tags and the stream filter box.",
            "cve": null,
            "id": "pyup.io-26119",
            "specs": [
                "<7.5.5"
            ],
            "v": "<7.5.5"
        },
        {
            "advisory": "sentry before 7.6.1 is vulnerable to a XSS attack in tags and the stream filter box.",
            "cve": null,
            "id": "pyup.io-26120",
            "specs": [
                "<7.6.1"
            ],
            "v": "<7.6.1"
        },
        {
            "advisory": "sentry before 8.1.4 has a security issue where a superuser had the ability to inject data into audit logs through the admin UI.",
            "cve": null,
            "id": "pyup.io-26121",
            "specs": [
                "<8.1.4"
            ],
            "v": "<8.1.4"
        },
        {
            "advisory": "sentry before 8.1.5 if being run in multi-organization mode, it was possible for a user to craft a URL which would allow them to view membership details of other users.",
            "cve": null,
            "id": "pyup.io-26122",
            "specs": [
                "<8.1.5"
            ],
            "v": "<8.1.5"
        },
        {
            "advisory": "sentry before 8.2.2 has a security issue where a superuser had the ability to inject data into audit logs through the admin UI.",
            "cve": null,
            "id": "pyup.io-26123",
            "specs": [
                "<8.2.2"
            ],
            "v": "<8.2.2"
        },
        {
            "advisory": "sentry before 8.2.4 if being run in multi-organization mode, it was possible for a user to craft a URL which would allow them to view membership details of other users.",
            "cve": null,
            "id": "pyup.io-26124",
            "specs": [
                "<8.2.4"
            ],
            "v": "<8.2.4"
        },
        {
            "advisory": "sentry before 8.2.5 is vulnerable to an attack which allows API keys more permission than granted within the organization.",
            "cve": null,
            "id": "pyup.io-26125",
            "specs": [
                "<8.2.5"
            ],
            "v": "<8.2.5"
        },
        {
            "advisory": "sentry before 8.3.3 is vulnerable to an attack which allows API keys more permission than granted within the organization.",
            "cve": null,
            "id": "pyup.io-26126",
            "specs": [
                "<8.3.3"
            ],
            "v": "<8.3.3"
        },
        {
            "advisory": "sentry 8.8 includes various security fixes related to CSRF and XSS.",
            "cve": null,
            "id": "pyup.io-26127",
            "specs": [
                "<8.8"
            ],
            "v": "<8.8"
        }
    ],
    "sesame": [
        {
            "advisory": "sesame 0.3.0 is using a secure extraction/decryption using tempfile.",
            "cve": null,
            "id": "pyup.io-26128",
            "specs": [
                "<0.3.0"
            ],
            "v": "<0.3.0"
        }
    ],
    "setup-tools": [
        {
            "advisory": "setup-tools  is a package affected by pytosquatting: http://www.nbu.gov.sk/skcsirt-sa-20170909-pypi/",
            "cve": null,
            "id": "pyup.io-34984",
            "specs": [
                ">0",
                "<0"
            ],
            "v": ">0,<0"
        }
    ],
    "setuptools": [
        {
            "advisory": "setuptools 0.9.5 fixes a security vulnerability in SSL certificate validation.",
            "cve": null,
            "id": "pyup.io-26129",
            "specs": [
                "<0.9.5"
            ],
            "v": "<0.9.5"
        },
        {
            "advisory": "setuptools before 1.3 has a security vulnerability in SSL match_hostname check as reported in Python 17997.",
            "cve": null,
            "id": "pyup.io-26132",
            "specs": [
                "<1.3"
            ],
            "v": "<1.3"
        },
        {
            "advisory": "setuptools 3.0 avoids the potential security vulnerabilities presented by use of tar archives in ez_setup.py. It also leverages the security features added to ZipFile.extract in Python 2.7.4.",
            "cve": null,
            "id": "pyup.io-26133",
            "specs": [
                "<3.0"
            ],
            "v": "<3.0"
        }
    ],
    "sevabot": [
        {
            "advisory": "sevabot before 1.1 allows arbitrary commands to be executed.",
            "cve": null,
            "id": "pyup.io-26134",
            "specs": [
                "<1.1"
            ],
            "v": "<1.1"
        }
    ],
    "sftp-cloudfs": [
        {
            "advisory": "sftp-cloudfs before 0.13.1 is using an insecure transitive dependency (ftp-cloudfs<=0.26.1).",
            "cve": null,
            "id": "pyup.io-26135",
            "specs": [
                "<0.13.1"
            ],
            "v": "<0.13.1"
        }
    ],
    "smeagol": [
        {
            "advisory": "smeagol 0.1.0 has several known bugs and security issues that need to be addressed before it can be used in production.",
            "cve": null,
            "id": "pyup.io-34818",
            "specs": [
                "<0.1.0"
            ],
            "v": "<0.1.0"
        }
    ],
    "soapfish": [
        {
            "advisory": "soapfish before 0.6.0 has a potential security issue - pattern restrictions were not applied correctly.",
            "cve": null,
            "id": "pyup.io-26136",
            "specs": [
                "<0.6.0"
            ],
            "v": "<0.6.0"
        }
    ],
    "soappy": [
        {
            "advisory": "soappy before 0.12.6 allows remote attackers to read arbitrary files via a SOAP request containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",
            "cve": null,
            "id": "pyup.io-26137",
            "specs": [
                "<0.12.6"
            ],
            "v": "<0.12.6"
        }
    ],
    "soappy-py3": [
        {
            "advisory": "soappy-py3 before 0.12.6 allows remote attackers to read arbitrary files via a SOAP request containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",
            "cve": null,
            "id": "pyup.io-26138",
            "specs": [
                "<0.12.6"
            ],
            "v": "<0.12.6"
        }
    ],
    "sopel": [
        {
            "advisory": "sopel before 4.4.0 has a security issue involving improperly named channel logs.",
            "cve": null,
            "id": "pyup.io-26139",
            "specs": [
                "<4.4.0"
            ],
            "v": "<4.4.0"
        }
    ],
    "splash": [
        {
            "advisory": "splash before 2.0.1 is vulnerable to a XSS attack in HTTP UI.",
            "cve": null,
            "id": "pyup.io-26140",
            "specs": [
                "<2.0.1"
            ],
            "v": "<2.0.1"
        },
        {
            "advisory": "In splash before 2.3.2 xvfb binds to ports in the range 6000-6200 on all available interfaces.",
            "cve": null,
            "id": "pyup.io-33045",
            "specs": [
                "<2.3.2"
            ],
            "v": "<2.3.2"
        }
    ],
    "spud": [
        {
            "advisory": "spud before 0.8 doesn't check permissions. Anybody could edit photos.",
            "cve": null,
            "id": "pyup.io-26141",
            "specs": [
                "<0.8"
            ],
            "v": "<0.8"
        }
    ],
    "starcluster": [
        {
            "advisory": "starcluster before 0.95.3 opens up the VPC to the internet by default which is a security risk and it requires a special VPC configuration (internet gateway attached to the VPC and a route to the gateway with dest CIDR block 0.0.0.0/0 associated with the VPC subnet).  Configuring this automatically (which does not happen currently) would be a security risk and without this configuration StarCluster cannot connect to the VPC nodes even though they've been assigned a public IP.",
            "cve": null,
            "id": "pyup.io-26142",
            "specs": [
                "<0.95.3"
            ],
            "v": "<0.95.3"
        }
    ],
    "stargate": [
        {
            "advisory": "stargate before 0.4 has several undisclosed security vulnerabilities.",
            "cve": null,
            "id": "pyup.io-26143",
            "specs": [
                "<0.4"
            ],
            "v": "<0.4"
        }
    ],
    "stormpath": [
        {
            "advisory": "stormpath before 2.0.5 is using an insecure transitive dependency (pyjwt).",
            "cve": null,
            "id": "pyup.io-26144",
            "specs": [
                "<2.0.5"
            ],
            "v": "<2.0.5"
        },
        {
            "advisory": "stormpath before 2.5.0 doesn't validate JWT correctly.",
            "cve": null,
            "id": "pyup.io-26145",
            "specs": [
                "<2.5.0"
            ],
            "v": "<2.5.0"
        }
    ],
    "stormpath-sdk": [
        {
            "advisory": "stormpath-sdk before 2.5.0 doesn't validate JWT correctly.",
            "cve": null,
            "id": "pyup.io-26146",
            "specs": [
                "<2.5.0"
            ],
            "v": "<2.5.0"
        }
    ],
    "suds": [
        {
            "advisory": "cache.py in Suds 0.4, when tempdir is set to None, allows local users to redirect SOAP queries and possibly have other unspecified impact via a symlink attack on a cache file with a predictable name in /tmp/suds/.",
            "cve": "CVE-2013-2217",
            "id": "pyup.io-35433",
            "specs": [
                "<=0.4"
            ],
            "v": "<=0.4"
        }
    ],
    "superset": [
        {
            "advisory": "superset before 0.11.0 is vulnerable to a XSS attack on FAB list views.",
            "cve": null,
            "id": "pyup.io-26147",
            "specs": [
                "<0.11.0"
            ],
            "v": "<0.11.0"
        }
    ],
    "superset-hand": [
        {
            "advisory": "superset-hand before 0.11.0 is vulnerable to a XSS attack on FAB list views.",
            "cve": null,
            "id": "pyup.io-26148",
            "specs": [
                "<0.11.0"
            ],
            "v": "<0.11.0"
        }
    ],
    "superset-tddv": [
        {
            "advisory": "superset-tddv before 0.11.0 is vulnerable to a XSS attack on FAB list views.",
            "cve": null,
            "id": "pyup.io-26149",
            "specs": [
                "<0.11.0"
            ],
            "v": "<0.11.0"
        }
    ],
    "supervisor": [
        {
            "advisory": "In supervisor before 3.3.3 (fix backported to 3.2.4, 3.1.4 and 3.0.1) a vulnerability was found where an authenticated client can send a malicious XML-RPC request to ``supervisord`` that will run arbitrary shell commands on the server. The commands will be run as the same user as ``supervisord``.  Depending on how ``supervisord`` has been configured, this may be root.  See https://github.com/Supervisor/supervisor/issues/964 for details.",
            "cve": null,
            "id": "pyup.io-34840",
            "specs": [
                ">=3.3,<3.3.3",
                ">=3.2,<3.2.4",
                ">=3.1,<3.1.4",
                "<3.0.1"
            ],
            "v": ">=3.3,<3.3.3,>=3.2,<3.2.4,>=3.1,<3.1.4,<3.0.1"
        }
    ],
    "swauth": [
        {
            "advisory": "swauth before 1.1.0 has multiple undisclosed security vulnerabilities.",
            "cve": null,
            "id": "pyup.io-26150",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "swift": [
        {
            "advisory": "swift before 2.6.0 is vulnerable to an attack where an unfinished read of a large object would leak a socket file descriptor and a small amount of memory. (CVE-2016-0738)",
            "cve": null,
            "id": "pyup.io-26151",
            "specs": [
                "<2.6.0"
            ],
            "v": "<2.6.0"
        }
    ],
    "tablib": [
        {
            "advisory": "An exploitable vulnerability exists in the Databook loading functionality of Tablib 0.11.4. A yaml loaded Databook can execute arbitrary python commands resulting in command execution. An attacker can insert python into loaded yaml to trigger this vulnerability.",
            "cve": "CVE-2017-2810",
            "id": "pyup.io-35731",
            "specs": [
                "<0.11.4"
            ],
            "v": "<0.11.4"
        }
    ],
    "tahoe-lafs": [
        {
            "advisory": "tahoe-lafs before 1.2.0 doesn't make the immutable-file \"ciphertext hash tree\" mandatory.",
            "cve": null,
            "id": "pyup.io-26152",
            "specs": [
                "<1.2.0"
            ],
            "v": "<1.2.0"
        },
        {
            "advisory": "tahoe-lafs before 1.4.1 is vulnerable to timing attacks due to our use of strcmp against the write-enabler.",
            "cve": null,
            "id": "pyup.io-26153",
            "specs": [
                "<1.4.1"
            ],
            "v": "<1.4.1"
        },
        {
            "advisory": "tahoe-lafs before 1.8.3 has a flaw that would allow a person who knows a storage index of a file to delete shares of that file.",
            "cve": null,
            "id": "pyup.io-26154",
            "specs": [
                "<1.8.3"
            ],
            "v": "<1.8.3"
        },
        {
            "advisory": "tahoe-lafs before 1.9.1 has a flaw that would allow servers to cause undetected corruption when\r\n  retrieving the contents of mutable files (both SDMF and MDMF).",
            "cve": null,
            "id": "pyup.io-26155",
            "specs": [
                "<1.9.1"
            ],
            "v": "<1.9.1"
        }
    ],
    "telemeta": [
        {
            "advisory": "telemeta before 1.4.31 has a undisclosed security vulnerability in TELEMETA_EXPORT_CACHE_DIR.",
            "cve": null,
            "id": "pyup.io-26156",
            "specs": [
                "<1.4.31"
            ],
            "v": "<1.4.31"
        }
    ],
    "telnet": [
        {
            "advisory": "telnet is a package affected by pytosquatting: http://www.nbu.gov.sk/skcsirt-sa-20170909-pypi/",
            "cve": null,
            "id": "pyup.io-34985",
            "specs": [
                ">0",
                "<0"
            ],
            "v": ">0,<0"
        }
    ],
    "textract": [
        {
            "advisory": "textract before 1.5.0 doesn't properly uses subprocess.call.",
            "cve": null,
            "id": "pyup.io-26157",
            "specs": [
                "<1.5.0"
            ],
            "v": "<1.5.0"
        }
    ],
    "thorn": [
        {
            "advisory": "thorn before 1.1.0 has several security vulnerabilities: Now provides HMAC signing by default, No longer dispatches webhooks to internal networks, Now only dispatches to HTTP and HTTPS URLs by default, Now only dispatches to ports 80 and 443 by default, Adds recipient validators",
            "cve": null,
            "id": "pyup.io-26158",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "tiddlyweb": [
        {
            "advisory": "tiddlyweb before 1.2.18 allowed empty passwords to authenticate.",
            "cve": null,
            "id": "pyup.io-26159",
            "specs": [
                "<1.2.18"
            ],
            "v": "<1.2.18"
        }
    ],
    "tinydb": [
        {
            "advisory": "tinydb-serialization before 2.0.0 has an insecure implementation in ``ConcurrencyMiddleware``.",
            "cve": null,
            "id": "pyup.io-26160",
            "specs": [
                "<2.0.0"
            ],
            "v": "<2.0.0"
        }
    ],
    "tlslite": [
        {
            "advisory": "The tlslite library before 0.4.9 for Python allows remote attackers to trigger a denial of service (runtime exception and process crash).",
            "cve": "CVE-2015-3220",
            "id": "pyup.io-35614",
            "specs": [
                "<0.4.9"
            ],
            "v": "<0.4.9"
        }
    ],
    "tmc": [
        {
            "advisory": "tmc 0.3.5 fixes a vulnerability where symlinks in zips could be used to read any file on the server where the server had read access.",
            "cve": null,
            "id": "pyup.io-34672",
            "specs": [
                "<0.3.5"
            ],
            "v": "<0.3.5"
        }
    ],
    "tornado": [
        {
            "advisory": "CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.",
            "cve": "CVE-2012-2374",
            "id": "pyup.io-26161",
            "specs": [
                "<2.2.1"
            ],
            "v": "<2.2.1"
        }
    ],
    "tqdm": [
        {
            "advisory": "The tqdm._version module in tqdm versions before 4.11.2 allows local users to execute arbitrary code via a crafted repo with a malicious git log in the current working directory.",
            "cve": null,
            "id": "pyup.io-34741",
            "specs": [
                "<4.11.2"
            ],
            "v": "<4.11.2"
        }
    ],
    "tracauthopenid": [
        {
            "advisory": "tracauthopenid before 0.4.4 does not properly authorize if no email address was returned via AX or SREG, the ``email_white_list`` config option was being ignored.  Now if ``email_white_list`` is set and no email address can be determined, authorization will be denied.",
            "cve": null,
            "id": "pyup.io-26162",
            "specs": [
                "<0.4.4"
            ],
            "v": "<0.4.4"
        }
    ],
    "trash-cli": [
        {
            "advisory": "trash-cli before 0.17.1.14 has a bug that causes trash-put to use $topdir/.Trash/UID trashcan even when it is not secure and $topdir/.Trash-UID should be used instead.",
            "cve": null,
            "id": "pyup.io-34319",
            "specs": [
                "<0.17.1.14"
            ],
            "v": "<0.17.1.14"
        }
    ],
    "tripleo-heat-templates": [
        {
            "advisory": "The TripleO Heat templates (tripleo-heat-templates), when deployed via the commandline interface, allow remote attackers to spoof OpenStack Networking metadata requests by leveraging knowledge of the default value of the NeutronMetadataProxySharedSecret parameter.",
            "cve": "CVE-2015-5303",
            "id": "pyup.io-26163",
            "specs": [
                "<0.8.10",
                "==1.0.0"
            ],
            "v": "<0.8.10,==1.0.0"
        },
        {
            "advisory": "The TripleO Heat templates (tripleo-heat-templates) do not properly order the Identity Service (keystone) before the OpenStack Object Storage (Swift) staticweb middleware in the swiftproxy pipeline when the staticweb middleware is enabled, which might allow remote attackers to obtain sensitive information from private containers via unspecified vectors.",
            "cve": "CVE-2015-5271",
            "id": "pyup.io-26164",
            "specs": [
                "<0.8.7"
            ],
            "v": "<0.8.7"
        }
    ],
    "tryton": [
        {
            "advisory": "model/modelstorage.py in the Tryton application framework (trytond) before 2.4.0 for Python does not properly restrict access to the Many2Many field in the relation model, which allows remote authenticated users to modify the privileges of arbitrary users via a (1) create, (2) write, (3) delete, or (4) copy rpc call.",
            "cve": "CVE-2012-0215",
            "id": "pyup.io-26165",
            "specs": [
                "<2.4.0"
            ],
            "v": "<2.4.0"
        }
    ],
    "trytond": [
        {
            "advisory": "model/modelstorage.py in the Tryton application framework (trytond) before 2.4.0 for Python does not properly restrict access to the Many2Many field in the relation model, which allows remote authenticated users to modify the privileges of arbitrary users via a (1) create, (2) write, (3) delete, or (4) copy rpc call.",
            "cve": "CVE-2012-0215",
            "id": "pyup.io-26166",
            "specs": [
                "<2.4.0"
            ],
            "v": "<2.4.0"
        }
    ],
    "tuf": [
        {
            "advisory": "tuf before 1.3 has a security issues with pip's use of temp build directories.",
            "cve": null,
            "id": "pyup.io-26167",
            "specs": [
                "<1.3"
            ],
            "v": "<1.3"
        }
    ],
    "tweepy": [
        {
            "advisory": "Tweepy does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate, related to use of the Python httplib library.",
            "cve": "CVE-2012-5825",
            "id": "pyup.io-26168",
            "specs": [
                "<3.0"
            ],
            "v": "<3.0"
        }
    ],
    "twilio": [
        {
            "advisory": "twilio before 3.5.0 is vulnerable to a timing attack vector in signature validation.",
            "cve": null,
            "id": "pyup.io-26169",
            "specs": [
                "<3.5.0"
            ],
            "v": "<3.5.0"
        }
    ],
    "urlib3": [
        {
            "advisory": "urlib3 is a package affected by pytosquatting: http://www.nbu.gov.sk/skcsirt-sa-20170909-pypi/",
            "cve": null,
            "id": "pyup.io-34986",
            "specs": [
                ">0",
                "<0"
            ],
            "v": ">0,<0"
        }
    ],
    "urllib": [
        {
            "advisory": "urllib is a package affected by pytosquatting: http://www.nbu.gov.sk/skcsirt-sa-20170909-pypi/",
            "cve": null,
            "id": "pyup.io-34987",
            "specs": [
                ">0",
                "<0"
            ],
            "v": ">0,<0"
        }
    ],
    "urllib3": [
        {
            "advisory": "Users who are using urllib3 version 1.17 or 1.18 along with PyOpenSSL injection and OpenSSL 1.1.0 *must* upgrade to this version. This release fixes a vulnerability whereby urllib3 in the above configuration would silently fail to validate TLS certificates due to erroneously setting invalid flags in OpenSSL's ``SSL_CTX_set_verify`` function. These erroneous flags do not cause a problem in OpenSSL versions before 1.1.0, which interprets the presence of any flag as requesting certificate validation.",
            "cve": null,
            "id": "pyup.io-26170",
            "specs": [
                "==1.17",
                "==1.18"
            ],
            "v": "==1.17,==1.18"
        }
    ],
    "virtualenv": [
        {
            "advisory": "virtualenv.py in virtualenv before 1.5 allows local users to overwrite arbitrary files via a symlink attack on a certain file in /tmp/.",
            "cve": "CVE-2011-4617",
            "id": "pyup.io-26172",
            "specs": [
                "<1.5"
            ],
            "v": "<1.5"
        }
    ],
    "vnccollab.theme": [
        {
            "advisory": "vnccollab.theme before 1.5.2 has an undisclosed vulnerability in VNC Zimlet.",
            "cve": null,
            "id": "pyup.io-26173",
            "specs": [
                "<1.5.2"
            ],
            "v": "<1.5.2"
        }
    ],
    "waitress": [
        {
            "advisory": "waitress before 1.0.0 doesn't drop HTTP headers containing an underscore, possibly leading to security issues.",
            "cve": null,
            "id": "pyup.io-26174",
            "specs": [
                "<1.0.0"
            ],
            "v": "<1.0.0"
        }
    ],
    "web-py": [
        {
            "advisory": "web-py  0.39 fixes a security issue with the form and db module.",
            "cve": null,
            "id": "pyup.io-35893",
            "specs": [
                "<0.39"
            ],
            "v": "<0.39"
        }
    ],
    "web.py": [
        {
            "advisory": "web.py  0.39 fixes a security issue in the form module and the db module.",
            "cve": null,
            "id": "pyup.io-35782",
            "specs": [
                "<0.39"
            ],
            "v": "<0.39"
        }
    ],
    "werkzeug": [
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in the render_full function in debug/tbtools.py in the debugger in Pallets Werkzeug before 0.11.11 (as used in Pallets Flask and other products) allows remote attackers to inject arbitrary web script or HTML via a field that contains an exception message.",
            "cve": "CVE-2016-10516",
            "id": "pyup.io-35661",
            "specs": [
                "<0.11.11"
            ],
            "v": "<0.11.11"
        },
        {
            "advisory": "werkzeug before 0.8 allowed newlines in the header datastructure, allowing header injection attacks.",
            "cve": null,
            "id": "pyup.io-26175",
            "specs": [
                "<0.8"
            ],
            "v": "<0.8"
        }
    ],
    "will": [
        {
            "advisory": "will before 0.5.4 uses a insecure transitive dependency (bottle).",
            "cve": null,
            "id": "pyup.io-35046",
            "specs": [
                "<0.5.4"
            ],
            "v": "<0.5.4"
        }
    ],
    "wpull": [
        {
            "advisory": "wpull before 0.1006.1 is leaking HTTP header fields when transitioning from HTTP to HTTPS.",
            "cve": null,
            "id": "pyup.io-26176",
            "specs": [
                "<0.1006.1"
            ],
            "v": "<0.1006.1"
        }
    ],
    "xdg": [
        {
            "advisory": "Race condition in the xdg.BaseDirectory.get_runtime_dir function in python-xdg 0.25 allows local users to overwrite arbitrary files by pre-creating /tmp/pyxdg-runtime-dir-fallback-victim to point to a victim-owned location, then replacing it with a symlink to an attacker-controlled location once the get_runtime_dir function is called.",
            "cve": "CVE-2014-1624",
            "id": "pyup.io-35521",
            "specs": [
                "<=0.25"
            ],
            "v": "<=0.25"
        }
    ],
    "yasha": [
        {
            "advisory": "yasha before 4.0 is parsing JSON without using the 'safe_load' function.",
            "cve": null,
            "id": "pyup.io-35004",
            "specs": [
                "<4.0"
            ],
            "v": "<4.0"
        }
    ],
    "yaybu": [
        {
            "advisory": "yaybu before 0.1.14 doesn't set file system permissions before content is written.",
            "cve": null,
            "id": "pyup.io-26177",
            "specs": [
                "<0.1.14"
            ],
            "v": "<0.1.14"
        }
    ],
    "yubiauth": [
        {
            "advisory": "yubiauth before 0.2.3 is updating credentials in an insecure way.",
            "cve": null,
            "id": "pyup.io-26178",
            "specs": [
                "<0.2.3"
            ],
            "v": "<0.2.3"
        }
    ],
    "z3c.form": [
        {
            "advisory": "z3c.form before 2.4.2 has a security vulnerability in IBrowserRequest from IFormLayer. This prevents to mixin IBrowserRequest into non IBrowserRequest e.g. IJSONRPCRequest. This should be compatible since a browser request using z3c.form already provides IBrowserRequest and the IFormLayer is only a marker interface used as skin layer.",
            "cve": null,
            "id": "pyup.io-26179",
            "specs": [
                "<2.4.2"
            ],
            "v": "<2.4.2"
        }
    ],
    "zeep": [
        {
            "advisory": "zeep before 0.4.0 is using an insecure XML parser.",
            "cve": null,
            "id": "pyup.io-26180",
            "specs": [
                "<0.4.0"
            ],
            "v": "<0.4.0"
        }
    ],
    "ziirish": [
        {
            "advisory": "ziirish before 0.0.7.1 has some undisclosed security vulnerabilities.",
            "cve": null,
            "id": "pyup.io-26181",
            "specs": [
                "<0.0.7.1"
            ],
            "v": "<0.0.7.1"
        },
        {
            "advisory": "ziirish before 0.1.0 has some undisclosed security vulnerabilities.",
            "cve": null,
            "id": "pyup.io-26182",
            "specs": [
                "<0.1.0"
            ],
            "v": "<0.1.0"
        },
        {
            "advisory": "ziirish before 0.3.0 doesn't restrict files that can be sent by the agent.",
            "cve": null,
            "id": "pyup.io-26183",
            "specs": [
                "<0.3.0"
            ],
            "v": "<0.3.0"
        }
    ],
    "zodb": [
        {
            "advisory": "Race condition in ZEO/StorageServer.py in Zope Object Database (ZODB) before 3.10.0 allows remote attackers to cause a denial of service (daemon outage) by establishing and then immediately closing a TCP connection, leading to the accept function having an unexpected return value of None, an unexpected value of None for the address, or an ECONNABORTED, EAGAIN, or EWOULDBLOCK error, a related issue to CVE-2010-3492.",
            "cve": "CVE-2010-3495",
            "id": "pyup.io-26184",
            "specs": [
                "<3.10.0"
            ],
            "v": "<3.10.0"
        },
        {
            "advisory": "Unspecified vulnerability in Zope Object Database (ZODB) before 3.8.2, when certain Zope Enterprise Objects (ZEO) database sharing is enabled, allows remote attackers to execute arbitrary Python code via vectors involving the ZEO network protocol.",
            "cve": "CVE-2009-0668",
            "id": "pyup.io-33165",
            "specs": [
                "<3.8.2"
            ],
            "v": "<3.8.2"
        },
        {
            "advisory": "Zope Object Database (ZODB) before 3.8.2, when certain Zope Enterprise Objects (ZEO) database sharing is enabled, allows remote attackers to bypass authentication via vectors involving the ZEO network protocol.",
            "cve": "CVE-2009-0669",
            "id": "pyup.io-33166",
            "specs": [
                "<3.8.2"
            ],
            "v": "<3.8.2"
        },
        {
            "advisory": "Unspecified vulnerability in the Zope Enterprise Objects (ZEO) storage-server functionality in Zope Object Database (ZODB) 3.8 before 3.8.3 and 3.9.x before 3.9.0c2, when certain ZEO database sharing and blob support are enabled, allows remote authenticated users to read or delete arbitrary files via unknown vectors.",
            "cve": "CVE-2009-2701",
            "id": "pyup.io-33167",
            "specs": [
                ">=3.9,<3.9.0c2",
                ">=3.8,<3.8.3"
            ],
            "v": ">=3.9,<3.9.0c2,>=3.8,<3.8.3"
        }
    ],
    "zope": [
        {
            "advisory": "Zope before 2.13.19, as used in Plone before 4.2.3 and 4.3 before beta 1, does not reseed the pseudo-random number generator (PRNG), which makes it easier for remote attackers to guess the value via unspecified vectors.  NOTE: this issue was SPLIT from CVE-2012-5508 due to different vulnerability types (ADT2).",
            "cve": "CVE-2012-6661",
            "id": "pyup.io-26189",
            "specs": [
                "<2.13.19"
            ],
            "v": "<2.13.19"
        }
    ],
    "zope.html": [
        {
            "advisory": "Multiple directory traversal vulnerabilities in FCKeditor before 2.6.4.1 allow remote attackers to create executable files in arbitrary directories via directory traversal sequences in the input to unspecified connector modules, as exploited in the wild for remote code execution in July 2009, related to the file browser and the editor/filemanager/connectors/ directory.",
            "cve": "CVE-2009-2265",
            "id": "pyup.io-26190",
            "specs": [
                "<1.2"
            ],
            "v": "<1.2"
        }
    ],
    "zope2": [
        {
            "advisory": "ZServer in Zope 2.10.x before 2.10.12 and 2.11.x before 2.11.7 allows remote attackers to cause a denial of service (crash of worker threads) via vectors that trigger uncaught exceptions.",
            "cve": "CVE-2010-3198",
            "id": "pyup.io-26191",
            "specs": [
                "<2.11.7"
            ],
            "v": "<2.11.7"
        },
        {
            "advisory": "Unspecified vulnerability in (1) Zope 2.12.x before 2.12.19 and 2.13.x before 2.13.8, as used in Plone 4.x and other products, and (2) PloneHotfix20110720 for Plone 3.x allows attackers to gain privileges via unspecified vectors, related to a \"highly serious vulnerability.\" NOTE: this vulnerability exists because of an incorrect fix for CVE-2011-0720.",
            "cve": "CVE-2011-2528",
            "id": "pyup.io-26192",
            "specs": [
                "<2.12.19",
                ">=2.13,<2.13.8"
            ],
            "v": "<2.12.19,>=2.13,<2.13.8"
        },
        {
            "advisory": "The App.Undo.UndoSupport.get_request_var_or_attr function in Zope before 2.12.21 and 2.13.x before 2.13.11, as used in Plone before 4.2.3 and 4.3 before beta 1, allows remote authenticated users to gain access to restricted attributes via unspecified vectors.",
            "cve": "CVE-2012-5489",
            "id": "pyup.io-26193",
            "specs": [
                "<2.13.11",
                "<2.12.21"
            ],
            "v": "<2.13.11,<2.12.21"
        },
        {
            "advisory": "ZPublisher.HTTPRequest._scrubHeader in Zope 2 before 2.13.19, as used in Plone before 4.3 beta 1, allows remote attackers to inject arbitrary HTTP headers via a linefeed (LF) character.",
            "cve": "CVE-2012-5486",
            "id": "pyup.io-33168",
            "specs": [
                "<2.13.19"
            ],
            "v": "<2.13.19"
        },
        {
            "advisory": "AccessControl/AuthEncoding.py in Zope before 2.13.19, as used in Plone before 4.2.3 and 4.3 before beta 1, allows remote attackers to obtain passwords via vectors involving timing discrepancies in password validation.",
            "cve": "CVE-2012-5507",
            "id": "pyup.io-33169",
            "specs": [
                "<2.13.19"
            ],
            "v": "<2.13.19"
        },
        {
            "advisory": "Unspecified vulnerability in Zope 2.12.x and 2.13.x, as used in Plone 4.0.x through 4.0.9, 4.1, and 4.2 through 4.2a2, allows remote attackers to execute arbitrary commands via vectors related to the p_ class in OFS/misc_.py and the use of Python modules.",
            "cve": "CVE-2011-3587",
            "id": "pyup.io-26196",
            "specs": [
                "==2.13,==2.12"
            ],
            "v": "==2.13,==2.12"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in Zope 2.8.x before 2.8.12, 2.9.x before 2.9.12, 2.10.x before 2.10.11, 2.11.x before 2.11.6, and 2.12.x before 2.12.3 allows remote attackers to inject arbitrary web script or HTML via vectors related to error messages.",
            "cve": "CVE-2010-1104",
            "id": "pyup.io-26197",
            "specs": [
                ">=2.12,<2.12.3",
                ">=2.10,<2.10.11",
                ">=2.8,<2.8.12",
                ">=2.9,<2.9.12"
            ],
            "v": ">=2.12,<2.12.3,>=2.10,<2.10.11,>=2.8,<2.8.12,>=2.9,<2.9.12"
        }
    ],
    "zopeskel": [
        {
            "advisory": "zopeskel before <2.11 uses an insecure transitive dependency (Zope before 2.9.10).",
            "cve": null,
            "id": "pyup.io-26198",
            "specs": [
                "<2.11"
            ],
            "v": "<2.11"
        }
    ],
    "zwiki": [
        {
            "advisory": "zwiki before <0.37 has a cross-site scripting vulnerability in standard error messages.",
            "cve": null,
            "id": "pyup.io-26199",
            "specs": [
                "<0.37"
            ],
            "v": "<0.37"
        },
        {
            "advisory": "zwiki before <0.59 has a vulnerability in a comment form.",
            "cve": null,
            "id": "pyup.io-26200",
            "specs": [
                "<0.59"
            ],
            "v": "<0.59"
        }
    ]
}
