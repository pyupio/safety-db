{
    "accesscontrol": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25611",
            "specs": [
                "<3.0.12"
            ],
            "v": "<3.0.12"
        }
    ],
    "aiocouchdb": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25612",
            "specs": [
                "<0.6.0"
            ],
            "v": "<0.6.0"
        }
    ],
    "aiohttp": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25613",
            "specs": [
                "<0.16.3"
            ],
            "v": "<0.16.3"
        }
    ],
    "aiohttp-auth-autz": [
        {
            "advisory": "aiohttp-auth-autz before 0.2.0 isn't correctly checking the user_id in acl middleware, leading to a possible permission escalation.",
            "cve": null,
            "id": "pyup.io-32971",
            "specs": [
                "<0.2.0"
            ],
            "v": "<0.2.0"
        }
    ],
    "aldryn-django": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25614",
            "specs": [
                "<1.8.10.1"
            ],
            "v": "<1.8.10.1"
        }
    ],
    "annotator": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25615",
            "specs": [
                "<0.11.2"
            ],
            "v": "<0.11.2"
        }
    ],
    "ansible": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25616",
            "specs": [
                "<1.2.3"
            ],
            "v": "<1.2.3"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25617",
            "specs": [
                "<1.5.4"
            ],
            "v": "<1.5.4"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25618",
            "specs": [
                "<1.5.5"
            ],
            "v": "<1.5.5"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25619",
            "specs": [
                "<1.6.4"
            ],
            "v": "<1.6.4"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25620",
            "specs": [
                "<1.6.6"
            ],
            "v": "<1.6.6"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25621",
            "specs": [
                "<1.6.7"
            ],
            "v": "<1.6.7"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25622",
            "specs": [
                "<1.7"
            ],
            "v": "<1.7"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25623",
            "specs": [
                "<1.7.1"
            ],
            "v": "<1.7.1"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25624",
            "specs": [
                "<1.8.3"
            ],
            "v": "<1.8.3"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25625",
            "specs": [
                "<1.9.2"
            ],
            "v": "<1.9.2"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25626",
            "specs": [
                "<1.9.6"
            ],
            "v": "<1.9.6"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25627",
            "specs": [
                "<2.0.2"
            ],
            "v": "<2.0.2"
        },
        {
            "advisory": "ansible before 2.2.1 is vulnerable to arbitrary code execution. An attacker with control over a client system being managed by Ansible and the ability to send facts back to the Ansible server could use this flaw to execute arbitrary code on the Ansible server as the user and group Ansible is running as.",
            "cve": null,
            "id": "pyup.io-33286",
            "specs": [
                "<2.2.1"
            ],
            "v": "<2.2.1"
        }
    ],
    "apache-libcloud": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25628",
            "specs": [
                "<0.11.1"
            ],
            "v": "<0.11.1"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25629",
            "specs": [
                "<0.13.3"
            ],
            "v": "<0.13.3"
        }
    ],
    "archmage": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25630",
            "specs": [
                "<0.3.1"
            ],
            "v": "<0.3.1"
        }
    ],
    "authbwc": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25631",
            "specs": [
                "<0.1.4"
            ],
            "v": "<0.1.4"
        }
    ],
    "autobahn": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25632",
            "specs": [
                "<0.15.0"
            ],
            "v": "<0.15.0"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25633",
            "specs": [
                "<0.6.4"
            ],
            "v": "<0.6.4"
        }
    ],
    "bbcode": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25634",
            "specs": [
                "<1.0.9"
            ],
            "v": "<1.0.9"
        }
    ],
    "beaker": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25635",
            "specs": [
                "<0.9.4"
            ],
            "v": "<0.9.4"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25636",
            "specs": [
                "<1.6.4"
            ],
            "v": "<1.6.4"
        }
    ],
    "bepasty": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25637",
            "specs": [
                "<0.3.0"
            ],
            "v": "<0.3.0"
        }
    ],
    "birdhousebuilder.recipe.nginx": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25638",
            "specs": [
                "<0.1.5"
            ],
            "v": "<0.1.5"
        }
    ],
    "bise.theme": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25639",
            "specs": [
                "<2.4"
            ],
            "v": "<2.4"
        }
    ],
    "bjoern": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25640",
            "specs": [
                "<1.4.2"
            ],
            "v": "<1.4.2"
        }
    ],
    "bok-choy": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25641",
            "specs": [
                "<0.5.1"
            ],
            "v": "<0.5.1"
        }
    ],
    "bottle": [
        {
            "advisory": "redirect() in bottle.py in bottle 0.12.10 doesn't filter a \"\\r\\n\" sequence, which leads to a CRLF attack, as demonstrated by a redirect(\"233\\r\\nSet-Cookie: name=salt\") call.",
            "cve": "CVE-2016-9964",
            "id": "pyup.io-25642",
            "specs": [
                "<0.12.10"
            ],
            "v": "<0.12.10"
        }
    ],
    "cairosvg": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25643",
            "specs": [
                "<1.0.21"
            ],
            "v": "<1.0.21"
        }
    ],
    "caravel": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25644",
            "specs": [
                "<0.11.0"
            ],
            "v": "<0.11.0"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25645",
            "specs": [
                "<0.14.0"
            ],
            "v": "<0.14.0"
        }
    ],
    "celery": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25646",
            "specs": [
                ">=4.0,<4.0.1"
            ],
            "v": ">=4.0,<4.0.1"
        }
    ],
    "centrifuge": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25647",
            "specs": [
                "<0.3.8"
            ],
            "v": "<0.3.8"
        }
    ],
    "chanjo-report": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25648",
            "specs": [
                "<2.4.0"
            ],
            "v": "<2.4.0"
        }
    ],
    "cheetah": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25649",
            "specs": [
                "<0.9.17rc1"
            ],
            "v": "<0.9.17rc1"
        }
    ],
    "cherrymusic": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25650",
            "specs": [
                "<0.36.0"
            ],
            "v": "<0.36.0"
        }
    ],
    "cinder": [
        {
            "advisory": "The OpenStack Nova (python-nova) package 1:2013.2.3-0 before 1:2013.2.3-0ubuntu1.2 and 1:2014.1-0 before 1:2014.1-0ubuntu1.2 and Openstack Cinder (python-cinder) package 1:2013.2.3-0 before 1:2013.2.3-0ubuntu1.1 and 1:2014.1-0 before 1:2014.1-0ubuntu1.1 for Ubuntu 13.10 and 14.04 LTS does not properly set the sudo configuration, which makes it easier for attackers to gain privileges by leveraging another vulnerability.",
            "cve": "CVE-2013-1068",
            "id": "pyup.io-25651",
            "specs": [
                "<2013.2.3"
            ],
            "v": "<2013.2.3"
        }
    ],
    "cipher.googlepam": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25652",
            "specs": [
                "<1.5.1"
            ],
            "v": "<1.5.1"
        }
    ],
    "clam": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25653",
            "specs": [
                "<0.9.10"
            ],
            "v": "<0.9.10"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25654",
            "specs": [
                "<0.9.11"
            ],
            "v": "<0.9.11"
        }
    ],
    "clearsilver": [
        {
            "advisory": "Format string vulnerability in the p_cgi_error function in python/neo_cgi.c in the Python CGI Kit (neo_cgi) module for Clearsilver 0.10.5 and earlier allows remote attackers to cause a denial of service (crash) and possibly execute arbitrary code via format string specifiers that are not properly handled when creating CGI error messages using the cgi_error API function.",
            "cve": "CVE-2011-4357",
            "id": "pyup.io-25655",
            "specs": [
                "<0.10.5"
            ],
            "v": "<0.10.5"
        }
    ],
    "cmsplugin-filer": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25656",
            "specs": [
                "<1.0.0"
            ],
            "v": "<1.0.0"
        }
    ],
    "collective.contact.core": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25657",
            "specs": [
                "<1.10"
            ],
            "v": "<1.10"
        }
    ],
    "collective.documentviewer": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25658",
            "specs": [
                "<1.5.1"
            ],
            "v": "<1.5.1"
        }
    ],
    "collective.js.datatables": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25659",
            "specs": [
                "<4.1.1"
            ],
            "v": "<4.1.1"
        }
    ],
    "collective.noticeboard": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25660",
            "specs": [
                "<0.7.1"
            ],
            "v": "<0.7.1"
        }
    ],
    "collective.portlet.twitter": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25661",
            "specs": [
                "<1.0b3"
            ],
            "v": "<1.0b3"
        }
    ],
    "collective.signupsheet": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25662",
            "specs": [
                "<0.2.0"
            ],
            "v": "<0.2.0"
        }
    ],
    "collective.solr": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25663",
            "specs": [
                "<1.0b24"
            ],
            "v": "<1.0b24"
        }
    ],
    "collective.tablepage": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25664",
            "specs": [
                "<0.3"
            ],
            "v": "<0.3"
        }
    ],
    "collective.transcode.star": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25665",
            "specs": [
                "<0.22"
            ],
            "v": "<0.22"
        }
    ],
    "collective.xmpp.chat": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25666",
            "specs": [
                "<0.3.1"
            ],
            "v": "<0.3.1"
        }
    ],
    "collins-client": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25667",
            "specs": [
                "<2.1.0"
            ],
            "v": "<2.1.0"
        }
    ],
    "confidant": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25668",
            "specs": [
                "<1.1.14"
            ],
            "v": "<1.1.14"
        }
    ],
    "conn-check": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25669",
            "specs": [
                "<1.0.18"
            ],
            "v": "<1.0.18"
        }
    ],
    "convict": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25670",
            "specs": [
                "<1.1.1"
            ],
            "v": "<1.1.1"
        }
    ],
    "cosmos-wfm": [
        {
            "advisory": "cosmos-wfm before 2.1.1 is vulnerable to an attack where malicious hackers can run arbitrary code if they have file system (even external mounts!)+network access on the machine running luigid (executed by the user that you run luigid with).",
            "cve": null,
            "id": "pyup.io-34181",
            "specs": [
                "<2.1.1"
            ],
            "v": "<2.1.1"
        }
    ],
    "coveralls": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25671",
            "specs": [
                "<0.1.1"
            ],
            "v": "<0.1.1"
        }
    ],
    "cplay-ng": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25672",
            "specs": [
                "<1.50"
            ],
            "v": "<1.50"
        }
    ],
    "creavel": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25673",
            "specs": [
                "<0.11.0"
            ],
            "v": "<0.11.0"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25674",
            "specs": [
                "<0.14.0"
            ],
            "v": "<0.14.0"
        }
    ],
    "crossbar": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25675",
            "specs": [
                "<0.15.0"
            ],
            "v": "<0.15.0"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25676",
            "specs": [
                "<0.6.4"
            ],
            "v": "<0.6.4"
        }
    ],
    "cryptacular": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25677",
            "specs": [
                "<1.2"
            ],
            "v": "<1.2"
        }
    ],
    "cryptography": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25678",
            "specs": [
                "<0.9.1"
            ],
            "v": "<0.9.1"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25679",
            "specs": [
                "<1.0.2"
            ],
            "v": "<1.0.2"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25680",
            "specs": [
                "<1.5.3"
            ],
            "v": "<1.5.3"
        }
    ],
    "cryptography-vectors": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25681",
            "specs": [
                "<0.9.1"
            ],
            "v": "<0.9.1"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25682",
            "specs": [
                "<1.0.2"
            ],
            "v": "<1.0.2"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25683",
            "specs": [
                "<1.5.3"
            ],
            "v": "<1.5.3"
        }
    ],
    "cssutils": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25684",
            "specs": [
                "<0.9.6a2"
            ],
            "v": "<0.9.6a2"
        }
    ],
    "dateable.chronos": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25685",
            "specs": [
                "<0.7.2"
            ],
            "v": "<0.7.2"
        }
    ],
    "defusedexpat": [
        {
            "advisory": "The XML libraries for Python 3.4, 3.3, 3.2, 3.1, 2.7, and 2.6, as used in OpenStack Keystone Essex, Folsom, and Grizzly; Compute (Nova) Essex and Folsom; Cinder Folsom; Django; and possibly other products allow remote attackers to cause a denial of service (resource consumption and crash) via an XML Entity Expansion (XEE) attack.",
            "cve": "CVE-2013-1664",
            "id": "pyup.io-33054",
            "specs": [
                "<0.3"
            ],
            "v": "<0.3"
        },
        {
            "advisory": "The XML libraries for Python 3.4, 3.3, 3.2, 3.1, 2.7, and 2.6, as used in OpenStack Keystone Essex and Folsom, Django, and possibly other products allow remote attackers to read arbitrary files via an XML external entity declaration in conjunction with an entity reference, aka an XML External Entity (XXE) attack.",
            "cve": "CVE-2013-1665",
            "id": "pyup.io-33055",
            "specs": [
                "<0.3"
            ],
            "v": "<0.3"
        }
    ],
    "defusedxml": [
        {
            "advisory": "The XML libraries for Python 3.4, 3.3, 3.2, 3.1, 2.7, and 2.6, as used in OpenStack Keystone Essex and Folsom, Django, and possibly other products allow remote attackers to read arbitrary files via an XML external entity declaration in conjunction with an entity reference, aka an XML External Entity (XXE) attack.",
            "cve": "CVE-2013-1665",
            "id": "pyup.io-33057",
            "specs": [
                "<0.4"
            ],
            "v": "<0.4"
        },
        {
            "advisory": "The XML libraries for Python 3.4, 3.3, 3.2, 3.1, 2.7, and 2.6, as used in OpenStack Keystone Essex, Folsom, and Grizzly; Compute (Nova) Essex and Folsom; Cinder Folsom; Django; and possibly other products allow remote attackers to cause a denial of service (resource consumption and crash) via an XML Entity Expansion (XEE) attack.",
            "cve": "CVE-2013-1664",
            "id": "pyup.io-33056",
            "specs": [
                "<0.4"
            ],
            "v": "<0.4"
        }
    ],
    "deis": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25691",
            "specs": [
                "<1.3.1"
            ],
            "v": "<1.3.1"
        }
    ],
    "didjvu": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25692",
            "specs": [
                "<0.4"
            ],
            "v": "<0.4"
        }
    ],
    "djangae": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25693",
            "specs": [
                "<0.9.4"
            ],
            "v": "<0.9.4"
        }
    ],
    "django": [
        {
            "advisory": "The Admin media handler in core/servers/basehttp.py in Django 1.0 and 0.96 does not properly map URL requests to expected \"static media files,\" which allows remote attackers to conduct directory traversal attacks and read arbitrary files via a crafted URL.",
            "cve": "CVE-2009-2659",
            "id": "pyup.io-25694",
            "specs": [
                "<1.0"
            ],
            "v": "<1.0"
        },
        {
            "advisory": "Algorithmic complexity vulnerability in the forms library in Django 1.0 before 1.0.4 and 1.1 before 1.1.1 allows remote attackers to cause a denial of service (CPU consumption) via a crafted (1) EmailField (email address) or (2) URLField (URL) that triggers a large amount of backtracking in a regular expression.",
            "cve": "CVE-2009-3695",
            "id": "pyup.io-25695",
            "specs": [
                "<1.0.4",
                ">=1.1,<1.1.1"
            ],
            "v": "<1.0.4,>=1.1,<1.1.1"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.",
            "cve": "CVE-2011-0697",
            "id": "pyup.io-33061",
            "specs": [
                "<1.1.4"
            ],
            "v": "<1.1.4"
        },
        {
            "advisory": "Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",
            "cve": "CVE-2011-0698",
            "id": "pyup.io-33062",
            "specs": [
                "<1.1.4",
                ">=1.2,<1.2.5"
            ],
            "v": "<1.1.4,>=1.2,<1.2.5"
        },
        {
            "advisory": "Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a \"combination of browser plugins and redirects,\" a related issue to CVE-2011-0447.",
            "cve": "CVE-2011-0696",
            "id": "pyup.io-33060",
            "specs": [
                "<1.1.4",
                ">=1.2,<1.2.5"
            ],
            "v": "<1.1.4,>=1.2,<1.2.5"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in Django 1.2.x before 1.2.2 allows remote attackers to inject arbitrary web script or HTML via a csrfmiddlewaretoken (aka csrf_token) cookie.",
            "cve": "CVE-2010-3082",
            "id": "pyup.io-25701",
            "specs": [
                "<1.2.2"
            ],
            "v": "<1.2.2"
        },
        {
            "advisory": "The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",
            "cve": "CVE-2011-4140",
            "id": "pyup.io-33066",
            "specs": [
                "<1.2.7",
                ">=1.3,<1.3.1"
            ],
            "v": "<1.2.7,>=1.3,<1.3.1"
        },
        {
            "advisory": "The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 originally tests a URL's validity through a HEAD request, but then uses a GET request for the new target URL in the case of a redirect, which might allow remote attackers to trigger arbitrary GET requests with an unintended source IP address via a crafted Location header.",
            "cve": "CVE-2011-4138",
            "id": "pyup.io-33065",
            "specs": [
                "<1.2.7",
                ">=1.3,<1.3.1"
            ],
            "v": "<1.2.7,>=1.3,<1.3.1"
        },
        {
            "advisory": "django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",
            "cve": "CVE-2011-4136",
            "id": "pyup.io-33063",
            "specs": [
                "<1.2.7",
                ">=1.3,<1.3.1"
            ],
            "v": "<1.2.7,>=1.3,<1.3.1"
        },
        {
            "advisory": "The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",
            "cve": "CVE-2011-4137",
            "id": "pyup.io-33064",
            "specs": [
                "<1.2.7",
                ">=1.3,<1.3.1"
            ],
            "v": "<1.2.7,>=1.3,<1.3.1"
        },
        {
            "advisory": "The get_image_dimensions function in the image-handling functionality in Django before 1.3.2 and 1.4.x before 1.4.1 uses a constant chunk size in all attempts to determine dimensions, which allows remote attackers to cause a denial of service (process or thread consumption) via a large TIFF image.",
            "cve": "CVE-2012-3444",
            "id": "pyup.io-33069",
            "specs": [
                "<1.3.2",
                ">=1.4,<1.4.1"
            ],
            "v": "<1.3.2,>=1.4,<1.4.1"
        },
        {
            "advisory": "The django.forms.ImageField class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.",
            "cve": "CVE-2012-3443",
            "id": "pyup.io-33068",
            "specs": [
                "<1.3.2",
                ">=1.4,<1.4.1"
            ],
            "v": "<1.3.2,>=1.4,<1.4.1"
        },
        {
            "advisory": "The (1) django.http.HttpResponseRedirect and (2) django.http.HttpResponsePermanentRedirect classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a data: URL.",
            "cve": "CVE-2012-3442",
            "id": "pyup.io-33067",
            "specs": [
                "<1.3.2",
                ">=1.4,<1.4.1"
            ],
            "v": "<1.3.2,>=1.4,<1.4.1"
        },
        {
            "advisory": "The django.http.HttpRequest.get_host function in Django 1.3.x before 1.3.4 and 1.4.x before 1.4.2 allows remote attackers to generate and display arbitrary URLs via crafted username and password Host header values.",
            "cve": "CVE-2012-4520",
            "id": "pyup.io-25709",
            "specs": [
                "<1.3.4",
                ">=1.4,<1.4.2"
            ],
            "v": "<1.3.4,>=1.4,<1.4.2"
        },
        {
            "advisory": "The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a \"\\njavascript:\" URL.",
            "cve": "CVE-2015-0220",
            "id": "pyup.io-33071",
            "specs": [
                "<1.4.18",
                ">=1.6,<1.6.10",
                ">=1.7,<1.7.3"
            ],
            "v": "<1.4.18,>=1.6,<1.6.10,>=1.7,<1.7.3"
        },
        {
            "advisory": "The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",
            "cve": "CVE-2015-0221",
            "id": "pyup.io-33072",
            "specs": [
                "<1.4.18",
                ">=1.6,<1.6.10",
                ">=1.7,<1.7.3"
            ],
            "v": "<1.4.18,>=1.6,<1.6.10,>=1.7,<1.7.3"
        },
        {
            "advisory": "Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",
            "cve": "CVE-2015-0219",
            "id": "pyup.io-33070",
            "specs": [
                "<1.4.18",
                ">=1.7,<1.7.3",
                ">=1.6,<1.6.10"
            ],
            "v": "<1.4.18,>=1.7,<1.7.3,>=1.6,<1.6.10"
        },
        {
            "advisory": "The password hasher in contrib/auth/hashers.py in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to enumerate users via a timing attack involving login requests.",
            "cve": "CVE-2016-2513",
            "id": "pyup.io-33074",
            "specs": [
                "<1.8.10",
                ">=1.9,<1.9.3"
            ],
            "v": "<1.8.10,>=1.9,<1.9.3"
        },
        {
            "advisory": "The utils.http.is_safe_url function in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks or possibly conduct cross-site scripting (XSS) attacks via a URL containing basic authentication, as demonstrated by http://mysite.example.com\\@attacker.com.",
            "cve": "CVE-2016-2512",
            "id": "pyup.io-33073",
            "specs": [
                "<1.8.10",
                ">=1.9,<1.9.3"
            ],
            "v": "<1.8.10,>=1.9,<1.9.3"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25722",
            "specs": [
                ">=1.10,<1.10.3"
            ],
            "v": ">=1.10,<1.10.3"
        },
        {
            "advisory": "CVE-2017-7233: Open redirect and possible XSS attack via user-supplied numeric redirect URLs\r\n============================================================================================\r\n\r\nDjango relies on user input in some cases  (e.g.\r\n:func:`django.contrib.auth.views.login` and :doc:`i18n </topics/i18n/index>`)\r\nto redirect the user to an \"on success\" URL. The security check for these\r\nredirects (namely ``django.utils.http.is_safe_url()``) considered some numeric\r\nURLs (e.g. ``http:999999999``) \"safe\" when they shouldn't be.\r\n\r\nAlso, if a developer relies on ``is_safe_url()`` to provide safe redirect\r\ntargets and puts such a URL into a link, they could suffer from an XSS attack.\r\n\r\nCVE-2017-7234: Open redirect vulnerability in ``django.views.static.serve()``\r\n=============================================================================\r\n\r\nA maliciously crafted URL to a Django site using the\r\n:func:`~django.views.static.serve` view could redirect to any other domain. The\r\nview no longer does any redirects as they don't provide any known, useful\r\nfunctionality.\r\n\r\nNote, however, that this view has always carried a warning that it is not\r\nhardened for production use and should be used only as a development aid.",
            "cve": null,
            "id": "pyup.io-33300",
            "specs": [
                ">=1.10,<1.10.7"
            ],
            "v": ">=1.10,<1.10.7"
        },
        {
            "advisory": "The form library in Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 allows remote attackers to bypass intended resource limits for formsets and cause a denial of service (memory consumption) or trigger server errors via a modified max_num parameter.",
            "cve": "CVE-2013-0306",
            "id": "pyup.io-33112",
            "specs": [
                ">=1.3,<1.3.6",
                ">=1.4,<1.4.4",
                ">=1.5,<1.5.1"
            ],
            "v": ">=1.3,<1.3.6,>=1.4,<1.4.4,>=1.5,<1.5.1"
        },
        {
            "advisory": "The administrative interface for Django 1.3.x before 1.3.6, 1.4.x before 1.4.4, and 1.5 before release candidate 2 does not check permissions for the history view, which allows remote authenticated administrators to obtain sensitive object history information.",
            "cve": "CVE-2013-0305",
            "id": "pyup.io-33111",
            "specs": [
                ">=1.3,<1.3.6",
                ">=1.4,<1.4.4",
                ">=1.5,<1.5.1"
            ],
            "v": ">=1.3,<1.3.6,>=1.4,<1.4.4,>=1.5,<1.5.1"
        },
        {
            "advisory": "The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",
            "cve": "CVE-2015-5964",
            "id": "pyup.io-25728",
            "specs": [
                ">=1.4,<1.4.22",
                ">=1.7,<1.7.10"
            ],
            "v": ">=1.4,<1.4.22,>=1.7,<1.7.10"
        },
        {
            "advisory": "contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",
            "cve": "CVE-2015-5963",
            "id": "pyup.io-25727",
            "specs": [
                ">=1.4,<1.4.22",
                ">=1.7,<1.7.10",
                ">=1.8,<1.8.4"
            ],
            "v": ">=1.4,<1.4.22,>=1.7,<1.7.10,>=1.8,<1.8.4"
        },
        {
            "advisory": "The authentication framework (django.contrib.auth) in Django 1.4.x before 1.4.8, 1.5.x before 1.5.4, and 1.6.x before 1.6 beta 4 allows remote attackers to cause a denial of service (CPU consumption) via a long password which is then hashed.",
            "cve": "CVE-2013-1443",
            "id": "pyup.io-25729",
            "specs": [
                ">=1.6,<1.6-beta-4",
                ">=1.4,<1.4.8",
                ">=1.5,<1.5.4"
            ],
            "v": ">=1.6,<1.6-beta-4,>=1.4,<1.4.8,>=1.5,<1.5.4"
        },
        {
            "advisory": "ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",
            "cve": "CVE-2015-0222",
            "id": "pyup.io-25730",
            "specs": [
                ">=1.7,<1.7.3",
                ">=1.6,<1.6.10"
            ],
            "v": ">=1.7,<1.7.3,>=1.6,<1.6.10"
        },
        {
            "advisory": "The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",
            "cve": "CVE-2015-2316",
            "id": "pyup.io-25731",
            "specs": [
                ">=1.7,<1.7.7",
                ">=1.8,<1.8c1",
                ">=1.6,<1.6.11"
            ],
            "v": ">=1.7,<1.7.7,>=1.8,<1.8c1,>=1.6,<1.6.11"
        },
        {
            "advisory": "The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",
            "cve": "CVE-2015-5143",
            "id": "pyup.io-25725",
            "specs": [
                ">=1.7,<1.7.9",
                ">=1.5,<1.7",
                ">=1.4,<1.4.21"
            ],
            "v": ">=1.7,<1.7.9,>=1.5,<1.7,>=1.4,<1.4.21"
        },
        {
            "advisory": "Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",
            "cve": "CVE-2016-9013",
            "id": "pyup.io-33076",
            "specs": [
                ">=1.8,<1.8.16",
                ">=1.9,<1.9.11",
                ">=1.10,<1.10.3"
            ],
            "v": ">=1.8,<1.8.16,>=1.9,<1.9.11,>=1.10,<1.10.3"
        },
        {
            "advisory": "Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",
            "cve": "CVE-2016-9014",
            "id": "pyup.io-33075",
            "specs": [
                ">=1.8,<1.8.16",
                ">=1.9,<1.9.11",
                ">=1.10,<1.10.3"
            ],
            "v": ">=1.8,<1.8.16,>=1.9,<1.9.11,>=1.10,<1.10.3"
        },
        {
            "advisory": "Django 1.8.18 fixes two security issues in 1.8.17.\r\n\r\nCVE-2017-7233: Open redirect and possible XSS attack via user-supplied numeric redirect URLs\r\n============================================================================================\r\n\r\nDjango relies on user input in some cases  (e.g.\r\n:func:`django.contrib.auth.views.login` and :doc:`i18n </topics/i18n/index>`)\r\nto redirect the user to an \"on success\" URL. The security check for these\r\nredirects (namely ``django.utils.http.is_safe_url()``) considered some numeric\r\nURLs (e.g. ``http:999999999``) \"safe\" when they shouldn't be.\r\n\r\nAlso, if a developer relies on ``is_safe_url()`` to provide safe redirect\r\ntargets and puts such a URL into a link, they could suffer from an XSS attack.\r\n\r\nCVE-2017-7234: Open redirect vulnerability in ``django.views.static.serve()``\r\n=============================================================================\r\n\r\nA maliciously crafted URL to a Django site using the\r\n:func:`~django.views.static.serve` view could redirect to any other domain. The\r\nview no longer does any redirects as they don't provide any known, useful\r\nfunctionality.\r\n\r\nNote, however, that this view has always carried a warning that it is not\r\nhardened for production use and should be used only as a development aid.",
            "cve": null,
            "id": "pyup.io-33301",
            "specs": [
                ">=1.8,<1.8.18"
            ],
            "v": ">=1.8,<1.8.18"
        },
        {
            "advisory": "The session.flush function in the cached_db backend in Django 1.8.x before 1.8.2 does not properly flush the session, which allows remote attackers to hijack user sessions via an empty string in the session key.",
            "cve": "CVE-2015-3982",
            "id": "pyup.io-25732",
            "specs": [
                ">=1.8,<1.8.2"
            ],
            "v": ">=1.8,<1.8.2"
        },
        {
            "advisory": "validators.URLValidator in Django 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (CPU consumption) via unspecified vectors.",
            "cve": "CVE-2015-5145",
            "id": "pyup.io-25733",
            "specs": [
                ">=1.8,<1.8.3"
            ],
            "v": ">=1.8,<1.8.3"
        },
        {
            "advisory": "Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",
            "cve": "CVE-2015-5144",
            "id": "pyup.io-25726",
            "specs": [
                ">=1.8,<1.8.3",
                ">=1.7,<1.7.9",
                ">=1.5,<1.6",
                ">=1.4,<1.4.21"
            ],
            "v": ">=1.8,<1.8.3,>=1.7,<1.7.9,>=1.5,<1.6,>=1.4,<1.4.21"
        },
        {
            "advisory": "The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",
            "cve": "CVE-2015-8213",
            "id": "pyup.io-25714",
            "specs": [
                ">=1.8,<1.8.7",
                "<1.7.11",
                ">=1.9,<1.9rc2"
            ],
            "v": ">=1.8,<1.8.7,<1.7.11,>=1.9,<1.9rc2"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",
            "cve": "CVE-2015-2241",
            "id": "pyup.io-25715",
            "specs": [
                ">=1.8,<1.8b2",
                "<1.7.6"
            ],
            "v": ">=1.8,<1.8b2,<1.7.6"
        },
        {
            "advisory": "The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \\x08javascript: URL.",
            "cve": "CVE-2015-2317",
            "id": "pyup.io-25713",
            "specs": [
                ">=1.8,<1.8c1",
                "<1.4.20",
                ">=1.5,<1.6",
                ">=1.6,<1.6.11",
                ">=1.7,<1.7.7"
            ],
            "v": ">=1.8,<1.8c1,<1.4.20,>=1.5,<1.6,>=1.6,<1.6.11,>=1.7,<1.7.7"
        },
        {
            "advisory": "The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",
            "cve": "CVE-2016-7401",
            "id": "pyup.io-25718",
            "specs": [
                ">=1.9,<1.9.10",
                "<1.8.15"
            ],
            "v": ">=1.9,<1.9.10,<1.8.15"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25734",
            "specs": [
                ">=1.9,<1.9.11"
            ],
            "v": ">=1.9,<1.9.11"
        },
        {
            "advisory": "Django 1.9.13 fixes two security issues and a bug in 1.9.12. This is the final\r\nrelease of the 1.9.x series.\r\n\r\nCVE-2017-7233: Open redirect and possible XSS attack via user-supplied numeric redirect URLs\r\n============================================================================================\r\n\r\nDjango relies on user input in some cases  (e.g.\r\n:func:`django.contrib.auth.views.login` and :doc:`i18n </topics/i18n/index>`)\r\nto redirect the user to an \"on success\" URL. The security check for these\r\nredirects (namely ``django.utils.http.is_safe_url()``) considered some numeric\r\nURLs (e.g. ``http:999999999``) \"safe\" when they shouldn't be.\r\n\r\nAlso, if a developer relies on ``is_safe_url()`` to provide safe redirect\r\ntargets and puts such a URL into a link, they could suffer from an XSS attack.\r\n\r\nCVE-2017-7234: Open redirect vulnerability in ``django.views.static.serve()``\r\n=============================================================================\r\n\r\nA maliciously crafted URL to a Django site using the\r\n:func:`~django.views.static.serve` view could redirect to any other domain. The\r\nview no longer does any redirects as they don't provide any known, useful\r\nfunctionality.\r\n\r\nNote, however, that this view has always carried a warning that it is not\r\nhardened for production use and should be used only as a development aid.",
            "cve": null,
            "id": "pyup.io-33302",
            "specs": [
                ">=1.9,<1.9.13"
            ],
            "v": ">=1.9,<1.9.13"
        },
        {
            "advisory": "Django 1.9.x before 1.9.2, when ModelAdmin.save_as is set to True, allows remote authenticated users to bypass intended access restrictions and create ModelAdmin objects via the \"Save as New\" option when editing objects and leveraging the \"change\" permission.",
            "cve": "CVE-2016-2048",
            "id": "pyup.io-25735",
            "specs": [
                ">=1.9,<1.9.2"
            ],
            "v": ">=1.9,<1.9.2"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",
            "cve": "CVE-2016-6186",
            "id": "pyup.io-25721",
            "specs": [
                ">=1.9,<1.9.8",
                "==1.8.14",
                ">=1.10,<1.10rc1"
            ],
            "v": ">=1.9,<1.9.8,==1.8.14,>=1.10,<1.10rc1"
        }
    ],
    "django-access-tokens": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25736",
            "specs": [
                "<0.9.2"
            ],
            "v": "<0.9.2"
        }
    ],
    "django-allauth": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25737",
            "specs": [
                "<0.28.0"
            ],
            "v": "<0.28.0"
        }
    ],
    "django-anonymizer": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25738",
            "specs": [
                "<0.4"
            ],
            "v": "<0.4"
        }
    ],
    "django-anonymizer-compat": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25739",
            "specs": [
                "<0.4"
            ],
            "v": "<0.4"
        }
    ],
    "django-autocomplete-light": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25740",
            "specs": [
                "<2.3.0"
            ],
            "v": "<2.3.0"
        }
    ],
    "django-cms": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25741",
            "specs": [
                "<2.1.3"
            ],
            "v": "<2.1.3"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25742",
            "specs": [
                "<2.1.4"
            ],
            "v": "<2.1.4"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25743",
            "specs": [
                "<3.0.14"
            ],
            "v": "<3.0.14"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25744",
            "specs": [
                "<3.0.17"
            ],
            "v": "<3.0.17"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25745",
            "specs": [
                "<3.1.6"
            ],
            "v": "<3.1.6"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25746",
            "specs": [
                "<3.2.4"
            ],
            "v": "<3.2.4"
        },
        {
            "advisory": "django-cms 3.4.3 fixes a security vulnerability in the page redirect field which allowed users to insert JavaScript code and a vulnerability where the next parameter for the toolbar login was not sanitised and could point to another domain.",
            "cve": null,
            "id": "pyup.io-34226",
            "specs": [
                "<3.4.3"
            ],
            "v": "<3.4.3"
        }
    ],
    "django-countries": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25747",
            "specs": [
                "<3.4"
            ],
            "v": "<3.4"
        }
    ],
    "django-crispy-forms": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25748",
            "specs": [
                "<0.9.0"
            ],
            "v": "<0.9.0"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25749",
            "specs": [
                "<1.1.4"
            ],
            "v": "<1.1.4"
        }
    ],
    "django-crispy-forms-ng": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25750",
            "specs": [
                "<0.9.0"
            ],
            "v": "<0.9.0"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25751",
            "specs": [
                "<1.1.4"
            ],
            "v": "<1.1.4"
        }
    ],
    "django-dajaxice-me": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25752",
            "specs": [
                "<0.1.7"
            ],
            "v": "<0.1.7"
        }
    ],
    "django-dajaxice-ng": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25753",
            "specs": [
                "<0.1.7"
            ],
            "v": "<0.1.7"
        }
    ],
    "django-discord-bind": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25754",
            "specs": [
                "<0.2.0"
            ],
            "v": "<0.2.0"
        }
    ],
    "django-embed-video": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25755",
            "specs": [
                "<0.3"
            ],
            "v": "<0.3"
        }
    ],
    "django-envelope": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25756",
            "specs": [
                "<0.4.1"
            ],
            "v": "<0.4.1"
        }
    ],
    "django-fernet-fields": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25757",
            "specs": [
                "<0.3"
            ],
            "v": "<0.3"
        }
    ],
    "django-fiber": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25758",
            "specs": [
                "<0.9.9.1"
            ],
            "v": "<0.9.9.1"
        }
    ],
    "django-filebrowser-no-grappelli": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25759",
            "specs": [
                "<3.4.2"
            ],
            "v": "<3.4.2"
        }
    ],
    "django-filebrowser-no-grappelli-staff": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25760",
            "specs": [
                "<3.4.2"
            ],
            "v": "<3.4.2"
        }
    ],
    "django-fluent-comments": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25761",
            "specs": [
                "<1.0.1"
            ],
            "v": "<1.0.1"
        }
    ],
    "django-friendship": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25762",
            "specs": [
                "<1.2.0"
            ],
            "v": "<1.2.0"
        }
    ],
    "django-guts": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25763",
            "specs": [
                "<0.1.1"
            ],
            "v": "<0.1.1"
        }
    ],
    "django-haystack": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25764",
            "specs": [
                "<1.1"
            ],
            "v": "<1.1"
        }
    ],
    "django-hijack": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25765",
            "specs": [
                "<1.0.7"
            ],
            "v": "<1.0.7"
        }
    ],
    "django-html5-appcache": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25766",
            "specs": [
                "<0.3.0"
            ],
            "v": "<0.3.0"
        }
    ],
    "django-initial-avatars": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25767",
            "specs": [
                "<0.4"
            ],
            "v": "<0.4"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25768",
            "specs": [
                "<0.5.0"
            ],
            "v": "<0.5.0"
        }
    ],
    "django-jet": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25769",
            "specs": [
                "<1.0.4"
            ],
            "v": "<1.0.4"
        }
    ],
    "django-lazysignup": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25770",
            "specs": [
                "<0.4.0"
            ],
            "v": "<0.4.0"
        }
    ],
    "django-lazysignup-redux": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25771",
            "specs": [
                "<0.4.0"
            ],
            "v": "<0.4.0"
        }
    ],
    "django-lfs": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25772",
            "specs": [
                "<0.6.9"
            ],
            "v": "<0.6.9"
        }
    ],
    "django-markupfield": [
        {
            "advisory": "django-markupfield before 1.3.2 uses the default docutils RESTRUCTUREDTEXT_FILTER_SETTINGS settings, which allows remote attackers to include and read arbitrary files via unspecified vectors.",
            "cve": "CVE-2015-0846",
            "id": "pyup.io-25773",
            "specs": [
                "<1.3.2"
            ],
            "v": "<1.3.2"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25774",
            "specs": [
                "<1.3.3"
            ],
            "v": "<1.3.3"
        }
    ],
    "django-material": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25775",
            "specs": [
                "<0.9.0"
            ],
            "v": "<0.9.0"
        }
    ],
    "django-material-orange": [
        {
            "advisory": "django-material-orange before 0.9.0 has a XSS vulnerability in input fields.",
            "cve": null,
            "id": "pyup.io-32207",
            "specs": [
                "<0.9.0"
            ],
            "v": "<0.9.0"
        }
    ],
    "django-material-saldoo": [
        {
            "advisory": "django-material-saldoo before 0.9.0 has a XSS vulnerability in input fields.",
            "cve": null,
            "id": "pyup.io-32243",
            "specs": [
                "<0.9.0"
            ],
            "v": "<0.9.0"
        }
    ],
    "django-ninecms": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25776",
            "specs": [
                "<0.4.5b"
            ],
            "v": "<0.4.5b"
        }
    ],
    "django-piston": [
        {
            "advisory": "emitters.py in Django Piston before 0.2.3 and 0.2.x before 0.2.2.1 does not properly deserialize YAML data, which allows remote attackers to execute arbitrary Python code via vectors related to the yaml.load method.",
            "cve": "CVE-2011-4103",
            "id": "pyup.io-25777",
            "specs": [
                "<0.2.3"
            ],
            "v": "<0.2.3"
        }
    ],
    "django-pluggable-filebrowser": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25778",
            "specs": [
                "<3.4.2"
            ],
            "v": "<3.4.2"
        }
    ],
    "django-python3-ldap": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25779",
            "specs": [
                "<0.9.5"
            ],
            "v": "<0.9.5"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25780",
            "specs": [
                "<0.9.8"
            ],
            "v": "<0.9.8"
        }
    ],
    "django-rated": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25781",
            "specs": [
                "<1.1.2"
            ],
            "v": "<1.1.2"
        }
    ],
    "django-relatives": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25782",
            "specs": [
                "<0.3.0"
            ],
            "v": "<0.3.0"
        }
    ],
    "django-revproxy": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25783",
            "specs": [
                "<0.9.6"
            ],
            "v": "<0.9.6"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25784",
            "specs": [
                "<0.9.7"
            ],
            "v": "<0.9.7"
        }
    ],
    "django-safedelete": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25785",
            "specs": [
                "<0.3.3"
            ],
            "v": "<0.3.3"
        }
    ],
    "django-secure-auth": [
        {
            "advisory": "django-secure-auth 1.1 includes undisclosed security fixes.",
            "cve": null,
            "id": "pyup.io-34185",
            "specs": [
                "<1.1"
            ],
            "v": "<1.1"
        }
    ],
    "django-select2": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25786",
            "specs": [
                "<5.7.0"
            ],
            "v": "<5.7.0"
        }
    ],
    "django-select2-py3": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25787",
            "specs": [
                "<5.7.0"
            ],
            "v": "<5.7.0"
        }
    ],
    "django-selectable": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25788",
            "specs": [
                "<0.5.2"
            ],
            "v": "<0.5.2"
        }
    ],
    "django-session-security": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25789",
            "specs": [
                "<2.4.0"
            ],
            "v": "<2.4.0"
        }
    ],
    "django-smart-selects": [
        {
            "advisory": "django-smart-selects before 1.5.0 allowed anybody to list arbitrary objects by tweaking URL parameters. 1.5.0 adds checks to the views to ensure that queries return an HTTP 403 (Permission denied) for models that do not have smart_selects fields defined.",
            "cve": null,
            "id": "pyup.io-34234",
            "specs": [
                "<1.5.1"
            ],
            "v": "<1.5.1"
        }
    ],
    "django-social-auth": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25790",
            "specs": [
                "<0.7.2"
            ],
            "v": "<0.7.2"
        }
    ],
    "django-social-auth3": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25791",
            "specs": [
                "<0.7.2"
            ],
            "v": "<0.7.2"
        }
    ],
    "django-sql-explorer": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25792",
            "specs": [
                "<0.4"
            ],
            "v": "<0.4"
        },
        {
            "advisory": "django-sql-explorer before 1.1.0 isn't escaping values from the database correctly, making it open for potential XSS-attacks.",
            "cve": null,
            "id": "pyup.io-33293",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "django-sticky-uploads": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25793",
            "specs": [
                "<0.2.0"
            ],
            "v": "<0.2.0"
        }
    ],
    "django-tastypie": [
        {
            "advisory": "The from_yaml method in serializers.py in Django Tastypie before 0.9.10 does not properly deserialize YAML data, which allows remote attackers to execute arbitrary Python code via vectors related to the yaml.load method.",
            "cve": "CVE-2011-4104",
            "id": "pyup.io-25794",
            "specs": [
                "<0.9.10"
            ],
            "v": "<0.9.10"
        }
    ],
    "django-tethys-compute": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25795",
            "specs": [
                "<0.95.3"
            ],
            "v": "<0.95.3"
        }
    ],
    "django-uni-form": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25796",
            "specs": [
                "<0.9.0"
            ],
            "v": "<0.9.0"
        }
    ],
    "django-watchman": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25797",
            "specs": [
                "<0.10.0"
            ],
            "v": "<0.10.0"
        }
    ],
    "djangocms-highlightjs": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25798",
            "specs": [
                "<0.3.1"
            ],
            "v": "<0.3.1"
        }
    ],
    "djangorestframework": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25799",
            "specs": [
                "<2.2.1"
            ],
            "v": "<2.2.1"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25800",
            "specs": [
                "<2.3.12"
            ],
            "v": "<2.3.12"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25801",
            "specs": [
                "<2.3.14"
            ],
            "v": "<2.3.14"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25802",
            "specs": [
                "<2.4.4"
            ],
            "v": "<2.4.4"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25803",
            "specs": [
                "<2.4.5"
            ],
            "v": "<2.4.5"
        },
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25804",
            "specs": [
                "<3.1.1"
            ],
            "v": "<3.1.1"
        }
    ],
    "docker-registry": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25805",
            "specs": [
                "<0.8.1"
            ],
            "v": "<0.8.1"
        }
    ],
    "docker-registry-core": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25806",
            "specs": [
                "<0.8.1"
            ],
            "v": "<0.8.1"
        }
    ],
    "dpaste": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25807",
            "specs": [
                "<2.8"
            ],
            "v": "<2.8"
        }
    ],
    "dulwich": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25808",
            "specs": [
                "<0.9.920150320"
            ],
            "v": "<0.9.920150320"
        }
    ],
    "easy-install": [
        {
            "advisory": "easy_install in setuptools before 0.7 uses HTTP to retrieve packages from the PyPI repository, and does not perform integrity checks on package contents, which allows man-in-the-middle attackers to execute arbitrary code via a crafted response to the default use of the product.",
            "cve": null,
            "id": "pyup.io-33124",
            "specs": [
                "<0.7"
            ],
            "v": "<0.7"
        },
        {
            "advisory": "easy_install in setuptools before 0.7 uses HTTP to retrieve packages from the PyPI repository, and does not perform integrity checks on package contents, which allows man-in-the-middle attackers to execute arbitrary code via a crafted response to the default use of the product.",
            "cve": "CVE-2013-1633",
            "id": "pyup.io-25809",
            "specs": [
                "<0.7"
            ],
            "v": "<0.7"
        }
    ],
    "edrnsite.policy": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25810",
            "specs": [
                "<1.0.5"
            ],
            "v": "<1.0.5"
        }
    ],
    "err": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25811",
            "specs": [
                "<1.3.0"
            ],
            "v": "<1.3.0"
        }
    ],
    "errbot": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25812",
            "specs": [
                "<1.3.0"
            ],
            "v": "<1.3.0"
        }
    ],
    "euphorie": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25813",
            "specs": [
                "<6.1"
            ],
            "v": "<6.1"
        }
    ],
    "featureserver": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25814",
            "specs": [
                "<1.06"
            ],
            "v": "<1.06"
        }
    ],
    "feedparser": [
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in feedparser.py in Universal Feed Parser (aka feedparser or python-feedparser) before 5.0 allows remote attackers to inject arbitrary web script or HTML via vectors involving nested CDATA stanzas.",
            "cve": "CVE-2009-5065",
            "id": "pyup.io-25815",
            "specs": [
                "<5.0"
            ],
            "v": "<5.0"
        },
        {
            "advisory": "feedparser.py in Universal Feed Parser (aka feedparser or python-feedparser) before 5.0.1 allows remote attackers to cause a denial of service (application crash) via a malformed DOCTYPE declaration.",
            "cve": "CVE-2011-1156",
            "id": "pyup.io-33125",
            "specs": [
                "<5.0.1"
            ],
            "v": "<5.0.1"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in feedparser.py in Universal Feed Parser (aka feedparser or python-feedparser) 5.x before 5.0.1 allows remote attackers to inject arbitrary web script or HTML via an unexpected URI scheme, as demonstrated by a javascript: URI.",
            "cve": "CVE-2011-1158",
            "id": "pyup.io-33127",
            "specs": [
                "<5.0.1"
            ],
            "v": "<5.0.1"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in feedparser.py in Universal Feed Parser (aka feedparser or python-feedparser) 5.x before 5.0.1 allows remote attackers to inject arbitrary web script or HTML via malformed XML comments.",
            "cve": "CVE-2011-1157",
            "id": "pyup.io-33126",
            "specs": [
                "<5.0.1"
            ],
            "v": "<5.0.1"
        },
        {
            "advisory": "Universal Feed Parser (aka feedparser or python-feedparser) before 5.1.2 allows remote attackers to cause a denial of service (memory consumption) via a crafted XML ENTITY declaration in a non-ASCII encoded document.",
            "cve": "CVE-2012-2921",
            "id": "pyup.io-25819",
            "specs": [
                "<5.1.2"
            ],
            "v": "<5.1.2"
        }
    ],
    "flask": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25820",
            "specs": [
                "<0.6.1"
            ],
            "v": "<0.6.1"
        }
    ],
    "flask-admin": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25821",
            "specs": [
                "<1.3.0"
            ],
            "v": "<1.3.0"
        }
    ],
    "flask-async": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25822",
            "specs": [
                "<0.6.1"
            ],
            "v": "<0.6.1"
        }
    ],
    "flask-images": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25823",
            "specs": [
                "<1.1.3"
            ],
            "v": "<1.1.3"
        }
    ],
    "flask-micropub": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25824",
            "specs": [
                "<0.2.2"
            ],
            "v": "<0.2.2"
        }
    ],
    "flask-oauthlib": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25825",
            "specs": [
                "<0.9.1"
            ],
            "v": "<0.9.1"
        }
    ],
    "flask-oidc": [
        {
            "advisory": "flask-oidc version 0.1.2 and earlier is vulnerable to an open redirect",
            "cve": "CVE-2016-1000001",
            "id": "pyup.io-25826",
            "specs": [
                "<0.1.2"
            ],
            "v": "<0.1.2"
        }
    ],
    "flask-security-fork": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25827",
            "specs": [
                "<1.8.1"
            ],
            "v": "<1.8.1"
        }
    ],
    "foolscap": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25828",
            "specs": [
                "<0.7.0"
            ],
            "v": "<0.7.0"
        }
    ],
    "formbar": [
        {
            "advisory": "",
            "cve": null,
            "id": "pyup.io-25829",
            "specs": [
                "<0.9"
            ],
            "v": "<0.9"
        }
    ],
    "formencode": [
        {
            "advisory": "schema.py in FormEncode for Python (python-formencode) 1.0 does not apply the chained_validators feature, which allows attackers to bypass intended access restrictions via unknown vectors.",
            "cve": "CVE-2008-6547",
            "id": "pyup.io-25830",
            "specs": [
                "<1.0"
            ],
            "v": "<1.0"
        }
    ],
    "ftw.dashboard.dragndrop": [
        {
            "advisory": "ftw.dashboard.dragndrop 1.5.1 includes several undisclosed security fixes.",
            "cve": null,
            "id": "pyup.io-25831",
            "specs": [
                "<1.5.1"
            ],
            "v": "<1.5.1"
        }
    ],
    "ftw.dashboard.portlets.postit": [
        {
            "advisory": "ftw.dashboard.portlets.postit 1.3.4 fixes a security error, it was possible to add postit comment on a foreign dashboard if the userid an portlet id was known.",
            "cve": null,
            "id": "pyup.io-25832",
            "specs": [
                "<1.3.4"
            ],
            "v": "<1.3.4"
        }
    ],
    "ftw.mail": [
        {
            "advisory": "ftw.mail 2.2.3 makes mail view XSS-save using the safe-html transform for the mail-body display.",
            "cve": null,
            "id": "pyup.io-25833",
            "specs": [
                "<2.2.3"
            ],
            "v": "<2.2.3"
        }
    ],
    "ftw.meeting": [
        {
            "advisory": "ftw.meeting before 1.4.1 isn't using safe-html-transform for textfields.",
            "cve": null,
            "id": "pyup.io-25834",
            "specs": [
                "<1.4.1"
            ],
            "v": "<1.4.1"
        }
    ],
    "ftw.permissionmanager": [
        {
            "advisory": "ftw.permissionmanager before 2.2.2 allowed users with view permission to access the advanced security features. Since it's possible to search for all users, which exposes all usernames and email addresses to anyone with view permission.",
            "cve": null,
            "id": "pyup.io-25835",
            "specs": [
                "<2.2.2"
            ],
            "v": "<2.2.2"
        }
    ],
    "gandi.cli": [
        {
            "advisory": "gandi.cli 0.10 includes two security related fixes: \r\n\r\n- validate server certificate using request as\r\n  xmlrpc transport.\r\n- Security: restrict configuration file rights to owner only.",
            "cve": null,
            "id": "pyup.io-25836",
            "specs": [
                "<0.10"
            ],
            "v": "<0.10"
        }
    ],
    "gevent": [
        {
            "advisory": "gevent 1.2a1 includes a security related fix. Errors logged by :class:`~gevent.pywsgi.WSGIHandler` no longer print the entire WSGI environment by default. This avoids  possible information disclosure vulnerabilities. Applications can also opt-in to a higher security level for the WSGI environment if they  choose and their frameworks support it. Originally reported  in :pr:`779` by sean-peters-au and changed in :pr:`781`.",
            "cve": null,
            "id": "pyup.io-25837",
            "specs": [
                "<1.2a1"
            ],
            "v": "<1.2a1"
        }
    ],
    "geventhttpclient": [
        {
            "advisory": "geventhttpclient 1.2.0 includes an undisclosed security fix related to SSL support.",
            "cve": null,
            "id": "pyup.io-25838",
            "specs": [
                "<1.2.0"
            ],
            "v": "<1.2.0"
        }
    ],
    "gns3-gui": [
        {
            "advisory": "gns3-gui 1.5.1 fixes a security related bug to prevent client to send empty hostname.",
            "cve": null,
            "id": "pyup.io-25839",
            "specs": [
                "<1.5.1"
            ],
            "v": "<1.5.1"
        }
    ],
    "google-appengine": [
        {
            "advisory": "The sandbox environment in the Google App Engine Python SDK before 1.5.4 does not properly prevent os.popen calls, which allows local users to bypass intended access restrictions and execute arbitrary commands via a dev_appserver.RestrictedPathFunction._original_os reference within the code parameter to _ah/admin/interactive/execute, a different vulnerability than CVE-2011-1364.",
            "cve": "CVE-2011-4212",
            "id": "pyup.io-33130",
            "specs": [
                "<1.5.4"
            ],
            "v": "<1.5.4"
        },
        {
            "advisory": "The FakeFile implementation in the sandbox environment in the Google App Engine Python SDK before 1.5.4 does not properly control the opening of files, which allows local users to bypass intended access restrictions and create arbitrary files via ALLOWED_MODES and ALLOWED_DIRS changes within the code parameter to _ah/admin/interactive/execute, a different vulnerability than CVE-2011-1364.",
            "cve": "CVE-2011-4211",
            "id": "pyup.io-33129",
            "specs": [
                "<1.5.4"
            ],
            "v": "<1.5.4"
        },
        {
            "advisory": "Cross-site request forgery (CSRF) vulnerability in _ah/admin/interactive/execute (aka the Interactive Console) in the SDK Console (aka Admin Console) in the Google App Engine Python SDK before 1.5.4 allows remote attackers to hijack the authentication of administrators for requests that execute arbitrary Python code via the code parameter.",
            "cve": "CVE-2011-1364",
            "id": "pyup.io-33128",
            "specs": [
                "<1.5.4"
            ],
            "v": "<1.5.4"
        },
        {
            "advisory": "The sandbox environment in the Google App Engine Python SDK before 1.5.4 does not properly prevent use of the os module, which allows local users to bypass intended access restrictions and execute arbitrary commands via a file_blob_storage.os reference within the code parameter to _ah/admin/interactive/execute, a different vulnerability than CVE-2011-1364.",
            "cve": "CVE-2011-4213",
            "id": "pyup.io-33131",
            "specs": [
                "<1.5.4"
            ],
            "v": "<1.5.4"
        }
    ],
    "holocron": [
        {
            "advisory": "holocron 0.2.0 fixed a security issue when content author may steal private data through content's meta header.",
            "cve": null,
            "id": "pyup.io-25844",
            "specs": [
                "<0.2.0"
            ],
            "v": "<0.2.0"
        }
    ],
    "homeassistant": [
        {
            "advisory": "homeassistant before 0.37 uses a weak random number generator to create access tokens for camera feeds which could be brute force attacked in 2.5 weeks",
            "cve": null,
            "id": "pyup.io-34222",
            "specs": [
                "<0.37"
            ],
            "v": "<0.37"
        }
    ],
    "html5": [
        {
            "advisory": "html5 before 0.99999999 is vulnerable to a XSS attack. Upgrading avoids the XSS bug potentially caused by serializer allowing attribute values to be escaped out of in old browser versions, changing the quote_attr_values option on serializer to take one of three values, \"always\" (the old True value), \"legacy\" (the new option,  and the new default), and \"spec\" (the old False value, and the old default).",
            "cve": null,
            "id": "pyup.io-25845",
            "specs": [
                "<0.99999999"
            ],
            "v": "<0.99999999"
        }
    ],
    "html5lib": [
        {
            "advisory": "html5lib before 0.99999999 is vulnerable to a XSS attack. Upgrading avoids the XSS bug potentially caused by serializer allowing attribute values to be escaped out of in old browser versions, changing the quote_attr_values option on serializer to take one of three values, \"always\" (the old True value), \"legacy\" (the new option,  and the new default), and \"spec\" (the old False value, and the old default).",
            "cve": null,
            "id": "pyup.io-25846",
            "specs": [
                "<0.99999999"
            ],
            "v": "<0.99999999"
        }
    ],
    "httpauth": [
        {
            "advisory": "httpauth 0.2 fixes a security issue: Invalid username + empty password were being accepted.",
            "cve": null,
            "id": "pyup.io-25847",
            "specs": [
                "<0.2"
            ],
            "v": "<0.2"
        }
    ],
    "httplib2": [
        {
            "advisory": "httplib2 before and including 0.9.2 on \"SSL certificate hostname mismatch\" it is checked only once: https://github.com/httplib2/httplib2/issues/5",
            "cve": null,
            "id": "pyup.io-25848",
            "specs": [
                "<=0.9.2"
            ],
            "v": "<=0.9.2"
        }
    ],
    "httpsig": [
        {
            "advisory": "httpsig 1.0.0 removed suport for reading keyfiles from disk as this is a huge security hole if this is used in a server framework like drf-httpsig.",
            "cve": null,
            "id": "pyup.io-25849",
            "specs": [
                "<1.0.0"
            ],
            "v": "<1.0.0"
        }
    ],
    "httpsig-cffi": [
        {
            "advisory": "httpsig-cffi 1.0.0 removed suport for reading keyfiles from disk as this is a huge security hole if this is used in a server framework like drf-httpsig.",
            "cve": null,
            "id": "pyup.io-25850",
            "specs": [
                "<1.0.0"
            ],
            "v": "<1.0.0"
        }
    ],
    "humblesetuptools": [
        {
            "advisory": "humblesetuptools 0.9.5 fixes a security vulnerability in SSL certificate validation.",
            "cve": null,
            "id": "pyup.io-25851",
            "specs": [
                "<0.9.5"
            ],
            "v": "<0.9.5"
        },
        {
            "advisory": "humblesetuptools 1.3 adresses a security vulnerability in SSL match_hostname check as reported in  Python #17997.",
            "cve": null,
            "id": "pyup.io-25852",
            "specs": [
                "<1.3"
            ],
            "v": "<1.3"
        }
    ],
    "insecure-package": [
        {
            "advisory": "This is an insecure package with lots of exploitable security vulnerabilities.",
            "cve": null,
            "id": "pyup.io-25853",
            "specs": [
                "<0.2.0"
            ],
            "v": "<0.2.0"
        }
    ],
    "invenio": [
        {
            "advisory": "invenio 1.0.2 includes fixes for several undisclosed XSS vulnerabilities.",
            "cve": null,
            "id": "pyup.io-25854",
            "specs": [
                "<1.0.2"
            ],
            "v": "<1.0.2"
        },
        {
            "advisory": "invenio 1.1.2 fixes a undisclosed XSS vulnerability.",
            "cve": null,
            "id": "pyup.io-25855",
            "specs": [
                "<1.1.2"
            ],
            "v": "<1.1.2"
        }
    ],
    "invenio-search": [
        {
            "advisory": "invenio-search 0.1.3 fixes a potential XSS issues by changing search flash messages template so that they are not displayed as safe HTML by default.",
            "cve": null,
            "id": "pyup.io-25856",
            "specs": [
                "<0.1.3"
            ],
            "v": "<0.1.3"
        }
    ],
    "ipython": [
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in the file browser in notebook/notebookapp.py in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to inject arbitrary web script or HTML via a folder name.  NOTE: this was originally reported as a cross-site request forgery (CSRF) vulnerability, but this may be inaccurate.",
            "cve": "CVE-2015-6938",
            "id": "pyup.io-33132",
            "specs": [
                "<3.2.2"
            ],
            "v": "<3.2.2"
        },
        {
            "advisory": "The editor in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to execute arbitrary JavaScript code via a crafted file, which triggers a redirect to files/, related to MIME types.",
            "cve": "CVE-2015-7337",
            "id": "pyup.io-33133",
            "specs": [
                "<3.2.2"
            ],
            "v": "<3.2.2"
        }
    ],
    "irc3": [
        {
            "advisory": "irc3 before 0.4.4 is vulnerable to several undisclosed security issues.",
            "cve": null,
            "id": "pyup.io-25859",
            "specs": [
                "<0.4.4"
            ],
            "v": "<0.4.4"
        }
    ],
    "ironic-discoverd": [
        {
            "advisory": "OpenStack Ironic Inspector (aka ironic-inspector or ironic-discoverd), when debug mode is enabled, might allow remote attackers to access the Flask console and execute arbitrary Python code by triggering an error.",
            "cve": "CVE-2015-5306",
            "id": "pyup.io-25860",
            "specs": [
                "<2.3.0"
            ],
            "v": "<2.3.0"
        }
    ],
    "ironic-inspector": [
        {
            "advisory": "OpenStack Ironic Inspector (aka ironic-inspector or ironic-discoverd), when debug mode is enabled, might allow remote attackers to access the Flask console and execute arbitrary Python code by triggering an error.",
            "cve": "CVE-2015-5306",
            "id": "pyup.io-25861",
            "specs": [
                "<2.3.0"
            ],
            "v": "<2.3.0"
        }
    ],
    "isso": [
        {
            "advisory": "isso 0.6 fixes a cross-site request forgery vulnerability for comment creation, voting, editing and deletion.",
            "cve": null,
            "id": "pyup.io-25862",
            "specs": [
                "<0.6"
            ],
            "v": "<0.6"
        }
    ],
    "jinja": [
        {
            "advisory": "jinja 2.7.2 fixes a security issue: Changed the default folder for the filesystem cache to be user specific and read and write protected on UNIX systems.  See http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=734747 for more information.",
            "cve": null,
            "id": "pyup.io-25863",
            "specs": [
                "<2.7.2"
            ],
            "v": "<2.7.2"
        },
        {
            "advisory": "jinja 2.7.3 fixes a security issue: Corrected the security fix for the cache folder.",
            "cve": null,
            "id": "pyup.io-25864",
            "specs": [
                "<2.7.3"
            ],
            "v": "<2.7.3"
        }
    ],
    "jinja2": [
        {
            "advisory": "jinja2 2.7.2 fixes a security issue: Changed the default folder for the filesystem cache to be user specific and read and write protected on UNIX systems.  See http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=734747 for more information.",
            "cve": null,
            "id": "pyup.io-25865",
            "specs": [
                "<2.7.2"
            ],
            "v": "<2.7.2"
        },
        {
            "advisory": "jinja2 2.7.3 fixes a security issue: Corrected the security fix for the cache folder.",
            "cve": null,
            "id": "pyup.io-25866",
            "specs": [
                "<2.7.3"
            ],
            "v": "<2.7.3"
        }
    ],
    "jose": [
        {
            "advisory": "jose 0.3.0 fixed critical JWT vulnerability.",
            "cve": null,
            "id": "pyup.io-25867",
            "specs": [
                "<0.3.0"
            ],
            "v": "<0.3.0"
        }
    ],
    "jsonrpc-pyclient": [
        {
            "advisory": "jsonrpc-pyclient 0.7.0 fixes security issues in unixdomainsocket connectors.",
            "cve": null,
            "id": "pyup.io-25869",
            "specs": [
                "<0.7.0"
            ],
            "v": "<0.7.0"
        }
    ],
    "keyring": [
        {
            "advisory": "Python Keyring 0.9.1 does not securely initialize the cipher when encrypting passwords for CryptedFileKeyring files, which makes it easier for local users to obtain passwords via a brute-force attack.",
            "cve": "CVE-2012-4571",
            "id": "pyup.io-25870",
            "specs": [
                "<0.9.1"
            ],
            "v": "<0.9.1"
        }
    ],
    "keystonemiddleware": [
        {
            "advisory": "The identity service in OpenStack Identity (Keystone) before 2015.1.3 (Kilo) and 8.0.x before 8.0.2 (Liberty) and keystonemiddleware (formerly python-keystoneclient) before 1.5.4 (Kilo) and Liberty before 2.3.3 does not properly invalidate authorization tokens when using the PKI or PKIZ token providers, which allows remote authenticated users to bypass intended access restrictions and gain access to cloud resources by manipulating byte fields within a revoked token.",
            "cve": "CVE-2015-7546",
            "id": "pyup.io-25871",
            "specs": [
                "<1.5.4",
                ">=2.0,<2.3.3"
            ],
            "v": "<1.5.4,>=2.0,<2.3.3"
        },
        {
            "advisory": "The s3_token middleware in OpenStack keystonemiddleware before 1.6.0 and python-keystoneclient before 1.4.0 disables certification verification when the \"insecure\" option is set in a paste configuration (paste.ini) file regardless of the value, which allows remote attackers to conduct man-in-the-middle attacks via a crafted certificate, a different vulnerability than CVE-2014-7144.",
            "cve": "CVE-2015-1852",
            "id": "pyup.io-25872",
            "specs": [
                "<1.6.0"
            ],
            "v": "<1.6.0"
        }
    ],
    "kinto": [
        {
            "advisory": "kinto 5.1.0 replaced insecure use of ``random.random()`` and ``random.choice(...)`` with more secure ``random.SystemRandom().random()`` and ``random.SystemRandom().choice(...)``.",
            "cve": null,
            "id": "pyup.io-25873",
            "specs": [
                "<5.1.0"
            ],
            "v": "<5.1.0"
        }
    ],
    "lambdajson": [
        {
            "advisory": "lambdajson 0.1.5 includes a security fix. Using ast.literal_eval as eval.",
            "cve": null,
            "id": "pyup.io-25874",
            "specs": [
                "<0.1.5"
            ],
            "v": "<0.1.5"
        }
    ],
    "ldap3": [
        {
            "advisory": "ldap3 before 0.9.5.4 has several security issues in lazy connections.",
            "cve": null,
            "id": "pyup.io-25875",
            "specs": [
                "<0.9.5.4"
            ],
            "v": "<0.9.5.4"
        },
        {
            "changelog": "\n- 2.1.1 2016.11.18\n    - Mock strategy uses case insensitive matching when appropriate\n    - fixed error when adding a virtual attribute in the abstract Entry object\n    - fixed error messages in Entry moving and renaming\n    - Reverted default connection strategy to SYNC (thanks Mauro)\n    - Fixed tutorials (thanks Mauro)\n    - Fixed checking of schema in ObjectDef (thanks Pierre)\n    - Fixed checking of stdin in config (thanks Oleg)\n    - fixed commit of entry with async strategies\n    - fixed reading of entries in async strategies\n    - added cipher argument to Tls (thanks Nicolas)\n    - fixed bug when using the abstraction layer with lazy connections\n    - fixed case matching while adding new entry in Writer cursor (thanks t0neg)\n    - disabled auto_escape for byte values\n    - fixed auto_escape for python 2\n\n- 2.1.0 2016.11.03\n    - changed default Connection strategy from SYNC to RESTARTABLE\n    - enable automatic escaping of assertion values\n    - fixed decoding error with check_name=False\n    - added auto_escape parameter in connection, for trying automatic filter and attribute values escape\n    - fixed checking of schema in MockBase\n    - SASLBindInProgress doesn't raise an exception anymore with raise_exceptions=True\n    - standard formatters are applied in mocking strategies when serching for exact match\n\n- 2.0.9 2016.10.28\n    - removed sanitization of DN in bind operation because some servers accept non standard DN for Simple Bind\n\n- 2.0.8 2016.10.28\n    - included referral caching (thanks TWAC)\n\n- 2.0.7 2016.10.27\n    - FIRST RELEASE OF LDAP3 V2\n    - changed signature of ldap3.abstract.Reader object\n    - removed search_size_limit(), search_time_limit() and search_types_only in the Reader cursor\n    - fixed SASL in progress error (thanks Styleex)\n    - fixed ALL_ATTRIBUTES in MOCK_SYNC strategy (thanks Belgarion)\n    - ncorrect attribute type error message now includes the name of the attribute (Thanks Andrej)\n    - relaxed dn checking for Active Directory UserPrincipalName\n    - relaxed dn checking for Active Directory SamAccountName\n    - added checking of attribute name in add, compare and search operations\n    - added checking of class name in add operation\n    - renamed exception LDAPTypeError to LDAPAttributeError\n    - in sync strategies LDAP operations populate the last_error attribute of the connection in case of not RESULT_SUCCESS\n    - connection.return_empty_attributes defaults to True\n    - escaped filter by default\n    - fixed escaping of filter\n    - add move and rename to abstraction layer entry\n    - ldap3 namespace decluttered\n    - RESULT_CODES moved to ldap3.core.results\n    - compatability constants removed\n    - exceptions removed from ldap3 namespace, defined in ldap3.core.exceptions only\n    - ADDRESS_INFO_REFRESH_TIME is now configurable via set_config_parameter\n    - Operational attribute prefix set to 'OA_'\n    - Allows cert and key file in the same file (thanks Jan-Philip)\n    - Removed logging info when logging is disabled (thanks Dan)\n    - Updated copyright notice\n    - Refactored abstraction layer with full support for CRUD (Create, Read, Update, Delete) abstract operations\n    - Added WritableEntry and WritableAttribute to abstraction layer\n    - Added standard validators for attribute types and syntaxes defined in the standard LDAP schema\n    - Added custom validators for attribute values\n    - Added update capability to abstraction layer\n    - Fixed typo in docs (thanks Gerardwx)\n    - Fixed Object and Attribute representation in schema (superior class not shown)\n    - ObjectDef automatically populates attributes from schema, following object_class hierarchy\n    - Added attributes parameter to search* methods of Cursor, so that only needed attributes are read even if attr_defs defines more\n    - Fixed connect_timeout not honored while wrapping socket in tls (thanks Kyle)\n    - Added 'set' to SEQUENCE_TYPES (thanks Christian)\n    - Entries returned by search are now writable via the abstraction layer\n    - LDAPReaderError exception renamed to LDAPCursorError\n    - auto_range parameter in Connection defaults to True (thanks Ashley)\n    - get_info defaults to SCHEMA while defining Server object\n    - Included ordereddict 1.1 ( Copyright (c) 2009 Raymond Hettinger) in ldap3.utils.ordDict for backporting OrderedDict in Python 2.6\n    - Added config parameter RESET_AVAILABILITY_TIMEOUT to reinsert invalid address in candidate_addresses while checking connection, defaults to 5 seconds\n    - Fixed inability to connect to a server if the connection starts when the server is unavailable and then it becomes available again\n    - All DNs are sanitized if connection.check_names is True\n    - LDAPControlsError exception renamed to LDAPControlError\n    - LDAPChangesError exception renamed to LDAPChangeError\n    - The following older constants in ldap3 have been removed, please use the suggested ones:\n    - AUTH_ANONYMOUS = ANONYMOUS\n    - AUTH_SIMPLE = SIMPLE\n    - AUTH_SASL = SASL\n    - SEARCH_SCOPE_BASE_OBJECT = BASE\n    - SEARCH_SCOPE_SINGLE_LEVEL = LEVEL\n    - SEARCH_SCOPE_WHOLE_SUBTREE = SUBTREE\n    - SEARCH_NEVER_DEREFERENCE_ALIASES = DEREF_NEVER\n    - SEARCH_DEREFERENCE_IN_SEARCHING = DEREF_SEARCH\n    - SEARCH_DEREFERENCE_FINDING_BASE_OBJECT = DEREF_BASE\n    - SEARCH_DEREFERENCE_ALWAYS = DEREF_ALWAYS\n    - STRATEGY_SYNC = SYNC\n    - STRATEGY_ASYNC_THREADED = ASYNC\n    - STRATEGY_LDIF_PRODUCER = LDIF\n    - STRATEGY_SYNC_RESTARTABLE = RESTARTABLE\n    - STRATEGY_REUSABLE_THREADED = REUSABLE\n    - STRATEGY_MOCK_SYNC = MOCK_SYNC\n    - STRATEGY_MOCK_ASYNC = MOCK_SYNC\n    - POOLING_STRATEGY_FIRST = FIRST\n    - POOLING_STRATEGY_ROUND_ROBIN = ROUND_ROBIN\n    - POOLING_STRATEGY_RANDOM = RANDOM\n    - GET_NO_INFO = NONE\n    - GET_DSA_INFO = DSA\n    - GET_SCHEMA_INFO = SCHEMA\n    - GET_ALL_INFO = ALL\n\n- 1.4.0 2016.07.18\n    - Multiple Mock strategies now share entries when using the same Server object\n    - Added AsyncStreamStrategy\n    - Added Connection.extend.standard.persistent_search() (Thanks martinrm77)\n    - Added escaping of character > 0x7F in filter validation (thanks cfelder)\n    - Added better descriptions of Exception in abstraction layer (thanks cfelder)\n    - Added queue in Persistent Search\n    - Added callback in Persistent Search\n    - MockStrategy now honors raise_exception parameter (thanks Simon)\n\n- 1.3.3 2016.07.03\n    - Change paameter name from 'check' to 'fix' in connection.extend.novell.add_members_to_groups() and connection.extend.novell.remove_members_from_groups\n    - Added connection.extend.novell.check_groups_memberships() that check if members are in groups and fixes the user-group relation if incorrect\n    - Updated docs link to ldap3.readthedocs.io\n    - Fixed error in utils.conv.check_escape (thanks Anjuta)\n    - Fixed typo in server.py when IP_V4_PREFERRED is used (thanks eva8668)\n    - Host name certificate matching exception and logging is much more informative (thanks eddie-dunn)\n    - Fixed typo in docs for use_ssl (thanks Brooks Kindle)\n    - Tested against Python 2.6., Python 2.7.12, Python 3.5.2 and PyPy 5.3.1\n\n- 1.3.2 2016.07.01\n    - unreleased on pypi\n\n- 1.3.1 2016.05.11\n    - Added support for mocking the ldap3 library\n    - Added support for MockSync strategy (thanks Roxana)\n    - Added checked_attributes=True parameter to connection.response_to_json()\n    - Added checked_attributes=True parameter to entry.entry_to_json()\n    - MockSyncBase strategy supports bind(), unbind(), delete(), compare(), modify(), modify_dn(), abandon(), add()\n    - MockSyncBase strategy accepts directory entries in json file\n    - Fixed schema representation (thanks Conrado)\n    - Allow connection.abandon(0), useful to \"ping\" the server\n    - Added connection.abandon() test suite\n    - Reusable strategy checks bind credential at bind() time, only on one worker connection\n    - Reusable strategy ignores abandon() operation because of multiple connection workers\n    - Reusable strategy honours return_empty_attributes connection parameter\n    - Added lazy information to connection representation\n    - Added support for hash (LM:NTLM) Windows NTLM authentication (thanks Dirk)\n    - Fixed representation of empty attributes in connection.entries\n    - Comparison of entry attributes value is easier\n    - Added new extended operation connection.extend.novell.start_transaction()\n    - Added new extended operation connection.extend.novell.end_transaction()\n    - Added new extended operation connection.extend.novell.add_members_to_groups(members, groups, check, transaction)\n    - Added new extended operation connection.extend.novell.remove_members_from_groups(members, groups, check, transaction)\n    - Added new exception LDAPTransactionError\n    - Added logic to handle Novell Transaction Error Unsolicited Notice\n    - Ignore cheching of ssl context when cadata, cafile and capath are not provided (thanks DelboyJan)\n\n\n- 1.2.2 2016.03.23\n    - repr encoding set to 'ascii' when sys.stdout.encoding is None (thanks Jeff)\n\n- 1.2.1 2016.03.19\n    - try to use the requested ssl protocol in SSLContext for Python>=3.4 (thanks Patrick)\n    - added return_empty_attributes to Connection object to return an empty list when the attribute requested is missing in the retrieved object\n\n- 1.1.2 2016.03.10\n    - Added rebind() method to Connection object to rebind with a different user (thanks Lorenzo)\n    - Added Tests for rebind operation\n    - Start_tls honored in referrals\n    - Default ldaps port honored in referrals\n    - Additional connection parameters honored in referrals and in the restartable strategy\n    - Server connection timeout is honored while connecting, connection receive timeout while receiving\n    - Extended operations followed on referrals (thanks Pavel)\n    - Added receive_timeout parameter in Connection object to set socket in non-blocking mode with a specified timeout (thanks Antho)\n    - Fixed abstract entry __getattr__() throwing KeyError instead of AttributeError (thanks Kilroy)\n    - Fixed start_tls() Reusable strategy\n\n* 1.0.4 2016.01.25\n    - Controls can be added to extended operation in the extend package (thanks Hinel)\n\n* 1.0.3 2015.12.1\n    - Fixed set_config_parameter (thanks Sigmunau)\n    - Disabled unauthenticated authentication, see RFC 4513 section 5.1.2 (thanks Petros)\n    - Fixed falsey value in abstract Entry object __contains__() (thanks Vampouille)\n\n* 1.0.2 2015.12.07\n    - Allowed_referral_hosts in Server objects defaults to [('*', True)] to accept any referral server with authentication\n    - Referral uri is now properly percent-undecoded (thanks TWAC)\n    - Referral Server object now use the same configuration of the original Server object\n    - Fixed __contains__() in Entry object (thanks Vampouille)\n\n* 1.0.1 2015.12.06\n    - Removed the compat package\n    - Refactored docs for extend operations\n\n* 1.0.0 2015.12.06\n    - Private RC for production\n    - Status moved to 5 - Production/Stable\n\n* 0.9.9.4 2015.12.02\n    - Added items() to CaseInsensitiveDict class (thanks Jan-Hendrik)\n    - Added set_config_parameter() in ldap3 namespace to modify the values of the configurable parameters of ldap3\n    - Added microsoft.extend.modify_password() extended operation to change AD password\n    - Fixed find_active_random_server() in pooling (thanks Sargul)\n    - Fixed referral decoding in fast ber decoder (thanks TWAC)\n\n* 0.9.9.3 2015.11.15\n    - Added LDAPI (LDAP over IPC) support for unix socket communication\n    - Added mandatory_in and optional_in in server schema for attribute types. Now you can see in which classes attributes are used\n    - Added last_transmitted_time and last_received_time to Usage object to track time of the last sent and received operation\n    - Exception SessionTerminatedByServer renamed to SessionTerminatedByServerError and added to ldap3 namespace\n    - Added get_config_parameter() in ldap3 namespace to read the current value of ldap3 configurable parameters\n    - Added SASL mechanism name as constants in the ldap3 namespace\n    - Added escape_filter_chars in utils.conv (thanks Peter)\n    - Reverted ALL_ATTRIBUTES behaviour in search to 0.9.9.1 (thanks Petros)\n\n* 0.9.9.2 2015.10.19\n    - Fixed hasattr() behaviour for Entry object in Python 3\n    - Allows empty sasl_credentials in SASL bind\n    - Added POOLING_LOOP_TIMEOUT constant to specify how many seconds the server pooling strategy has to wait before retrying if it did not find an active server (defaults to 10)\n    - Pooling strategy now allows to specify the number of cycles to try when finding a server (with active=N)\n    - Pooling strategy now allows to specify how many seconds a server must be considered offline before retrying to check for availabiliry (with exhaust=N)\n    - Connection.entries defaults to empty list\n    - ALL_ATTRIBUTES don't send any attribute in the attribute list (was sending '*') while searching\n    - Added DirSync extended function for Microsoft Active Directory\n    - Added LDAP_SERVER_DIRSYNC_OID control for Microsoft Active Directory\n    - Added LDAP_SERVER_EXTENDED_DN_OID control for Microsoft Active Directory\n    - Added LDAP_SERVER_SHOW_DELETED_OID control for Microsoft Active Directory\n    - Fixed AD tests for single valued attributes\n    - Added ACL attribute in the ATTRIBUTES_EXCLUDED_FROM_CHECK list\n\n* 0.9.9.1 2015.09.21\n    - Allows empty member values in groups while adding - this should not be as per rfc4511 4.1.7, but some servers expects it (thanks John)\n    - Faster case insensitive dict while getting and setting key (thanks Pierre)\n    - Updated setuptools to 18.3.2\n    - Updated wheel to 0.26\n    - Tested against Python 2.6 - Python 2.7 - Python 3.3 - Python 3.4 - Python 3.5 - pypy - pypy3\n\n* 0.9.9 2015.09.09\n    - Fixed boolean value for True value in ASN.1 encoding for certain ldap servers. (thanks Will)\n    - Fixed follow auto referrals. (thanks WIll)\n    - Now protocol defined integer values can be used for scope and derefAliases arguments when searching. (thanks Will)\n    - Added description field in the AttrDef object. (thanks Hogne)\n    - Added a custom ber decoder. Decoding of received packets is now 10x faster.\n    - Added new boolean argument fast_decoder in connection object. Defaults to True.\n    - Highest date correctly managed by the format_ad_timestamp() formatter. (thanks Will)\n    - Fix for latest gssapi kerberos authentication module (thanks Alex)\n    - Added freeIPA OID descriptors\n    - Removed unneeded OidInfo class\n\n* 0.9.8.8 2015.08.14\n    - Coerce objectClass to a list in Add operation. (thanks Yutaka)\n    - ObjectClass attribute values mantain their order in the Add operation. (thanks Yutaka)\n    - Fixed search filter composition when the value part of the assertion contains = character. (thanks Eero)\n    - Fixed modify_password extended operation when no hash method is specified. (thanks midnightlynx)\n    - Added credentials to kerberos authentication. (thanks Alex)\n    - Target name can be specified in sasl_credentials for Kerberos authentication. (thanks Alex)\n    - Target name can be read from DNS in sasl_credential for Kerberos authentication. (thanks Alex)\n    - Fixed connection.entries error when referrals are in the search response. (thanks WIll)\n\n* 0.9.8.7 2015.07.19\n    - Backported ssl.match_hostname from Python 3.4.3 standard library to be used in Python < 2.7.10\n    - Use backports.ssl_match_hostname if present instead of static backported functions for matching server names in ssl certificate (thanks Michal)\n    - Attributes values are properly printed when not strings in abstract.attribute (thanks hogneh)\n    - Checking unicode __repr__() in python2\n    - Added hashing capability to Modify Password extended operation (thanks Gawain)\n\n* 0.9.8.6 2015.06.30\n    - Modify operation now accept multiple changes for same attribute (Thanks Lorenzo)\n    - Fixed entries property in connection when objects from multiple object classes are returned\n    - Hide sensitive data in logging. use the utils.log.set_library_hide_sensitive_data(False) to show sensitive data\n      and utils.log.get_library_hide_sensitive_data() to get the current value\n    - Limited number of characters in a single log line. use the utils.log.set_library_log_max_line_length(length) to set\n      and utils.log.get_library_log_max_line_length(length) to get the current value\n    - Added CHANGES.txt with full changelog, latest changes only in README.txt\n\n* 0.9.8.5.post2 2015.06.24\n    - Updated pyasn1 to 0.1.8\n    - Fixed error in not filter with pyasn1 0.1.8\n\n* 0.9.8.5 2015.06.23\n    - Updated docs with ldap operations pages\n    - Fixed a bug where an Exception was raised on OpenBSD for missing IPV4_MAPPED flag\n    - Fixed missing add operation usage metrics\n    - Abstract Attribute doesn't permit \"falsy\" values or None as default (thanks Lucas)\n\n* 0.9.8.4 2015.05.19\n    - Added EXTENDED log detail level with prettyPrint description of ldap messages\n    - Fixed logging of IPv6 address description\n    - Fixed checking of open address when dns returns more than one ip for the same host\n    - Fixed selection of proper address when failing back from IPv6 to IPv4 and vice-versa\n    - When sending controls controlValue is now optional (as stated in RFC 4511), specify None to not send it\n    - Moved badges to shields.io\n\n* 0.9.8.3 2015.05.11\n    - Added support for logging\n    - Added LDAPInvalidTlsSpecificationError exception\n    - Added support for kerberos sasl - needs the gssapi package (thanks sigmaris and pefoley2)\n    - Added support for using generator objects in ldap operations (thanks Matt)\n    - Fixed bug in collect_usage (thanks Philippe)\n    - Changed default server mode from IP_SYSTEM_DEFAULT to IP_V6_PREFERRED\n\n* 0.9.8.2 2015.04.08\n    - SaslCred returned as raw bytes (thanks Peter)\n    - Search_paged now properly works in abstract.reader (thanks wazboy)\n\n* 0.9.8.1 2015.04.04\n    - Added NTLMv2 authentication method\n    - extend.standard.who_am_i() now try to decode the authzid as unicode\n    - Tests for AD (Active Directory) now use tls_before_bind when opening a connection\n    - 0.9.8 not working for pypi problems\n\n* 0.9.7.12 2015.03.18\n    - Fixed missing optional authzid in digestMD5 sasl mechanism (thanks Damiano)\n    - Changed unneeded classmethods to staticmethods\n\n* 0.9.7.11 2015.03.12\n    - Fixed address_info resolution on systems without the IPV4MAPPED flag (thanks Andryi)\n\n* 0.9.7.10 2015.02.28\n    - Fixed bug in PagedSearch when server has a hard limit on the number of entries returned (thanks Reimar)\n    - 0.9.7.9 not working for pypi problems\n    - 0.9.7.8 not working for pypi problems\n    - 0.9.7.7 not working for pypi problems\n    - 0.9.7.6 not working for pypi problems\n\n* 0.9.7.5 2015.02.20\n    - Fixed exception raised when opening a connection to a server. If there is only one candidate address and there is an error it returns the specific Exception, not a generic LDAPException error\n    - Address_info filters out any impossible address to reach\n    - Address_info include an IPV4MAPPED address for IPV6 host that try to reach an IPV4 only server\n    - Added SyncMock strategy (needs the sldap3 package)\n    - Fixed bug when using the aproximation operation in ldap search operations (thanks Laurent)\n    - Removed response from exception raised with raise_exceptions=True to avoid very long exceptions message\n\n* 0.9.7.4 2015.02.02\n    - Added connection.entries property for storing response from search operations as and abstract.Entry collection.\n\n* 0.9.7.3 2015.01.25\n    - Modify operation type can also be passed as integer\n\n* 0.9.7.2 2015.01.16\n    - Fixed a bug when resolving IP address with getaddrinfo(). On OSX returned an UDP connection (thanks Hiroshi).\n\n* 0.9.7.1 2015.01.05\n    - Moved to Github\n    - Moved to Travis-CI for continuous integration\n    - Moved to ReadTheDocs for documentation\n    - Moved testing servers in the cloud, to allow testing from Travis-CI\n    - Project renamed from python3-ldap to ldap3 to avoid name clashing with the existing python-ldap library\n    - Constant values in ldap3 are now strings. This is helpful in testing and debugging\n    - Test suite fully refactored to be used in cloud lab and local development lab\n    - Test suite includes options for testing against eDirectory, Active Directory and OpenLDAP\n\n* 0.9.7 2014.12.17\n    - Fixed bug for auto_range used in paged search\n    - Added dual IP stack mode parameter in Server object, values are: IP_SYSTEM_DEFAULT, IP_V4_ONLY, IP_V4_PREFERRED, IP_V6_ONLY, IP_V6_PREFERRED\n    - Added read_server_info parameter to bind() and start_tls() to avoid multiple schema and info read operations with auto_bind\n    - Redesigned Reusable (pooled) strategy\n    - Added LDAPResponseTimeoutError exception raised when get_response() doesn't receive any response in the allowed timeout period\n    - Added shortened authentication parameters in ldap3 namespace: ANONYMOUS, SIMPLE, SASL\n    - Added shortened scope parameters in ldap3 namespace: BASE, LEVEL, SUBTREE\n    - Added shortened get_info parameters in ldap3 namespace: NONE, DSA, SCHEMA, ALL\n    - Added shortened alias dereferencing parameters in ldap3 namespace: DEREF_NONE, DEREF_SEARCH, DEREF_BASE, DEREF_ALWAYS\n    - Added shortened connection strategy parameters in ldap3 namespace: SYNC, ASYNC, LDIF, RESTARTABLE, REUSABLE\n    - Added shortened pooling strategy parameters in ldap3 namespace: FIRST, ROUND_ROBIN, RANDOM\n    - Added reentrant lock to avoid race conditions in the Connection object\n    - When runs in Python 2.7.9 uses SSLContext\n    - Tested against Python 2.7.9, PyPy 2.4.0 and PyPy3 2.4.0\n    - setuptools updated to 8.2.1\n\n* 0.9.6.2 2014.11.17\n    - Changed SESSION_TERMINATED_BY_SERVER from 0 to -2\n    - Removed unneeded FORMAT_xxx variables in ldap3 namespace\n    - Fixed bug in auto_range when search operation returns search continuations\n    - Added infrastructure for Mock DSA (not functional yet)\n\n* 0.9.6.1 2014.11.11\n    - Added boolean parameter \"auto_range\" to catch the \"range\" ldap tag in searches. When true all needed search operation are made to fully obtain the whole range of result values\n    - Fixed bug in sdist\n    - Added offline schema for Fedora 389 Directory Server 1.3.3\n    - Fixed bug while reading DSA info\n\n* 0.9.6 2014.11.01\n    - New feature 'offline schema' to let the client have knowledge of schema and DSA info even if not returned by the server\n    - Offline schema for Novell eDirectory 8.8.8\n    - Offline schema for Microsoft Active Directory 2012 R2\n    - Offline schema for slapd 2.4 (Openldap)\n    - Added server.info.to_json() and server.info.to_file to JSON serialize schema and info from Server object\n    - Added Server.from_json() and Server.from_file() to create a Server object from a JSON definition\n    - Added response_to_json() and response_to_file() to Connection object to serialize search response entries in JSON as a string or as a file\n    - New exception hierarchy LDAPConfigurationError includes library configuration exceptions\n    - New exception LDAPInvalidConfigurationDefinitionError\n    - Dsa info and schema are not read twice when binding (thanks phobie)\n    - LDAPStartTLSError exception is merged with exception raised from ssl packaged\n    - Digest-MD5 SASL authentication accepts directives with list attributes (thanks John)\n    - Fixed caseInsensitiveDictionary for keys() and values() methods\n    - Fixed matching of certificate name in ssl with Python2\n    - Attributes names and formatters are checked even if schema is not read by the server\n    - Fixed fractional time when parsing generalized time\n    - Specific decoder for Active Directory ObjectGuid and ObjectSid\n    - Added additional checking for unicode in Python 2\n    - Tested against Python 3.4.2, 2.7.8, 2.6.6\n    - Updated setuptools to 7.0\n\n* 0.9.5.4 2014.09.22\n    - Fixed security issue in lazy connections (thanks Moritz)\n    - Added ldap3.utils.dn with parse_dn(dn) to verify dn compliance with RFC4514\n    - Added safe_dn(dn) to properly escape dn (if possible)\n    - Added ldap3.utils.uri with parse_uri(uri) to verify uri compliance with RFC4516\n    - Check for trailing slashes in hostname (thanks Dylan)\n    - Timeout for socket connect operation. Server.connect_timeout = seconds_to_wait_for_establishing_connection (thanks Florian)\n    - Closing socket error doesn't raise exception anymore\n    - ServerPool can be implicity defined with a list of server names (even when defining a connection)\n\n* 0.9.5.3 2014.08.24\n    - elements returned in schema and dsa info are in a case insensitive dictionary (can be changed in ldap3.CASE_INSENSITIVE_SCHEMA_NAMES = True|False)\n    - attributes name returned in searches are now case insensitive (can be changed in ldap3.CASE_INSENSITIVE_ATTRIBUTE_NAMES = True|False)\n    - change parameter name from separe_rdn to separate_rdn in ldap3.utils.conv.to_dn()\n    - sync dev from Bitbucket to GitHub\n    - schema attributes are explicitly read (useful for Active directory and 389 Directory Server)\n    - new extended operation: list_replicas (Novell)\n    - new extended operation: get_replica_info (Novell)\n    - new extended operation: partition_entry_count (Novell)\n    - renamed convert_to_ldif() to _convert_to_ldif()\n\n* 0.9.5.2 2014.08.05\n    - fixed LDAPOperationResult.__str__ (thanks David)\n    - added to_dn() in utils.conv to convert a dn string to a list of components (strings or tuples)\n    - added __version__ in ldap3\n    - don't raise exception if the schema cannot be read in unauthenticated state\n    - server.address_info is now a property\n\n* 0.9.5.1 2014.08.02\n    - getaddrinfo called only once\n    - real_server machinery removed - messageId is now global and monotonic for the whole library\n    - attributes are returned formatted if schema is read and check_names = True, removed checked_attributes\n    - bind result is populated again when successful (was removed in 0.9.2.1)\n    - exception is now raised if you receive multiple extended response to a single extended request. This is not allowed by RFC 4511\n\n* 0.9.5 2014.07.22\n    - added support for IPv6 (thanks Robert)\n    - auto_bind can be used even for establishing tls, possible values (defined in ldap3) are: AUTO_BIND_NONE, AUTO_BIND_NO_TLS, AUTO_BIND_TLS_AFTER_BIND, AUTO_BIND_TLS_BEFORE_BIND\n    - refactored extend package to use classes\n    - new extended operation: get_universal_password (Novell)\n    - new extended operation: set_universal_password (Novell)\n    - added parsing of hostname in scheme://hostname:hostport format. This has the precedence on the parameters (thanks Sorin)\n    - added extra checks when the schema is read (with the get_info parameter) but nothing is returned by the server\n    - updated setuptools to version 5.4.1\n    - when check_name is True and schema is read attributes are checked and formatted in \"checked_attributes\" as specified by RFCs following the server schema\n    - added formatter for generalizedTime syntax as specified in RFC4517 (ASN.1)\n    - custom formatter can be added in Server definition\n\n* 0.9.4.2 2014.07.03\n    - Moved to Bitbucket + Mercurial\n    - Fixed import in core.tls package\n    - Removed unneeded imports\n\n* 0.9.4.1 2014.07.02\n    - included missing extend package (thanks to debnet)\n\n* 0.9.4 2014.07.02\n    - when running in python 3.4 or newer now Tls class uses SSLContext object with default secure setting\n    - added parameters ca_certs_path, ca_certs_data, local_private_key_password to Tls object creation, valid when using SSLContext\n    - in python 3.4 or newer the system CA certificates configuration can be used (just leave ca_cert_file, ca_certs_path and ca_certs_data set to None)\n    - removed TLSv1 as default for Tls connection\n    - upgraded backported ssl function from python 3.4.1 when using with python 2\n    - when creating a connection the server parameter can be a string: the name of the server to connect in cleartext on default port 389\n    - fixed bug in ldap3.util.conv.escape_bytes()\n    - attributes parameter in search can be a tuple\n    - check_names parameter in connection now defaults to True (so when schema info is available attribute and class name will be checked when performing LDAP operations)\n    - remove the connection.close() method - use connection.unbind()\n    - new exception LDAPExtensionError for signalling when the requestValue of extended operation is of an unknown ASN1 type\n    - exiting connection manager doesn't raise an exception if unbind is not successful (needed in long operations)\n    - new extended operation: modify_password (RFC3062)\n    - new extended operation: who_am_i (RFC4532)\n    - new extended operation: get_bind_dn (Novell)\n    - updated setuptools to version 5.3\n\n* 0.9.3.5 2014.06.22\n    - Exception history in restartable strategy is printed when reached the maximum number of retries\n    - Fixed conditions on terminated_by_server unsolicited message\n    - Added python2.6 egg installation package\n\n* 0.9.3.4 2014.06.16\n    - Exception can now be imported from ldap3 package\n    - Escape_bytes return '' for empty string instead of None (thanks Brian)\n    - Added exception history to restartable connection (not for infinite retries)\n    - Fixed start_tls retrying in restartable connection (thanks Brian)\n    - New exception LDAPMaximumRetriesError for signalling when the SyncRestartable Strategy has reached the maximum number of retries while performing an operation\n    - Inverted deleteoldrdn value in LDIF output (thanks Joseph)\n\n* 0.9.3.3 2014.06.01\n    - Fixed a bug in LDIFProducer when using context manager for connection\n    - LDIF header in stream is added only whene there are actual data in the stream\n    - Now LDIF stream can be added to an existing file - version header will not be written if stream is not empty\n\n* 0.9.3.2 2014.05.30\n    - Fixed a bug while reading schema\n    - Add an implicit open() when trying binding on a closed connection\n\n* 0.9.3.1 2014.05.28\n    - Added stream capability to LDIFProducer strategy\n    - Customizable line separator for LDIF output\n    - Customizable sorting order for LDIF output\n    - object_class parameter is now optional in connection.add()\n    - Fixed objectClass attribute case sensitive dependency in add operation\n    - Added stream capability to response_to_ldif() while searching\n\n\n* 0.9.3 2014.05.20\n    - Now the key in server.schema.attribute_type is the attribute name (was the oid)\n    - Now the key in server.schema.object_classes is the class name (was the oid)\n    - Added check_names to Connection definition to have name of attributes and of object class checked against the schema\n    - Updated setuptools to 3.6\n    - Added wheel installation format\n    - Added raise_exceptions mode for connection\n    - Exception hierarchy reworked\n    - Added locking to Server object (for multithreading)\n\n* 0.9.2.2 2014.04.30\n    - fixed a bug from 0.9.1 that broke start_tls() (thanks Mark)\n\n* 0.9.2.1 2014.04.28\n    - fixed a bug in 0.9.2 that allowed only string attributes in add, modify and compare operations (thank Mladen)\n\n* 0.9.2 2014.04.26\n    - changed return value in get_response from response to (response, result) - helpful for multi-threaded connections\n    - added ReusableStrategy for pooling connections\n    - refined docstrings (thanks Will)\n    - result and response attributes don't overlap anymore. Operation result is only in result attribute.\n    - fixed search for binary values (thanks Marcin)\n    - added convenience function to convert bytes to LDAP binary value string format for search filter\n\n* 0.9.1 2014.03.30\n    - added laziness flag to test suite\n    - changed ServerPool signature to accept active and exhaust parameters\n    - removed unneeded start_listen parameter\n    - added 'lazy' parameter to open, to bind and to unbind a connection only when an effective operation is performed\n    - fixed start_tls in SyncWaitRestartable strategy\n    - fixed certificate name checking while opening an ssl connection\n    - fixed syntax error during installation\n    - socket operations now raises proper exception, not generic LDAPException (thanks Joseph)\n    - tested against Python 3.4, 3.3, 2.7, 2.6\n    - updated setuptools to 3.3\n\n* 0.9.0 2014.03.20\n    - PEP8 compliance\n    - added ldap3.compat package with older (non PEP8 compliant) signatures\n    - renamed ldap3.abstraction to ldap3.abstract\n    - moved connection.py, server.py and tls.py files to ldap3.core\n    - fixed SyncWaitRestartableStrategy (thanks Christoph)\n\n* 0.8.3 2014.03.08\n    - added SyncWaitRestartable strategy\n    - removed useless forceBind parameter\n    - usage statistics updated with restartable success/failure counters and open/closed/wrapped socket counters\n\n* 0.8.2 2014.03.04\n    - Added refresh() method to Entry object to read again the attributes from the Reader in the abstraction layer\n    - Fixed Python 2.6 issues\n    - Fixed test suite for Python 2.6\n\n* 0.8,1 2014.02.12\n    - Changed exceptions returned by the library to LDAPException, a subclass of Exception.\n    - Fixed documentation typos\n\n* 0.8.0 - 2014.02.08\n    - Added abstraction layer (for searching, read only)\n    - Added context manager to Connection class\n    - Added readOnly parameter to Connection class\n    - Fixed a bug in search with 'less than' parameter\n    - Remove validation of available SSL protocols because different Python interpreters can use different ssl packages\n\n* 0.7.3 - 2014.01.05\n    - Added SASL DIGEST-MD5 support\n    - Moved to intrapackage (relative) imports\n\n* 0.7.2 - 2013.12.30\n    - Fixed a bug when parentheses are used in search filter as ASCII escaped sequences\n\n* 0.7.1 - 2013.12.21\n    - Completed support for LDIF as per RFC2849\n    - Added new LDIF_PRODUCER strategy to generate LDIF-CHANGE stream\n    - Fixed a bug in the autoReferral feature when controls where used in operation\n\n* 0.7.0 - 2013.12.12\n    - Added support for LDIF as per RFC2849\n    - Added LDIF-CONTENT compliant search responses\n    - Added exception when using autoBind if connection is not successful\n\n* 0.6.7 - 2013.12.03\n    - Fixed exception when DSA is not willing to return rootDSE and schema info\n\n* 0.6.6 - 2013.11.13\n    - Added parameters to test suite\n\n* 0.6.5 - 2013.11.05\n    - Modified rawAttributes decoding, now null (empty) values are returned\n\n* 0.6.4 - 2013.10.16\n    - Added simple paged search as per RFC2696\n    - Controls return values are decoded and stored in result attribute of connection\n\n* 0.6.3 - 2013.10.07\n    - Added Extesible Filter syntax to search filter\n    - Fixed exception while closing connection in AsyncThreaded strategy\n\n* 0.6.2 - 2013.10.01\n    - Fix for referrals in searchRefResult\n    - Disabled schema reading on Active Directory\n\n* 0.6.1 - 2013.09.22\n    - Experimental support for Python 2 - no unicode\n    - Added backport of ssl.match_name for Python 2\n    - Minor fixes for using the client in Python 2\n    - Fix for getting schema info with AsyncThreaded strategy\n\n* 0.6.0 - 2013.09.16\n    - Moved to beta!\n    - Added support site hosted on www.assembla.com\n    - Added public svn repository on www.assembla.com\n    - Added getInfo to server object, parameter can be: GET_NO_INFO, GET_DSA_INFO, GET_SCHEMA_INFO, GET_ALL_INFO\n    - Added method to read the schema from the server. Schema is decoded and returned in different dictionaries of the server.schema object\n    - Updated connection usage info (elapsed time is now computed when connection is closed)\n    - Updated OID dictionary with extensions and controls from Active Directory specifications.\n\n* 0.5.3 - 2013.09.03\n    - Added getOperationalAttributes boolean to Search operation to fetch the operational attributes during search\n    - Added increment operation to modify operation as per RFC4525\n    - Added dictionary of OID descriptions (for DSE and schema decoding)\n    - Added method to get Info from DSE (returned in server.info object)\n    - Modified exceptions for sending controls in LDAP request\n    - Added connection usage (in connection.usage if collectUsage=True in connection definition)\n    - Fixed StartTls in asynchronous client strategy\n\n* 0.5.2 - 2013.08.27\n    - Added SASLprep profile for validating password\n    - Fixed RFC4511 asn1 definitions\n\n* 0.5.1 - 2013.08.17\n    - Refactored package structure\n    - Project description reformatted with reStructuredText\n    - Added Windows graphical installation\n\n* 0.5.0 - 2013.08.15\n    - Added reference to LGPL v3 license\n    - Added Tls object to hold ssl/tls configuration\n    - Added StartTLS feature\n    - Added SASL feature\n    - Added SASL EXTERNAL mechanism\n    - Fixed Unbind\n    - connection.close is now an alias for connection.unbind\n\n* 0.4.4 - 2013.08.01\n    - Added 'Controls' to all LDAP Requests\n    - Added Extended Request feature\n    - Added Intermediate Response feature\n    - Added namespace 'ldap3'\n\n* 0.4.3 - 2013.07.31\n    - Test suite refactored\n    - Fixed single object search response error\n    - Changed attributes returned in search from tuple to dict\n    - Added 'raw_attributes' key in search response to hold undecoded (binary) attribute values read from ldap\n    - Added __repr__ for Server and Connection objects to re-create the object instance\n\n* 0.4.2 - 2013.07.29\n    - Added autoReferral feature as per RFC4511 (4.1.10)\n    - Added allowedReferralHosts to conform to Security considerations of RFC4516\n\n* 0.4.1 - 2013.07.20\n    - Add validation to Abandon operation\n    - Added connection.request to hold a dictionary of infos about last request\n    - Added info about outstanding operation in connection.strategy._oustanding\n    - Implemented RFC4515 for search filter coding and decoding\n    - Added a parser to build filter string from LdapMessage\n\n* 0.4.0 - 2013.07.15\n    - Refactoring of the connection and strategy classes\n    - Added the ldap3.strategy namespace to contain client connection strategies\n    - Added ssl authentication\n    - Moved authentication parameters from Server object to Connection object\n    - Added ssl parameters to Server Object\n\n* 0.3.0 - 2013.07.14\n    - Fixed AsyncThreaded strategy with _outstanding and _responses attributes to hold the pending requests and the not-yet-read responses\n    - Added Extended Operation\n    - Added \"Unsolicited Notification\" discover logic\n    - Added managing of \"Notice of Disconnection\" from server to properly close connection\n\n* 0.2.0 - 2013.07.13\n    - Update setup with setuptools 0.7\n    - Docstrings added to class\n    - Removed ez_setup dependency\n    - Removed distribute dependency\n\n* 0.1.0 - 2013.07.12\n    - Initial upload on pypi\n    - PyASN1 RFC4511 module completed and tested\n    - Synchronous client working properly\n    - Asynchronous client working but not fully tested\n    - Basic authentication working\n",
            "v": "<2.1.1"
        }
    ],
    "lemur": [
        {
            "advisory": "lemur 0.1.5 switched from use a AES static key to Fernet encryption.",
            "cve": null,
            "id": "pyup.io-25876",
            "specs": [
                "<0.1.5"
            ],
            "v": "<0.1.5"
        }
    ],
    "libtaxii": [
        {
            "advisory": "libtaxii before 1.1.105 has multiple XML parsing related vulnerabilities.",
            "cve": null,
            "id": "pyup.io-25877",
            "specs": [
                "<1.1.105"
            ],
            "v": "<1.1.105"
        }
    ],
    "locustio": [
        {
            "advisory": "locustio before 0.7 uses pickle.",
            "cve": null,
            "id": "pyup.io-25878",
            "specs": [
                "<0.7"
            ],
            "v": "<0.7"
        }
    ],
    "mailman": [
        {
            "advisory": "Multiple cross-site scripting (XSS) vulnerabilities in Cgi/confirm.py in GNU Mailman 2.1.14 and earlier allow remote attackers to inject arbitrary web script or HTML via the (1) full name or (2) username field in a confirmation message.",
            "cve": "CVE-2011-0707",
            "id": "pyup.io-25879",
            "specs": [
                "<2.1.14"
            ],
            "v": "<2.1.14"
        },
        {
            "advisory": "Multiple cross-site scripting (XSS) vulnerabilities in GNU Mailman before 2.1.14rc1 allow remote authenticated users to inject arbitrary web script or HTML via vectors involving (1) the list information field or (2) the list description field.",
            "cve": "CVE-2010-3089",
            "id": "pyup.io-25880",
            "specs": [
                "<2.1.14rc1"
            ],
            "v": "<2.1.14rc1"
        },
        {
            "advisory": "Directory traversal vulnerability in GNU Mailman before 2.1.20, when not using a static alias, allows remote attackers to execute arbitrary files via a .. (dot dot) in a list name.",
            "cve": "CVE-2015-2775",
            "id": "pyup.io-25881",
            "specs": [
                "<2.1.20"
            ],
            "v": "<2.1.20"
        }
    ],
    "mako": [
        {
            "advisory": "Mako before 0.3.4 relies on the cgi.escape function in the Python standard library for cross-site scripting (XSS) protection, which makes it easier for remote attackers to conduct XSS attacks via vectors involving single-quote characters and a JavaScript onLoad event handler for a BODY element.",
            "cve": "CVE-2010-2480",
            "id": "pyup.io-25882",
            "specs": [
                "<0.3.4"
            ],
            "v": "<0.3.4"
        }
    ],
    "mantissa": [
        {
            "advisory": "mantissa before 0.6.14 in xmantissa.webtheme allows access to arbitrary filesystem contents.",
            "cve": null,
            "id": "pyup.io-25883",
            "specs": [
                "<0.6.14"
            ],
            "v": "<0.6.14"
        }
    ],
    "markdown2": [
        {
            "advisory": "markdown2 before 1.0.1.14 has a security hole in the md5-hashing scheme for handling HTML  chunks during processing.",
            "cve": null,
            "id": "pyup.io-25884",
            "specs": [
                "<1.0.1.14"
            ],
            "v": "<1.0.1.14"
        },
        {
            "advisory": "markdown2 before 1.0.1.15 is vulnerable to a XSS attack via JavaScript injection in a carefully crafted image reference (usage of double-quotes in the URL).",
            "cve": null,
            "id": "pyup.io-25885",
            "specs": [
                "<1.0.1.15"
            ],
            "v": "<1.0.1.15"
        }
    ],
    "matthisk-httpsig": [
        {
            "advisory": "matthisk-httpsig before 1.0.0 allowed reading keyfiles from disk as this is a huge security hole if this is used in a server framework like drf-httpsig.",
            "cve": null,
            "id": "pyup.io-25886",
            "specs": [
                "<1.0.0"
            ],
            "v": "<1.0.0"
        }
    ],
    "maxminddb": [
        {
            "advisory": "maxminddb 1.1.2 includes a number of important security fixes. Among these fixes is improved validation of the database metadata. Unfortunately,  MaxMind GeoIP2 and GeoLite2 databases created earlier than January 28, 2014  had an invalid data type for the `record_size` in the metadata. Previously these databases worked on little endian machines with libmaxminddb but did not work on big endian machines. Due to increased safety checks when reading the file, these databases will no longer work on any platform. If you are using one of these databases, we recommend that you upgrade to the latest GeoLite2 or GeoIP2 database",
            "cve": null,
            "id": "pyup.io-25887",
            "specs": [
                "<1.1.2"
            ],
            "v": "<1.1.2"
        }
    ],
    "metadataproxy": [
        {
            "advisory": "metadataproxy before 1.1.1 has a flaw in the proxy functionality when used in passthrough mode that would expose the host's IAM role credentials when extra paths were added to the end of the security-credentials end-point. metadataproxy will now properly capture any call to iam/security-credentials/<role> and return the scoped credentials, rather than the host's credentials.",
            "cve": null,
            "id": "pyup.io-25888",
            "specs": [
                "<1.1.1"
            ],
            "v": "<1.1.1"
        }
    ],
    "mgp2pdf": [
        {
            "advisory": "In mgp2pdf before 0.10 `%filter`` is enabled by default which is a security risk.",
            "cve": null,
            "id": "pyup.io-25889",
            "specs": [
                "<0.10"
            ],
            "v": "<0.10"
        }
    ],
    "mini-amf": [
        {
            "advisory": "mini-amf before 0.8 is vulnerable to XML entity attacks.",
            "cve": null,
            "id": "pyup.io-33048",
            "specs": [
                "<0.8"
            ],
            "v": "<0.8"
        }
    ],
    "mistune": [
        {
            "advisory": "mistune before 0.7.2 is vulnerable to an XSS attack. It is possible to bypass the renderer's link security check.",
            "cve": null,
            "id": "pyup.io-25890",
            "specs": [
                "<0.7.2"
            ],
            "v": "<0.7.2"
        }
    ],
    "mitmproxy": [
        {
            "advisory": "mitmproxy before 0.17 has a XSS vulnerability in HTTP errors.",
            "cve": null,
            "id": "pyup.io-25891",
            "specs": [
                "<0.17"
            ],
            "v": "<0.17"
        }
    ],
    "mixminion": [
        {
            "advisory": "mixminion before 0.0.2 is vulnerable to certain trivial DoS attacks. In particular, it's possible to send zlib bombs or flood a server with open connections.",
            "cve": null,
            "id": "pyup.io-25892",
            "specs": [
                "<0.0.2"
            ],
            "v": "<0.0.2"
        }
    ],
    "mkdocs-material": [
        {
            "advisory": "mkdocs-material before 1.0.0 uses _blank targets on links which make it vulnerable to Cross Site Scripting attacks.",
            "cve": null,
            "id": "pyup.io-32121",
            "specs": [
                "<1.0.0"
            ],
            "v": "<1.0.0"
        }
    ],
    "mockup": [
        {
            "advisory": "mockup before 2.1.3 has XSS vulnerability issues in structure and relateditem patterns.",
            "cve": null,
            "id": "pyup.io-25893",
            "specs": [
                "<2.1.3"
            ],
            "v": "<2.1.3"
        }
    ],
    "moin": [
        {
            "advisory": "The password_checker function in config/multiconfig.py in MoinMoin 1.6.1 uses the cracklib and python-crack features even though they are not thread-safe, which allows remote attackers to cause a denial of service (segmentation fault and crash) via unknown vectors.",
            "cve": "CVE-2008-6549",
            "id": "pyup.io-25894",
            "specs": [
                "<1.6.1"
            ],
            "v": "<1.6.1"
        }
    ],
    "morepath": [
        {
            "advisory": "morepath before 0.14 has no host header validation to protect against header poisoning attacks.",
            "cve": null,
            "id": "pyup.io-25895",
            "specs": [
                "<0.14"
            ],
            "v": "<0.14"
        }
    ],
    "mosql": [
        {
            "advisory": "mosql 0.10 includes several security related changes.",
            "cve": null,
            "id": "pyup.io-25896",
            "specs": [
                "<0.10"
            ],
            "v": "<0.10"
        }
    ],
    "mr.migrator": [
        {
            "advisory": "mr.migrator 1.2 fixes a form problem with security hotfix.",
            "cve": null,
            "id": "pyup.io-25897",
            "specs": [
                "<1.2"
            ],
            "v": "<1.2"
        }
    ],
    "mss": [
        {
            "advisory": "mss before 2.0.18 has a undisclosed security issue.",
            "cve": null,
            "id": "pyup.io-25898",
            "specs": [
                "<2.0.18"
            ],
            "v": "<2.0.18"
        }
    ],
    "murano-dashboard": [
        {
            "advisory": "OpenStack Murano before 1.0.3 (liberty) and 2.x before 2.0.1 (mitaka), Murano-dashboard before 1.0.3 (liberty) and 2.x before 2.0.1 (mitaka), and python-muranoclient before 0.7.3 (liberty) and 0.8.x before 0.8.5 (mitaka) improperly use loaders inherited from yaml.Loader when parsing MuranoPL and UI files, which allows remote attackers to create arbitrary Python objects and execute arbitrary code via crafted extended YAML tags in UI definitions in packages.",
            "cve": "CVE-2016-4972",
            "id": "pyup.io-25899",
            "specs": [
                ">=2.0,<2.0.1",
                "<1.0.3"
            ],
            "v": ">=2.0,<2.0.1,<1.0.3"
        }
    ],
    "mysql-connector": [
        {
            "advisory": "Unspecified vulnerability in the MySQL Connector component 2.1.3 and earlier and 2.0.4 and earlier in Oracle MySQL allows remote attackers to affect confidentiality, integrity, and availability via vectors related to Connector/Python.",
            "cve": "CVE-2016-5598",
            "id": "pyup.io-25900",
            "specs": [
                "<2.1.3"
            ],
            "v": "<2.1.3"
        }
    ],
    "mysql-connector-python": [
        {
            "advisory": "Unspecified vulnerability in the MySQL Connector component 2.1.3 and earlier and 2.0.4 and earlier in Oracle MySQL allows remote attackers to affect confidentiality, integrity, and availability via vectors related to Connector/Python.",
            "cve": "CVE-2016-5598",
            "id": "pyup.io-25901",
            "specs": [
                "<2.0.4"
            ],
            "v": "<2.0.4"
        }
    ],
    "newsletter": [
        {
            "advisory": "newsletter 0.1.17pre in newsletterapp is now more secure by default.  Does not setup default users for admin section.",
            "cve": null,
            "id": "pyup.io-25902",
            "specs": [
                "<0.1.17pre"
            ],
            "v": "<0.1.17pre"
        }
    ],
    "nfw": [
        {
            "advisory": "nfw before 0.0.7 is vulnerable to SQL-injection attacks.",
            "cve": null,
            "id": "pyup.io-32994",
            "specs": [
                "<0.0.7"
            ],
            "v": "<0.0.7"
        }
    ],
    "notebook": [
        {
            "advisory": "The editor in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to execute arbitrary JavaScript code via a crafted file, which triggers a redirect to files/, related to MIME types.",
            "cve": "CVE-2015-7337",
            "id": "pyup.io-25903",
            "specs": [
                "<4.0.5"
            ],
            "v": "<4.0.5"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in the file browser in notebook/notebookapp.py in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to inject arbitrary web script or HTML via a folder name.  NOTE: this was originally reported as a cross-site request forgery (CSRF) vulnerability, but this may be inaccurate.",
            "cve": "CVE-2015-6938",
            "id": "pyup.io-25904",
            "specs": [
                ">=4.0,<4.0.5"
            ],
            "v": ">=4.0,<4.0.5"
        }
    ],
    "nova": [
        {
            "advisory": "The OpenStack Nova (python-nova) package 1:2013.2.3-0 before 1:2013.2.3-0ubuntu1.2 and 1:2014.1-0 before 1:2014.1-0ubuntu1.2 and Openstack Cinder (python-cinder) package 1:2013.2.3-0 before 1:2013.2.3-0ubuntu1.1 and 1:2014.1-0 before 1:2014.1-0ubuntu1.1 for Ubuntu 13.10 and 14.04 LTS does not properly set the sudo configuration, which makes it easier for attackers to gain privileges by leveraging another vulnerability.",
            "cve": "CVE-2013-1068",
            "id": "pyup.io-25905",
            "specs": [
                "<2013.2.3"
            ],
            "v": "<2013.2.3"
        }
    ],
    "nsupdate": [
        {
            "advisory": "nsupdate before 0.3.0 is vulnerable to a undisclosed security issue.",
            "cve": null,
            "id": "pyup.io-25906",
            "specs": [
                "<0.3.0"
            ],
            "v": "<0.3.0"
        },
        {
            "advisory": "nsupdate 0.8.0 fixes a security issue: abuse_blocked flag could be worked around by abuser.",
            "cve": null,
            "id": "pyup.io-25907",
            "specs": [
                "<0.8.0"
            ],
            "v": "<0.8.0"
        },
        {
            "advisory": "nsupdate 0.9.1 fixes a security issue with \"related hosts\" / \"service updaters\".",
            "cve": null,
            "id": "pyup.io-25908",
            "specs": [
                "<0.9.1"
            ],
            "v": "<0.9.1"
        }
    ],
    "oauthlib": [
        {
            "advisory": "oauthlib before 0.7.0 is not stripping client provided passwords from OAuth2 logs.",
            "cve": null,
            "id": "pyup.io-25909",
            "specs": [
                "<0.7.0"
            ],
            "v": "<0.7.0"
        }
    ],
    "ocrodjvu": [
        {
            "advisory": "ocrodjvu 0.6.1 fixes insecure use of temporary files when using Cuneiform. https://bugs.debian.org/598134 CVE-2010-4338",
            "cve": null,
            "id": "pyup.io-25910",
            "specs": [
                "<0.6.1"
            ],
            "v": "<0.6.1"
        }
    ],
    "onegov.form": [
        {
            "advisory": "onegov.form before 0.16.1 is not escaping HTML labels in the dynamic formbuilder.",
            "cve": null,
            "id": "pyup.io-25911",
            "specs": [
                "<0.16.1"
            ],
            "v": "<0.16.1"
        }
    ],
    "onixcheck": [
        {
            "advisory": "onixcheck 0.8.0 adds secured XML-Parsing via defusedxml.",
            "cve": null,
            "id": "pyup.io-25912",
            "specs": [
                "<0.8.0"
            ],
            "v": "<0.8.0"
        }
    ],
    "oodt": [
        {
            "advisory": "oodt before 0.4 is vulnerable to XSS attacks via malformed query strings.",
            "cve": null,
            "id": "pyup.io-25913",
            "specs": [
                "<0.4"
            ],
            "v": "<0.4"
        }
    ],
    "ooniprobe": [
        {
            "advisory": "ooniprobe before 1.0.2 is vulnerable to several undisclosed security issues.",
            "cve": null,
            "id": "pyup.io-25914",
            "specs": [
                "<1.0.2"
            ],
            "v": "<1.0.2"
        }
    ],
    "otpauth": [
        {
            "advisory": "otpauth before 1.0.1 is vulnerable to timing attacks.",
            "cve": null,
            "id": "pyup.io-25915",
            "specs": [
                "<1.0.1"
            ],
            "v": "<1.0.1"
        }
    ],
    "ovirt-engine-sdk-python": [
        {
            "advisory": "The python SDK before 3.1.0.6 and CLI before 3.1.0.8 for oVirt 3.1 does not check the server SSL certificate against the client keys, which allows remote attackers to spoof a server via a man-in-the-middle (MITM) attack.",
            "cve": "CVE-2012-3533",
            "id": "pyup.io-25916",
            "specs": [
                "<3.1.0.8"
            ],
            "v": "<3.1.0.8"
        }
    ],
    "ovs": [
        {
            "advisory": "ovs 1.3.0 includes a fix that flow setups are now processed in a round-robin manner across ports to prevent any single client from monopolizing the CPU and conducting a denial of service attack.",
            "cve": null,
            "id": "pyup.io-25917",
            "specs": [
                "<1.3.0"
            ],
            "v": "<1.3.0"
        }
    ],
    "pando": [
        {
            "advisory": "pando before 0.39 is vulnerable to security bugs related to CRLF injection.",
            "cve": null,
            "id": "pyup.io-25918",
            "specs": [
                "<0.39"
            ],
            "v": "<0.39"
        },
        {
            "advisory": "pando before 0.42 is vulnerable to URL redirection attacks.",
            "cve": null,
            "id": "pyup.io-25919",
            "specs": [
                "<0.42"
            ],
            "v": "<0.42"
        }
    ],
    "passlib": [
        {
            "advisory": "passlib before 1.4 not disabled unix_fallback's \"wildcard password\" support unless explicitly enabled by user.",
            "cve": null,
            "id": "pyup.io-25921",
            "specs": [
                "<1.4"
            ],
            "v": "<1.4"
        }
    ],
    "paste": [
        {
            "advisory": "paste before 0.9.5 has a security vulnerability in ``paste.urlparser``'s StaticURLParser and PkgResourcesParser where, with some servers, you could escape the document root.",
            "cve": null,
            "id": "pyup.io-25922",
            "specs": [
                "<0.9.5"
            ],
            "v": "<0.9.5"
        },
        {
            "advisory": "paste 1.1 includes a security fix for ``paste.urlparser.StaticURLParser``.  The problem allowed escaping the root (and reading files) when used with ``paste.httpserver`` (this does not effect other servers, and does not apply when proxying requests from Apache to  ``paste.httpserver``).",
            "cve": null,
            "id": "pyup.io-25923",
            "specs": [
                "<1.1"
            ],
            "v": "<1.1"
        },
        {
            "advisory": "paste before 1.7.4 is vulnerable to a XSS attack in paste.urlparser.StaticURLParser.",
            "cve": null,
            "id": "pyup.io-25924",
            "specs": [
                "<1.7.4"
            ],
            "v": "<1.7.4"
        }
    ],
    "pastescript": [
        {
            "advisory": "Paste Script 1.7.5 and earlier does not properly set group memberships during execution with root privileges, which might allow remote attackers to bypass intended file-access restrictions by leveraging a web application that uses the local filesystem.",
            "cve": "CVE-2012-0878",
            "id": "pyup.io-25925",
            "specs": [
                "<1.7.5"
            ],
            "v": "<1.7.5"
        }
    ],
    "pcp": [
        {
            "advisory": "pcp before 2.1.911 has a not further described vulnerability in pcp.spec.in.",
            "cve": null,
            "id": "pyup.io-25926",
            "specs": [
                "<2.1.911"
            ],
            "v": "<2.1.911"
        }
    ],
    "pdfextract": [
        {
            "advisory": "pdfextract before 0.0.2 is using `eval` on filenames, leading to execution of arbitrary Python code.",
            "cve": null,
            "id": "pyup.io-25927",
            "specs": [
                "<0.0.2"
            ],
            "v": "<0.0.2"
        }
    ],
    "peppercorn": [
        {
            "advisory": "peppercorn before 0.5 is vulnerable to DoS attacks due to the use of an iterative parser rather than a recursive parser.",
            "cve": null,
            "id": "pyup.io-25928",
            "specs": [
                "<0.5"
            ],
            "v": "<0.5"
        }
    ],
    "pex": [
        {
            "advisory": "pex before 0.5.6 follows links which may lead to security issues: https://rbcommons.com/s/twitter/r/293/.",
            "cve": null,
            "id": "pyup.io-25929",
            "specs": [
                "<0.5.6"
            ],
            "v": "<0.5.6"
        }
    ],
    "phileo": [
        {
            "advisory": "phileo before 0.3 allows users to like anything and everything, which could potentially lead to security problems (eg. liking entries in permission tables, and thus seeing their content; liking administrative users and thus getting their username).",
            "cve": null,
            "id": "pyup.io-25930",
            "specs": [
                "<0.3"
            ],
            "v": "<0.3"
        }
    ],
    "pillow": [
        {
            "advisory": "pillow before 2.3.1 makes insecure use of tempfile.mktemp (CVE-2014-1932 CVE-2014-1933).",
            "cve": null,
            "id": "pyup.io-25931",
            "specs": [
                "<2.3.1"
            ],
            "v": "<2.3.1"
        },
        {
            "advisory": "pillow before 2.3.2 is vulnerable to a DOS in the IcnsImagePlugin.",
            "cve": null,
            "id": "pyup.io-25932",
            "specs": [
                "<2.3.2"
            ],
            "v": "<2.3.2"
        },
        {
            "advisory": "pillow before 2.5.2 is vulnerable to a DoS in the IcnsImagePlugin.",
            "cve": null,
            "id": "pyup.io-25933",
            "specs": [
                "<2.5.2"
            ],
            "v": "<2.5.2"
        },
        {
            "advisory": "pillow before 2.5.3 is vulnerable to a DoS in the Jpeg2KImagePlugin.",
            "cve": null,
            "id": "pyup.io-25934",
            "specs": [
                "<2.5.3"
            ],
            "v": "<2.5.3"
        },
        {
            "advisory": "pillow before 2.6.0rc1 is vulnerable to CVE-2014-3598, a DOS in the Jpeg2KImagePlugin and CVE-2014-3589, a DOS in the IcnsImagePlugin.",
            "cve": null,
            "id": "pyup.io-25935",
            "specs": [
                "<2.6.0rc1"
            ],
            "v": "<2.6.0rc1"
        },
        {
            "advisory": "pillow before 2.6.2 is vulnerable to a PNG decompression DoS (CVE-2014-9601).",
            "cve": null,
            "id": "pyup.io-25936",
            "specs": [
                "<2.6.2"
            ],
            "v": "<2.6.2"
        },
        {
            "advisory": "pillow before 2.7.0 is vulnerable to a PNG decompression DoS (CVE-2014-9601).",
            "cve": null,
            "id": "pyup.io-25937",
            "specs": [
                "<2.7.0"
            ],
            "v": "<2.7.0"
        },
        {
            "advisory": "Buffer overflow in the ImagingLibTiffDecode function in libImaging/TiffDecode.c in Pillow before 3.1.1 allows remote attackers to overwrite memory via a crafted TIFF file.",
            "cve": "CVE-2016-0740",
            "id": "pyup.io-33134",
            "specs": [
                "<3.1.1"
            ],
            "v": "<3.1.1"
        },
        {
            "advisory": "Integer overflow in the ImagingResampleHorizontal function in libImaging/Resample.c in Pillow before 3.1.1 allows remote attackers to have unspecified impact via negative values of the new size, which triggers a heap-based buffer overflow.",
            "cve": "CVE-2016-4009",
            "id": "pyup.io-33137",
            "specs": [
                "<3.1.1"
            ],
            "v": "<3.1.1"
        },
        {
            "advisory": "Buffer overflow in the ImagingPcdDecode function in PcdDecode.c in Pillow before 3.1.1 and Python Imaging Library (PIL) 1.1.7 and earlier allows remote attackers to cause a denial of service (crash) via a crafted PhotoCD file.",
            "cve": "CVE-2016-2533",
            "id": "pyup.io-33136",
            "specs": [
                "<3.1.1"
            ],
            "v": "<3.1.1"
        },
        {
            "advisory": "Buffer overflow in the ImagingFliDecode function in libImaging/FliDecode.c in Pillow before 3.1.1 allows remote attackers to cause a denial of service (crash) via a crafted FLI file.",
            "cve": "CVE-2016-0775",
            "id": "pyup.io-33135",
            "specs": [
                "<3.1.1"
            ],
            "v": "<3.1.1"
        },
        {
            "advisory": "pillow before 3.1.2 is vulnerable to an integer overflow in Jpeg2KEncode.c causing a buffer overflow. CVE-2016-3076.",
            "cve": null,
            "id": "pyup.io-25943",
            "specs": [
                "<3.1.2"
            ],
            "v": "<3.1.2"
        },
        {
            "advisory": "Pillow before 3.3.2 allows context-dependent attackers to obtain sensitive information by using the \"crafted image file\" approach, related to an \"Integer Overflow\" issue affecting the Image.core.map_buffer in map.c component.",
            "cve": "CVE-2016-9189",
            "id": "pyup.io-33139",
            "specs": [
                "<3.3.2"
            ],
            "v": "<3.3.2"
        },
        {
            "advisory": "Pillow before 3.3.2 allows context-dependent attackers to execute arbitrary code by using the \"crafted image file\" approach, related to an \"Insecure Sign Extension\" issue affecting the ImagingNew in Storage.c component.",
            "cve": "CVE-2016-9190",
            "id": "pyup.io-33138",
            "specs": [
                "<3.3.2"
            ],
            "v": "<3.3.2"
        }
    ],
    "pillow-simd": [
        {
            "advisory": "pillow-simd before 2.3.2 is vulnerable to CVE-2014-3598, a DOS in the Jpeg2KImagePlugin and CVE-2014-3589, a DOS in the IcnsImagePlugin.",
            "cve": null,
            "id": "pyup.io-25947",
            "specs": [
                "<2.3.2"
            ],
            "v": "<2.3.2"
        },
        {
            "advisory": "pillow-simd before 2.5.2 is vulnerable to CVE-2014-3598, a DOS in the Jpeg2KImagePlugin and CVE-2014-3589, a DOS in the IcnsImagePlugin.",
            "cve": null,
            "id": "pyup.io-25948",
            "specs": [
                "<2.5.2"
            ],
            "v": "<2.5.2"
        },
        {
            "advisory": "pillow-simd before 2.5.3 is vulnerable to CVE-2014-3598, a DOS in the Jpeg2KImagePlugin and CVE-2014-3589, a DOS in the IcnsImagePlugin.",
            "cve": null,
            "id": "pyup.io-25949",
            "specs": [
                "<2.5.3"
            ],
            "v": "<2.5.3"
        },
        {
            "advisory": "pillow-simd before 2.6.0rc1 is vulnerable to CVE-2014-3598, a DOS in the Jpeg2KImagePlugin and CVE-2014-3589, a DOS in the IcnsImagePlugin.",
            "cve": null,
            "id": "pyup.io-25950",
            "specs": [
                "<2.6.0rc1"
            ],
            "v": "<2.6.0rc1"
        },
        {
            "advisory": "pillow-simd before 2.6.2 is vulnerable to a PNG decompression DoS (CVE-2014-9601).",
            "cve": null,
            "id": "pyup.io-25951",
            "specs": [
                "<2.6.2"
            ],
            "v": "<2.6.2"
        },
        {
            "advisory": "pillow-simd before 2.7.0 is vulnerable to a PNG decompression DoS (CVE-2014-9601).",
            "cve": null,
            "id": "pyup.io-25952",
            "specs": [
                "<2.7.0"
            ],
            "v": "<2.7.0"
        },
        {
            "advisory": "pillow-simd before 3.1.1 is vulnerable to multiple buffer overlows in Resample.c, PcdDecode.c, FliDecode.c and TiffDecode.c.",
            "cve": null,
            "id": "pyup.io-25953",
            "specs": [
                "<3.1.1"
            ],
            "v": "<3.1.1"
        },
        {
            "advisory": "pillow-simd before 3.1.2 is vulnerable to an integer overflow in Jpeg2KEncode.c causing a buffer overflow. CVE-2016-3076.",
            "cve": null,
            "id": "pyup.io-25954",
            "specs": [
                "<3.1.2"
            ],
            "v": "<3.1.2"
        }
    ],
    "pinax-likes": [
        {
            "advisory": "pinax-likes before 0.3 allows users to like anything and everything, which could potentially lead to security problems (eg. liking entries in permission tables, and thus seeing their content; liking administrative users and thus getting their username).",
            "cve": null,
            "id": "pyup.io-25955",
            "specs": [
                "<0.3"
            ],
            "v": "<0.3"
        }
    ],
    "pip": [
        {
            "advisory": "pip before 1.3 uses HTTP to retrieve packages from the PyPI repository, and does not perform integrity checks on package contents, which allows man-in-the-middle attackers to execute arbitrary code via a crafted response to a \"pip install\" operation.",
            "cve": "CVE-2013-1629",
            "id": "pyup.io-33140",
            "specs": [
                "<1.3"
            ],
            "v": "<1.3"
        },
        {
            "advisory": "pip before 1.3 allows local users to overwrite arbitrary files via a symlink attack on a file in the /tmp/pip-build temporary directory.",
            "cve": "CVE-2013-1888",
            "id": "pyup.io-33141",
            "specs": [
                "<1.3"
            ],
            "v": "<1.3"
        },
        {
            "advisory": "pip 1.4 includes a security patch to pip's ssl support related to certificate DNS wildcard matching.",
            "cve": null,
            "id": "pyup.io-25959",
            "specs": [
                "<1.4"
            ],
            "v": "<1.4"
        },
        {
            "advisory": "pip before 6.0 is not using a randomized and secure default build directory when possible. (CVE-2014-8991).",
            "cve": null,
            "id": "pyup.io-25960",
            "specs": [
                "<6.0"
            ],
            "v": "<6.0"
        },
        {
            "advisory": "pip before 6.1.0 bundles a request release with a known security vulnerability. See  CVE-2015-2296.",
            "cve": null,
            "id": "pyup.io-25961",
            "specs": [
                "<6.1.0"
            ],
            "v": "<6.1.0"
        }
    ],
    "pkgcore": [
        {
            "advisory": "pkgcore 0.4.7.12 includes a security fix; force cwd to something controlled for ebuild env.  This blocks an attack detailed in glsa 200810-02; namely that an ebuild invoking python -c (which looks in cwd for modules to load) allows for an attacker to slip something in.",
            "cve": null,
            "id": "pyup.io-25962",
            "specs": [
                "<0.4.7.12"
            ],
            "v": "<0.4.7.12"
        }
    ],
    "plomino": [
        {
            "advisory": "plomino before 1.18 has a major vulnerability in open_url (now, targeted sources must be declared safe from an local package).",
            "cve": null,
            "id": "pyup.io-25963",
            "specs": [
                "<1.18"
            ],
            "v": "<1.18"
        },
        {
            "advisory": "plomino 1.5.3 includes a security fix: when a group has PlominoAuthors rights, members of this group are just authors on their own documents.",
            "cve": null,
            "id": "pyup.io-25964",
            "specs": [
                "<1.5.3"
            ],
            "v": "<1.5.3"
        }
    ],
    "plone": [
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in skins/plone_templates/default_error_message.pt in Plone before 2.5.3 allows remote attackers to inject arbitrary web script or HTML via the type_name parameter to Members/ipa/createObject.",
            "cve": "CVE-2011-1340",
            "id": "pyup.io-25966",
            "specs": [
                "<2.5.3"
            ],
            "v": "<2.5.3"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in PortalTransforms in Plone 2.1 through 3.3.4 before hotfix 20100612 allows remote attackers to inject arbitrary web script or HTML via the safe_html transform.",
            "cve": "CVE-2010-2422",
            "id": "pyup.io-25967",
            "specs": [
                "<3.3.4"
            ],
            "v": "<3.3.4"
        },
        {
            "advisory": "kupu_spellcheck.py in Kupu in Plone before 4.0 allows remote attackers to cause a denial of service (ZServer thread lock) via a crafted URL.",
            "cve": "CVE-2012-5496",
            "id": "pyup.io-33143",
            "specs": [
                "<4.0"
            ],
            "v": "<4.0"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in Plone 4.1 and earlier allows remote attackers to inject arbitrary web script or HTML via a crafted URL.",
            "cve": "CVE-2011-1948",
            "id": "pyup.io-25972",
            "specs": [
                "<4.1"
            ],
            "v": "<4.1"
        },
        {
            "advisory": "Plone 4.1.3 and earlier computes hash values for form parameters without restricting the ability to trigger hash collisions predictably, which allows remote attackers to cause a denial of service (CPU consumption) by sending many crafted parameters.",
            "cve": "CVE-2011-4462",
            "id": "pyup.io-25973",
            "specs": [
                "<4.1.3"
            ],
            "v": "<4.1.3"
        },
        {
            "advisory": "plone.app.users in Plone 4.0 and 4.1 allows remote authenticated users to modify the properties of arbitrary accounts via unspecified vectors, as exploited in the wild in June 2011.",
            "cve": "CVE-2011-1950",
            "id": "pyup.io-25974",
            "specs": [
                "<4.2"
            ],
            "v": "<4.2"
        },
        {
            "advisory": "ftp.py in Plone before 4.2.3 and 4.3 before beta 1 allows remote attackers to read hidden folder contents via unspecified vectors.",
            "cve": "CVE-2012-5503",
            "id": "pyup.io-25999",
            "specs": [
                "<4.2.3",
                "<4.3b1"
            ],
            "v": "<4.2.3,<4.3b1"
        },
        {
            "advisory": "ZPublisher.HTTPRequest._scrubHeader in Zope 2 before 2.13.19, as used in Plone before 4.3 beta 1, allows remote attackers to inject arbitrary HTTP headers via a linefeed (LF) character.",
            "cve": "CVE-2012-5486",
            "id": "pyup.io-25996",
            "specs": [
                "<4.3"
            ],
            "v": "<4.3"
        },
        {
            "advisory": "Unspecified vulnerability in (1) Zope 2.12.x before 2.12.19 and 2.13.x before 2.13.8, as used in Plone 4.x and other products, and (2) PloneHotfix20110720 for Plone 3.x allows attackers to gain privileges via unspecified vectors, related to a \"highly serious vulnerability.\" NOTE: this vulnerability exists because of an incorrect fix for CVE-2011-0720.",
            "cve": "CVE-2011-2528",
            "id": "pyup.io-25965",
            "specs": [
                "==3.3.5,==3.3.4,==3.3.3,==3.3.2"
            ],
            "v": "==3.3.5,==3.3.4,==3.3.3,==3.3.2"
        },
        {
            "advisory": "Unspecified vulnerability in Zope 2.12.x and 2.13.x, as used in Plone 4.0.x through 4.0.9, 4.1, and 4.2 through 4.2a2, allows remote attackers to execute arbitrary commands via vectors related to the p_ class in OFS/misc_.py and the use of Python modules.",
            "cve": "CVE-2011-3587",
            "id": "pyup.io-33144",
            "specs": [
                ">4,<4.2a2"
            ],
            "v": ">4,<4.2a2"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in the safe_html filter in Products.PortalTransforms in Plone 2.1 through 4.1 allows remote authenticated users to inject arbitrary web script or HTML via unspecified vectors, a different vulnerability than CVE-2010-2422.",
            "cve": "CVE-2011-1949",
            "id": "pyup.io-25997",
            "specs": [
                ">=2.1,<4.2"
            ],
            "v": ">=2.1,<4.2"
        },
        {
            "advisory": "Unspecified vulnerability in Plone 2.5 through 4.0, as used in Conga, luci, and possibly other products, allows remote attackers to obtain administrative access, read or create arbitrary content, and change the site skin via unknown vectors.",
            "cve": "CVE-2011-0720",
            "id": "pyup.io-33142",
            "specs": [
                ">=2.5,<4.0"
            ],
            "v": ">=2.5,<4.0"
        },
        {
            "advisory": "The CMFEditions component 2.x in Plone 4.0.x through 4.0.9, 4.1, and 4.2 through 4.2a2 does not prevent the KwAsAttributes classes from being publishable, which allows remote attackers to access sub-objects via unspecified vectors, a different vulnerability than CVE-2011-3587.",
            "cve": "CVE-2011-4030",
            "id": "pyup.io-33145",
            "specs": [
                ">=4,<4.2a2"
            ],
            "v": ">=4,<4.2a2"
        }
    ],
    "plone.app.content": [
        {
            "advisory": "plone.app.content 3.3.1 includes security hotfix 20160830 for folder factories redirection.",
            "cve": null,
            "id": "pyup.io-26000",
            "specs": [
                "<3.3.1"
            ],
            "v": "<3.3.1"
        }
    ],
    "plone.app.contentmenu": [
        {
            "advisory": "plone.app.contentmenu 1.1.7 fixes a potential xss attack and http://dev.plone.org/plone/ticket/8377.",
            "cve": null,
            "id": "pyup.io-26001",
            "specs": [
                "<1.1.7"
            ],
            "v": "<1.1.7"
        }
    ],
    "plone.app.contenttypes": [
        {
            "advisory": "plone.app.contenttypes 1.2.15 fixes a possible cross site scripting (XSS) attack in lead image caption.",
            "cve": null,
            "id": "pyup.io-26002",
            "specs": [
                "<1.2.15"
            ],
            "v": "<1.2.15"
        }
    ],
    "plone.app.discussion": [
        {
            "advisory": "plone.app.discussion 2.4.14 fixes a possible cross site scripting (XSS) attack on moderate comments page.",
            "cve": null,
            "id": "pyup.io-26003",
            "specs": [
                "<2.4.14"
            ],
            "v": "<2.4.14"
        },
        {
            "advisory": "plone.app.discussion 2.4.18 includes security hotfix 20160830 for redirects.",
            "cve": null,
            "id": "pyup.io-26004",
            "specs": [
                "<2.4.18"
            ],
            "v": "<2.4.18"
        }
    ],
    "plone.app.event": [
        {
            "advisory": "plone.app.event 3.0 fixes a possible cross site scripting (XSS) attack in location field",
            "cve": null,
            "id": "pyup.io-26005",
            "specs": [
                "<3.0"
            ],
            "v": "<3.0"
        }
    ],
    "plone.app.linkintegrity": [
        {
            "advisory": "plone.app.linkintegrity 1.0.2 fixed security issue due to using pickles (see CVE-2007-5741).",
            "cve": null,
            "id": "pyup.io-26006",
            "specs": [
                "<1.0.2"
            ],
            "v": "<1.0.2"
        }
    ],
    "plone.dexterity": [
        {
            "advisory": "plone.dexterity 2.3.0 fixes a security issue. Attribute access to schema fields can be protected. This worked for direct schemas, but was not implemented for permissions coming from behaviors.",
            "cve": null,
            "id": "pyup.io-26007",
            "specs": [
                "<2.3.0"
            ],
            "v": "<2.3.0"
        }
    ],
    "plone.formwidget.contenttree": [
        {
            "advisory": "plone.formwidget.contenttree 1.0a3 fixes an issues with the security validator to work properly on add views and other views using namespace traversal.",
            "cve": null,
            "id": "pyup.io-26008",
            "specs": [
                "<1.0a3"
            ],
            "v": "<1.0a3"
        }
    ],
    "plone.mockup": [
        {
            "advisory": "plone.mockup before 2.1.3 is vulnerable to a XSS attack in structure and relateditem pattern.",
            "cve": null,
            "id": "pyup.io-26009",
            "specs": [
                "<2.1.3"
            ],
            "v": "<2.1.3"
        }
    ],
    "plone.openid": [
        {
            "advisory": "plone.openid before 2.0.2 is not using the system number generator, even if it is available.",
            "cve": null,
            "id": "pyup.io-26010",
            "specs": [
                "<2.0.2"
            ],
            "v": "<2.0.2"
        }
    ],
    "plumi.app": [
        {
            "advisory": "plumi.app 4.2 includes a security hotfix related to  LinguaPlone & plone.app.discussion.",
            "cve": null,
            "id": "pyup.io-26011",
            "specs": [
                "<4.2"
            ],
            "v": "<4.2"
        },
        {
            "advisory": "plumi.app before 4.2.1 uses a insecure transitive dependency (plone<4.0.7).",
            "cve": null,
            "id": "pyup.io-26012",
            "specs": [
                "<4.2.1"
            ],
            "v": "<4.2.1"
        },
        {
            "advisory": "plumi.app 4.2.2 patches a serious security vulnerability/",
            "cve": null,
            "id": "pyup.io-26013",
            "specs": [
                "<4.2.2"
            ],
            "v": "<4.2.2"
        }
    ],
    "pmr2.oauth": [
        {
            "advisory": "pmr2.oauth before 0.4.2 is vulnerable to CSRF attacks.",
            "cve": null,
            "id": "pyup.io-26014",
            "specs": [
                "<0.4.2"
            ],
            "v": "<0.4.2"
        }
    ],
    "poorwsgi": [
        {
            "advisory": "poorwsgi 1.0.2 includes several security related enhancements related to secret key generation.",
            "cve": null,
            "id": "pyup.io-26015",
            "specs": [
                "<1.0.2"
            ],
            "v": "<1.0.2"
        }
    ],
    "pootle": [
        {
            "advisory": "pootle before 2.8.0rc5 is vulnerable to several undisclosed security vulnerabilites.",
            "cve": null,
            "id": "pyup.io-34211",
            "specs": [
                "<2.8.0rc5"
            ],
            "v": "<2.8.0rc5"
        },
        {
            "advisory": "pootle before 2.7.3 is vulnerable to XSS attacks, so everybody with Pootle 2.7.x needs to upgrade.",
            "cve": null,
            "id": "pyup.io-34201",
            "specs": [
                ">=2.6,<2.7.3"
            ],
            "v": ">=2.6,<2.7.3"
        }
    ],
    "pretaweb.healthcheck": [
        {
            "advisory": "pretaweb.healthcheck before 1.0 is vulnerable to DoS attacks.",
            "cve": null,
            "id": "pyup.io-26016",
            "specs": [
                "<1.0"
            ],
            "v": "<1.0"
        }
    ],
    "priority": [
        {
            "advisory": "priority before 1.2.0 is vulnerable to a denial of service attack whereby a remote peer can cause a user to insert an unbounded number of streams into the priority tree, eventually consuming all available memory.",
            "cve": null,
            "id": "pyup.io-26017",
            "specs": [
                "<1.2.0"
            ],
            "v": "<1.2.0"
        }
    ],
    "products.cmfcontentpanels": [
        {
            "advisory": "products.cmfcontentpanels before 1.4.1 has two not disclosed security issues.",
            "cve": null,
            "id": "pyup.io-26020",
            "specs": [
                "<1.4.1"
            ],
            "v": "<1.4.1"
        }
    ],
    "products.cmfplone": [
        {
            "advisory": "In Products.CMFPlone before 5.1b1, it's possible to access private content via str.format in through-the-web templates and scripts.",
            "cve": null,
            "id": "pyup.io-32997",
            "specs": [
                "<5.1b1"
            ],
            "v": "<5.1b1"
        }
    ],
    "products.cmfquickinstallertool": [
        {
            "advisory": "products.cmfquickinstallertool before 3.0.14 is vulnerable to several cross site scripting (XSS) attacks.",
            "cve": null,
            "id": "pyup.io-26021",
            "specs": [
                "<3.0.14"
            ],
            "v": "<3.0.14"
        }
    ],
    "products.ldapuserfolder": [
        {
            "advisory": "The authenticate function in LDAPUserFolder/LDAPUserFolder.py in zope-ldapuserfolder 2.9-1 does not verify the password for the emergency account, which allows remote attackers to gain privileges.",
            "cve": null,
            "id": "pyup.io-33148",
            "specs": [
                "<2.19"
            ],
            "v": "<2.19"
        },
        {
            "advisory": "The authenticate function in LDAPUserFolder/LDAPUserFolder.py in zope-ldapuserfolder 2.9-1 does not verify the password for the emergency account, which allows remote attackers to gain privileges.",
            "cve": "CVE-2010-2944",
            "id": "pyup.io-26023",
            "specs": [
                "==2.9"
            ],
            "v": "==2.9"
        }
    ],
    "products.ploneformgen": [
        {
            "advisory": "products.ploneformgen before 1.8.1 is vulnerable to a XSS attack that could be exploited by users with the ability to create forms.",
            "cve": null,
            "id": "pyup.io-26024",
            "specs": [
                "<1.8.1"
            ],
            "v": "<1.8.1"
        }
    ],
    "products.plonepas": [
        {
            "advisory": "The PlonePAS product 3.x before 3.9 and 3.2.x before 3.2.2, a product for Plone, does not properly handle the login form, which allows remote authenticated users to acquire the identity of an arbitrary user via unspecified vectors.",
            "cve": "CVE-2009-0662",
            "id": "pyup.io-33149",
            "specs": [
                ">3.2.2,<3.9"
            ],
            "v": ">3.2.2,<3.9"
        }
    ],
    "products.poi": [
        {
            "advisory": "products.poi before 2.2.3 allows anonymous users to see issues inside private folders.",
            "cve": null,
            "id": "pyup.io-26027",
            "specs": [
                "<2.2.3"
            ],
            "v": "<2.2.3"
        }
    ],
    "ptah": [
        {
            "advisory": "ptah before 0.3.3 is vulnerable to a undisclosed attack.",
            "cve": null,
            "id": "pyup.io-26028",
            "specs": [
                "<0.3.3"
            ],
            "v": "<0.3.3"
        }
    ],
    "pwman3": [
        {
            "advisory": "pwman3 before 0.4.0 uses cPickle.loads and cPickle.dumps.",
            "cve": null,
            "id": "pyup.io-26029",
            "specs": [
                "<0.4.0"
            ],
            "v": "<0.4.0"
        }
    ],
    "py3web": [
        {
            "advisory": "py3web before 0.21 isn't checking for bad characters in headers.",
            "cve": null,
            "id": "pyup.io-32919",
            "specs": [
                "<0.21"
            ],
            "v": "<0.21"
        }
    ],
    "pycapnp": [
        {
            "advisory": "pycapnp before 0.5.5 bundled an insecure library (libcapnp).",
            "cve": null,
            "id": "pyup.io-26030",
            "specs": [
                "<0.5.5"
            ],
            "v": "<0.5.5"
        }
    ],
    "pycares": [
        {
            "advisory": "pycares before 2.1.1 is vulnerable to CVE-2016-5180.",
            "cve": null,
            "id": "pyup.io-26031",
            "specs": [
                "<2.1.1"
            ],
            "v": "<2.1.1"
        }
    ],
    "pycrypto": [
        {
            "advisory": "In the ElGamal schemes (for both encryption and signatures), g is supposed to be the generator of the entire Z^*_p group.  However, in PyCrypto 2.5 and earlier, g is more simply the generator of a random sub-group of Z^*_p.",
            "cve": null,
            "id": "pyup.io-26032",
            "specs": [
                "<2.6"
            ],
            "v": "<2.6"
        },
        {
            "advisory": "The Crypto.Random.atfork function in PyCrypto before 2.6.1 does not properly reseed the pseudo-random number generator (PRNG) before allowing a child process to access it, which makes it easier for context-dependent attackers to obtain sensitive information by leveraging a race condition in which a child process is created and accesses the PRNG within the same rate-limit period as another process.",
            "cve": "CVE-2013-1445",
            "id": "pyup.io-33150",
            "specs": [
                "<2.6.1"
            ],
            "v": "<2.6.1"
        }
    ],
    "pydal": [
        {
            "advisory": "pydal before 15.02.27 has a security flaw which could lead to db password storing in cache.",
            "cve": null,
            "id": "pyup.io-33022",
            "specs": [
                "<15.02.27"
            ],
            "v": "<15.02.27"
        }
    ],
    "pyftpdlib": [
        {
            "advisory": "pyftpdlib before 0.3.0 has a path traversal vulnerability in case of symbolic links escaping user's home directory.",
            "cve": null,
            "id": "pyup.io-26036",
            "specs": [
                "<0.3.0"
            ],
            "v": "<0.3.0"
        },
        {
            "advisory": "Race condition in the FTPHandler class in ftpserver.py in pyftpdlib before 0.5.1 allows remote attackers to cause a denial of service (daemon outage) by establishing and then immediately closing a TCP connection, leading to the accept function having an unexpected return value of None, a different vulnerability than CVE-2010-3494.",
            "cve": "CVE-2009-5010",
            "id": "pyup.io-26037",
            "specs": [
                "<0.5.1"
            ],
            "v": "<0.5.1"
        },
        {
            "advisory": "Race condition in the FTPHandler class in ftpserver.py in pyftpdlib before 0.5.2 allows remote attackers to cause a denial of service (daemon outage) by establishing and then immediately closing a TCP connection, leading to the accept function having an unexpected value of None for the address, or an ECONNABORTED, EAGAIN, or EWOULDBLOCK error, a related issue to CVE-2010-3492.",
            "cve": "CVE-2010-3494",
            "id": "pyup.io-26038",
            "specs": [
                "<0.5.2"
            ],
            "v": "<0.5.2"
        }
    ],
    "pygresql": [
        {
            "advisory": "The pygresql module 3.8.1 and 4.0 for Python does not properly support the PQescapeStringConn function, which might allow remote attackers to leverage escaping issues involving multibyte character encodings.",
            "cve": "CVE-2009-2940",
            "id": "pyup.io-26039",
            "specs": [
                "<4.0"
            ],
            "v": "<4.0"
        }
    ],
    "pyjwt": [
        {
            "advisory": "pyjwt before 1.0.0  allows to bypass signature verification by setting the alg header to None.",
            "cve": null,
            "id": "pyup.io-26040",
            "specs": [
                "<1.0.0"
            ],
            "v": "<1.0.0"
        }
    ],
    "pyldap": [
        {
            "advisory": "pyldap before 2.0.0pre05 is using an insecure transitive dependency (ldapurl).",
            "cve": null,
            "id": "pyup.io-26041",
            "specs": [
                "<2.0.0pre05"
            ],
            "v": "<2.0.0pre05"
        }
    ],
    "pylons": [
        {
            "advisory": "pylons before 0.9.6.1 allows to access private controller methods to be accessed from the outside.",
            "cve": null,
            "id": "pyup.io-26042",
            "specs": [
                "<0.9.6.1"
            ],
            "v": "<0.9.6.1"
        },
        {
            "advisory": "pylons before 0.9.7 is vulnerable to a XSS attack on the default error page.",
            "cve": null,
            "id": "pyup.io-26043",
            "specs": [
                "<0.9.7"
            ],
            "v": "<0.9.7"
        },
        {
            "advisory": "pylons before 1.0.1RC1 is vulnerable to timing attacks on secure cookies.",
            "cve": null,
            "id": "pyup.io-26044",
            "specs": [
                "<1.0.1RC1"
            ],
            "v": "<1.0.1RC1"
        },
        {
            "advisory": "pylons before 1.0.1rc1 is vulnerable to cookie timing attacks.",
            "cve": null,
            "id": "pyup.io-26045",
            "specs": [
                "<1.0.1rc1"
            ],
            "v": "<1.0.1rc1"
        },
        {
            "advisory": "pylons before 1.0.2 includes \"Post Traceback\" which is a possible XSS vector.",
            "cve": null,
            "id": "pyup.io-26046",
            "specs": [
                "<1.0.2"
            ],
            "v": "<1.0.2"
        }
    ],
    "pymemcache": [
        {
            "advisory": "pymemcache before 1.3.6 isn't sanitizing key inputs.",
            "cve": null,
            "id": "pyup.io-26047",
            "specs": [
                "<1.3.6"
            ],
            "v": "<1.3.6"
        }
    ],
    "pypicloud": [
        {
            "advisory": "pypicloud before 0.2.2 is vulnerable to a undisclosed attack.",
            "cve": null,
            "id": "pyup.io-26048",
            "specs": [
                "<0.2.2"
            ],
            "v": "<0.2.2"
        }
    ],
    "pypiserver": [
        {
            "advisory": "pypiserver before 1.1.7 is vulnerable to XSS attacks.",
            "cve": null,
            "id": "pyup.io-26049",
            "specs": [
                "<1.1.7"
            ],
            "v": "<1.1.7"
        }
    ],
    "pyrad": [
        {
            "advisory": "pyrad before 0.6 isn't handling timeouts in client module correctly, leading to a potential denial of service.",
            "cve": null,
            "id": "pyup.io-26050",
            "specs": [
                "<0.6"
            ],
            "v": "<0.6"
        }
    ],
    "pyramid": [
        {
            "advisory": "pyramid before 1.6a2 isn't sanitising JSONP callbacks correctly, see CVE-2014-4671.",
            "cve": null,
            "id": "pyup.io-32204",
            "specs": [
                "<1.6a2"
            ],
            "v": "<1.6a2"
        }
    ],
    "pyramid-odesk": [
        {
            "advisory": "pyramid-odesk before 1.1.2 performs logins and logouts through GET and is vulnerable to CSRF attacks.",
            "cve": null,
            "id": "pyup.io-26051",
            "specs": [
                "<1.1.2"
            ],
            "v": "<1.1.2"
        }
    ],
    "pyramid-weblayer": [
        {
            "advisory": "pyramid-weblayer before 0.12 does not protect AJAX requests through the CSRF machinery.",
            "cve": null,
            "id": "pyup.io-26052",
            "specs": [
                "<0.12"
            ],
            "v": "<0.12"
        }
    ],
    "pysandbox": [
        {
            "advisory": "pysandbox before 1.0.2 allows access to several dict methods.",
            "cve": null,
            "id": "pyup.io-26053",
            "specs": [
                "<1.0.2"
            ],
            "v": "<1.0.2"
        },
        {
            "advisory": "pysandbox before 1.0.3 allows access to dict.__init__().",
            "cve": null,
            "id": "pyup.io-26054",
            "specs": [
                "<1.0.3"
            ],
            "v": "<1.0.3"
        },
        {
            "advisory": "pysandbox before 1.5 has several security vulnerabilities.",
            "cve": null,
            "id": "pyup.io-26055",
            "specs": [
                "<1.5"
            ],
            "v": "<1.5"
        },
        {
            "advisory": "pysandbox before 1.6 isn't setting __builtins__ to readonly when execute() is used.",
            "cve": null,
            "id": "pyup.io-26056",
            "specs": [
                "<1.6"
            ],
            "v": "<1.6"
        }
    ],
    "pyshop": [
        {
            "advisory": "pyshop before 0.7.1 uses HTTP to retrieve packages from the PyPI repository, and does not perform integrity checks on package contents, which allows man-in-the-middle attackers to execute arbitrary code via a crafted response to a download operation.",
            "cve": "CVE-2013-1630",
            "id": "pyup.io-26057",
            "specs": [
                "<0.7.1"
            ],
            "v": "<0.7.1"
        }
    ],
    "pytest-devpi-server": [
        {
            "advisory": "pytest-devpi-server before 1.1.0  uses a subshell in workspace.run.",
            "cve": null,
            "id": "pyup.io-26059",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "pytest-git": [
        {
            "advisory": "pytest-git before 1.1.0  uses a subshell in workspace.run.",
            "cve": null,
            "id": "pyup.io-26060",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "pytest-profiling": [
        {
            "advisory": "pytest-profiling before 1.1.0  uses a subshell in workspace.run.",
            "cve": null,
            "id": "pyup.io-26061",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "pytest-qt-app": [
        {
            "advisory": "pytest-qt-app before 1.1.0  uses a subshell in workspace.run.",
            "cve": null,
            "id": "pyup.io-26062",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "pytest-server-fixtures": [
        {
            "advisory": "pytest-server-fixtures before 1.1.0  uses a subshell in workspace.run.",
            "cve": null,
            "id": "pyup.io-26063",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "pytest-shutil": [
        {
            "advisory": "pytest-shutil before 1.1.0  uses a subshell in workspace.run.",
            "cve": null,
            "id": "pyup.io-26064",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "pytest-verbose-parametrize": [
        {
            "advisory": "pytest-verbose-parametrize before 1.1.0 uses a subshell in workspace.run.",
            "cve": null,
            "id": "pyup.io-26065",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "python": [
        {
            "advisory": "Python 2.5.2 and earlier allows context-dependent attackers to execute arbitrary code via multiple vectors that cause a negative size value to be provided to the PyString_FromStringAndSize function, which allocates less memory than expected when assert() is disabled and triggers a buffer overflow.",
            "cve": "CVE-2008-1887",
            "id": "pyup.io-33153",
            "specs": [
                "<2.5.2"
            ],
            "v": "<2.5.2"
        },
        {
            "advisory": "Integer signedness error in the zlib extension module in Python 2.5.2 and earlier allows remote attackers to execute arbitrary code via a negative signed integer, which triggers insufficient memory allocation and a buffer overflow.",
            "cve": "CVE-2008-1721",
            "id": "pyup.io-33152",
            "specs": [
                "<2.5.2"
            ],
            "v": "<2.5.2"
        },
        {
            "advisory": "Multiple integer overflows in imageop.c in Python before 2.5.3 allow context-dependent attackers to cause a denial of service (crash) and possibly execute arbitrary code via crafted images that trigger heap-based buffer overflows.  NOTE: this issue is due to an incomplete fix for CVE-2007-4965.",
            "cve": "CVE-2008-1679",
            "id": "pyup.io-33151",
            "specs": [
                "<2.5.3"
            ],
            "v": "<2.5.3"
        },
        {
            "advisory": "Integer overflow in the get_data function in zipimport.c in CPython (aka Python) before 2.7.12, 3.x before 3.4.5, and 3.5.x before 3.5.2 allows remote attackers to have unspecified impact via a negative data size value, which triggers a heap-based buffer overflow.",
            "cve": "CVE-2016-5636",
            "id": "pyup.io-33155",
            "specs": [
                "<2.7.12",
                ">=3.0,<3.4.5",
                ">=3.5,<3.5.2"
            ],
            "v": "<2.7.12,>=3.0,<3.4.5,>=3.5,<3.5.2"
        },
        {
            "advisory": "The smtplib library in CPython (aka Python) before 2.7.12, 3.x before 3.4.5, and 3.5.x before 3.5.2 does not return an error when StartTLS fails, which might allow man-in-the-middle attackers to bypass the TLS protections by leveraging a network position between the client and the registry to block the StartTLS command, aka a \"StartTLS stripping attack.\"",
            "cve": "CVE-2016-0772",
            "id": "pyup.io-33154",
            "specs": [
                "<2.7.12",
                ">=3.0,<3.4.5",
                ">=3.5,<3.5.2"
            ],
            "v": "<2.7.12,>=3.0,<3.4.5,>=3.5,<3.5.2"
        },
        {
            "advisory": "The list_directory function in Lib/SimpleHTTPServer.py in SimpleHTTPServer in Python before 2.5.6c1, 2.6.x before 2.6.7 rc2, and 2.7.x before 2.7.2 does not place a charset parameter in the Content-Type HTTP header, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks against Internet Explorer 7 via UTF-7 encoding.",
            "cve": "CVE-2011-4940",
            "id": "pyup.io-26069",
            "specs": [
                ">=2.6,<2.6.7",
                "<2.5.6c1",
                ">=2.7,<2.7.2"
            ],
            "v": ">=2.6,<2.6.7,<2.5.6c1,>=2.7,<2.7.2"
        },
        {
            "advisory": "Python 2.6 through 3.2 creates ~/.pypirc with world-readable permissions before changing them after data has been written, which introduces a race condition that allows local users to obtain a username and password by reading this file.",
            "cve": "CVE-2011-4944",
            "id": "pyup.io-26074",
            "specs": [
                ">=2.6,<3.3"
            ],
            "v": ">=2.6,<3.3"
        },
        {
            "advisory": "Python before 2.6.8, 2.7.x before 2.7.3, 3.x before 3.1.5, and 3.2.x before 3.2.3 computes hash values without restricting the ability to trigger hash collisions predictably, which allows context-dependent attackers to cause a denial of service (CPU consumption) via crafted input to an application that maintains a hash table.",
            "cve": "CVE-2012-1150",
            "id": "pyup.io-26071",
            "specs": [
                ">=2.7,<2.7.3",
                ">=3.0,<3.1.5",
                ">=3.2,<3.2.3",
                "<2.6.8"
            ],
            "v": ">=2.7,<2.7.3,>=3.0,<3.1.5,>=3.2,<3.2.3,<2.6.8"
        },
        {
            "advisory": "SimpleXMLRPCServer.py in SimpleXMLRPCServer in Python before 2.6.8, 2.7.x before 2.7.3, 3.x before 3.1.5, and 3.2.x before 3.2.3 allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via an XML-RPC POST request that contains a smaller amount of data than specified by the Content-Length header.",
            "cve": "CVE-2012-0845",
            "id": "pyup.io-26070",
            "specs": [
                ">=2.7,<2.7.3",
                ">=3.2,<3.2.3",
                ">=3.1,<3.1.5",
                "<2.6.8"
            ],
            "v": ">=2.7,<2.7.3,>=3.2,<3.2.3,>=3.1,<3.1.5,<2.6.8"
        },
        {
            "advisory": "The utf-16 decoder in Python 3.1 through 3.3 does not update the aligned_end variable after calling the unicode_decode_call_errorhandler function, which allows remote attackers to obtain sensitive information (process memory) or cause a denial of service (memory corruption and crash) via unspecified vectors.",
            "cve": "CVE-2012-2135",
            "id": "pyup.io-26076",
            "specs": [
                ">=3.1,<3.4"
            ],
            "v": ">=3.1,<3.4"
        },
        {
            "advisory": "The urllib and urllib2 modules in Python 2.x before 2.7.2 and 3.x before 3.2.1 process Location headers that specify redirection to file: URLs, which makes it easier for remote attackers to obtain sensitive information or cause a denial of service (resource consumption) via a crafted URL, as demonstrated by the file:///etc/passwd and file:///dev/zero URLs.",
            "cve": "CVE-2011-1521",
            "id": "pyup.io-26075",
            "specs": [
                ">=3.2,<3.2.1",
                ">=2.7,<2.7.2"
            ],
            "v": ">=3.2,<3.2.1,>=2.7,<2.7.2"
        }
    ],
    "python-augeas": [
        {
            "advisory": "python-augeas before 1.0.0 is vulnerable to cross-mountpoint and symlink attacks.",
            "cve": null,
            "id": "pyup.io-26077",
            "specs": [
                "<1.0.0"
            ],
            "v": "<1.0.0"
        }
    ],
    "python-cjson": [
        {
            "advisory": "Buffer overflow in Dan Pascu python-cjson 1.0.5, when UCS-4 encoding is enabled, allows context-dependent attackers to cause a denial of service (application crash) or possibly have unspecified other impact via vectors involving crafted Unicode input to the cjson.encode function.",
            "cve": "CVE-2010-1666",
            "id": "pyup.io-33161",
            "specs": [
                "<1.0.5"
            ],
            "v": "<1.0.5"
        },
        {
            "advisory": "Dan Pascu python-cjson 1.0.5 does not properly handle a ['/'] argument to cjson.encode, which makes it easier for remote attackers to conduct certain cross-site scripting (XSS) attacks involving Firefox and the end tag of a SCRIPT element.",
            "cve": "CVE-2009-4924",
            "id": "pyup.io-33160",
            "specs": [
                "<1.0.5"
            ],
            "v": "<1.0.5"
        }
    ],
    "python-dbusmock": [
        {
            "advisory": "python-dbusmock before 0.15.1 is vulnerable to a tempfile attack. When loading a template from an arbitrary file through the AddTemplate() D-Bus method call or DBusTestCase.spawn_server_template() Python method, don't create or use Python's *.pyc cached files. By tricking a user into loading a template from a world-writable directory like /tmp, an attacker could run arbitrary code with the user's privileges by putting a crafted .pyc file into that directory. Note that this is highly unlikely to actually appear in practice as custom dbusmock templates are usually shipped in project directories, not directly in world-writable directories.",
            "cve": null,
            "id": "pyup.io-26080",
            "specs": [
                "<0.15.1"
            ],
            "v": "<0.15.1"
        }
    ],
    "python-docx": [
        {
            "advisory": "python-docx before 0.8.6 allows context-dependent attackers to conduct XML External Entity (XXE) attacks via a crafted document.",
            "cve": "CVE-2016-5851",
            "id": "pyup.io-26081",
            "specs": [
                "<0.8.6"
            ],
            "v": "<0.8.6"
        }
    ],
    "python-keystoneclient": [
        {
            "advisory": "The s3_token middleware in OpenStack keystonemiddleware before 1.6.0 and python-keystoneclient before 1.4.0 disables certification verification when the \"insecure\" option is set in a paste configuration (paste.ini) file regardless of the value, which allows remote attackers to conduct man-in-the-middle attacks via a crafted certificate, a different vulnerability than CVE-2014-7144.",
            "cve": "CVE-2015-1852",
            "id": "pyup.io-26082",
            "specs": [
                "<1.4.0"
            ],
            "v": "<1.4.0"
        },
        {
            "advisory": "The identity service in OpenStack Identity (Keystone) before 2015.1.3 (Kilo) and 8.0.x before 8.0.2 (Liberty) and keystonemiddleware (formerly python-keystoneclient) before 1.5.4 (Kilo) and Liberty before 2.3.3 does not properly invalidate authorization tokens when using the PKI or PKIZ token providers, which allows remote authenticated users to bypass intended access restrictions and gain access to cloud resources by manipulating byte fields within a revoked token.",
            "cve": "CVE-2015-7546",
            "id": "pyup.io-26083",
            "specs": [
                "<1.5.4",
                ">=2.0,<2.3.3"
            ],
            "v": "<1.5.4,>=2.0,<2.3.3"
        }
    ],
    "python-libtorrent": [
        {
            "advisory": "python-libtorrent before 1.0.6 has several undisclosed vulnerabilities related to uTP.",
            "cve": null,
            "id": "pyup.io-26084",
            "specs": [
                "<1.0.6"
            ],
            "v": "<1.0.6"
        }
    ],
    "python-muranoclient": [
        {
            "advisory": "OpenStack Murano before 1.0.3 (liberty) and 2.x before 2.0.1 (mitaka), Murano-dashboard before 1.0.3 (liberty) and 2.x before 2.0.1 (mitaka), and python-muranoclient before 0.7.3 (liberty) and 0.8.x before 0.8.5 (mitaka) improperly use loaders inherited from yaml.Loader when parsing MuranoPL and UI files, which allows remote attackers to create arbitrary Python objects and execute arbitrary code via crafted extended YAML tags in UI definitions in packages.",
            "cve": "CVE-2016-4972",
            "id": "pyup.io-26085",
            "specs": [
                "<0.7.3",
                ">=0.8,<0.8.5"
            ],
            "v": "<0.7.3,>=0.8,<0.8.5"
        }
    ],
    "python-openflow": [
        {
            "advisory": "python-openflow 2016.1.a1 fixes a undisclosed security vulnerability.",
            "cve": null,
            "id": "pyup.io-33282",
            "specs": [
                "<2016.1.a1"
            ],
            "v": "<2016.1.a1"
        }
    ],
    "python-otr": [
        {
            "advisory": "python-otr before 1.1.0 is vulnerable to man-in-the-middle attacks as it allows to restart the protocol.",
            "cve": null,
            "id": "pyup.io-26086",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "python-saml": [
        {
            "advisory": "python-saml before 2.1.6 is vulnerable to Signature Wrapping attacks.",
            "cve": null,
            "id": "pyup.io-26087",
            "specs": [
                "<2.1.6"
            ],
            "v": "<2.1.6"
        },
        {
            "advisory": "python-saml before 2.1.9 is vulnerable to Signature Wrapping attacks.",
            "cve": null,
            "id": "pyup.io-26088",
            "specs": [
                "<2.1.9"
            ],
            "v": "<2.1.9"
        }
    ],
    "python3-ldap": [
        {
            "advisory": "python3-ldap before 0.9.5.4 has a security issue in lazy connections.",
            "cve": null,
            "id": "pyup.io-26089",
            "specs": [
                "<0.9.5.4"
            ],
            "v": "<0.9.5.4"
        }
    ],
    "python3-saml": [
        {
            "advisory": "python3-saml before 1.1.4 is vulnerable to signature wrapping attacks.",
            "cve": null,
            "id": "pyup.io-26090",
            "specs": [
                "<1.1.4"
            ],
            "v": "<1.1.4"
        },
        {
            "advisory": "python3-saml 1.2.0 introduces several undisclosed security improvements.",
            "cve": null,
            "id": "pyup.io-26091",
            "specs": [
                "<1.2.0"
            ],
            "v": "<1.2.0"
        }
    ],
    "pyupdater": [
        {
            "advisory": "pyupdater before 0.20.0 is vulnerable to session fixation attacks and potentially cookie stealing.",
            "cve": null,
            "id": "pyup.io-26092",
            "specs": [
                "<0.20.0"
            ],
            "v": "<0.20.0"
        }
    ],
    "pyvisa": [
        {
            "advisory": "pyvisa before 0.9 has a undisclosed security vulnerability in visa.py.",
            "cve": null,
            "id": "pyup.io-26093",
            "specs": [
                "<0.9"
            ],
            "v": "<0.9"
        }
    ],
    "pywebsite": [
        {
            "advisory": "pywebsite 0.1.14pre's signed_url  method is now (more) immune to VS timing attacks.",
            "cve": null,
            "id": "pyup.io-26094",
            "specs": [
                "<0.1.14pre"
            ],
            "v": "<0.1.14pre"
        },
        {
            "advisory": "pywebsite before 0.1.9pre is vulnerable to length extension attacks, and value equivalence attacks.",
            "cve": null,
            "id": "pyup.io-26095",
            "specs": [
                "<0.1.9pre"
            ],
            "v": "<0.1.9pre"
        }
    ],
    "pyxmlsecurity": [
        {
            "advisory": "pyxmlsecurity 0.9 protects against wrapping attacks.",
            "cve": null,
            "id": "pyup.io-26096",
            "specs": [
                "<0.9"
            ],
            "v": "<0.9"
        }
    ],
    "qi.jabberhelpdesk": [
        {
            "advisory": "qi.jabberhelpdesk before 0.30 has several undisclosed vulnerabilities in xml-rpc calls.",
            "cve": null,
            "id": "pyup.io-26097",
            "specs": [
                "<0.30"
            ],
            "v": "<0.30"
        }
    ],
    "quintagroup.seoptimizer": [
        {
            "advisory": "quintagroup.seoptimizer before 3.0.4 has a security issue for SEO Property action and view.",
            "cve": null,
            "id": "pyup.io-26098",
            "specs": [
                "<3.0.4"
            ],
            "v": "<3.0.4"
        }
    ],
    "radicale": [
        {
            "advisory": "radicale before 1.1.2 is vulnerable to bruteforce attacks when using the htpasswd authentication method.",
            "cve": null,
            "id": "pyup.io-33323",
            "specs": [
                "<1.1.2"
            ],
            "v": "<1.1.2"
        }
    ],
    "rauth": [
        {
            "advisory": "rauth before 0.7.0 isn't using a secure random number generator.",
            "cve": null,
            "id": "pyup.io-26099",
            "specs": [
                "<0.7.0"
            ],
            "v": "<0.7.0"
        }
    ],
    "requests": [
        {
            "advisory": "requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect.\r\n  Fix CVE-2014-1829 and CVE-2014-1830 respectively",
            "cve": null,
            "id": "pyup.io-26101",
            "specs": [
                "<2.3.0"
            ],
            "v": "<2.3.0"
        },
        {
            "advisory": "requests 2.6.0 fixes handling of cookies on redirect. Previously a cookie without a host value set would use the hostname for the redirected URL exposing requests users to session fixation attacks and potentially cookie stealing.",
            "cve": null,
            "id": "pyup.io-26102",
            "specs": [
                "<2.6.0"
            ],
            "v": "<2.6.0"
        },
        {
            "advisory": "The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.",
            "cve": "CVE-2015-2296",
            "id": "pyup.io-26103",
            "specs": [
                ">=2.1,<=2.5.3"
            ],
            "v": ">=2.1,<=2.5.3"
        }
    ],
    "requests-kerberos": [
        {
            "advisory": "requests-kerberos before 0.6 isn't handling mutual authentication correctly.",
            "cve": null,
            "id": "pyup.io-26104",
            "specs": [
                "<0.6"
            ],
            "v": "<0.6"
        }
    ],
    "restauth": [
        {
            "advisory": "restauth before 0.6.3 did not verify passwords for services when using SECURE_CACHE = True.",
            "cve": null,
            "id": "pyup.io-26105",
            "specs": [
                "<0.6.3"
            ],
            "v": "<0.6.3"
        }
    ],
    "roundup": [
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in cgi/client.py in Roundup before 1.4.20 allows remote attackers to inject arbitrary web script or HTML via the @action parameter to support/issue1.",
            "cve": "CVE-2012-6131",
            "id": "pyup.io-33163",
            "specs": [
                "<1.4.20"
            ],
            "v": "<1.4.20"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in the history display in Roundup before 1.4.20 allows remote attackers to inject arbitrary web script or HTML via a username, related to generating a link.",
            "cve": "CVE-2012-6130",
            "id": "pyup.io-33162",
            "specs": [
                "<1.4.20"
            ],
            "v": "<1.4.20"
        }
    ],
    "rpc4django": [
        {
            "advisory": "rpc4django before 0.2.3 is vulnerable to billion laughs denial of service attack.",
            "cve": null,
            "id": "pyup.io-26108",
            "specs": [
                "<0.2.3"
            ],
            "v": "<0.2.3"
        }
    ],
    "rsa": [
        {
            "advisory": "rsa 2.0 includes several undisclosed security improvements.",
            "cve": null,
            "id": "pyup.io-26109",
            "specs": [
                "<2.0"
            ],
            "v": "<2.0"
        },
        {
            "advisory": "The verify function in the RSA package for Python (Python-RSA) before 3.3 allows attackers to spoof signatures with a small public exponent via crafted signature padding, aka a BERserk attack.",
            "cve": "CVE-2016-1494",
            "id": "pyup.io-33164",
            "specs": [
                "<3.3"
            ],
            "v": "<3.3"
        },
        {
            "advisory": "rsa before 3.4 has a undisclosed side-channel vulnerability.",
            "cve": null,
            "id": "pyup.io-26112",
            "specs": [
                "<3.4"
            ],
            "v": "<3.4"
        }
    ],
    "rsanic": [
        {
            "advisory": "rsanic before 0.2.2 is vulnerable to XSS attacks.",
            "cve": null,
            "id": "pyup.io-33007",
            "specs": [
                "<0.2.2"
            ],
            "v": "<0.2.2"
        }
    ],
    "rtv": [
        {
            "advisory": "rtv before 1.12.1 has a security vulnerability where malicious URLs could inject python code.",
            "cve": null,
            "id": "pyup.io-26113",
            "specs": [
                "<1.12.1"
            ],
            "v": "<1.12.1"
        }
    ],
    "ruffruffs": [
        {
            "advisory": "ruffruffs 2.6.0 fixes handling of cookies on redirect. Previously a cookie without a host value set would use the hostname for the redirected URL exposing requests users to session fixation attacks and potentially cookie stealing.",
            "cve": null,
            "id": "pyup.io-26116",
            "specs": [
                "<2.6.0"
            ],
            "v": "<2.6.0"
        }
    ],
    "sentry": [
        {
            "advisory": "sentry before 0.12.2 has a security flaw where exponential numbers in specially crafted params could cause a CPU attack.",
            "cve": null,
            "id": "pyup.io-33030",
            "specs": [
                "<0.12.2"
            ],
            "v": "<0.12.2"
        },
        {
            "advisory": "sentry before 6.1.1 is vulnerable to a remote code execution exploit.",
            "cve": null,
            "id": "pyup.io-26117",
            "specs": [
                "<6.1.1"
            ],
            "v": "<6.1.1"
        },
        {
            "advisory": "sentry before 7.4.0 has a XSS vulnerability with tag values not being escaped (on the group details page).",
            "cve": null,
            "id": "pyup.io-26118",
            "specs": [
                "<7.4.0"
            ],
            "v": "<7.4.0"
        },
        {
            "advisory": "sentry before 7.5.5 is vulnerable to a XSS attack in tags and the stream filter box.",
            "cve": null,
            "id": "pyup.io-26119",
            "specs": [
                "<7.5.5"
            ],
            "v": "<7.5.5"
        },
        {
            "advisory": "sentry before 7.6.1 is vulnerable to a XSS attack in tags and the stream filter box.",
            "cve": null,
            "id": "pyup.io-26120",
            "specs": [
                "<7.6.1"
            ],
            "v": "<7.6.1"
        },
        {
            "advisory": "sentry before 8.1.4 has a security issue where a superuser had the ability to inject data into audit logs through the admin UI.",
            "cve": null,
            "id": "pyup.io-26121",
            "specs": [
                "<8.1.4"
            ],
            "v": "<8.1.4"
        },
        {
            "advisory": "sentry before 8.1.5 if being run in multi-organization mode, it was possible for a user to craft a URL which would allow them to view membership details of other users.",
            "cve": null,
            "id": "pyup.io-26122",
            "specs": [
                "<8.1.5"
            ],
            "v": "<8.1.5"
        },
        {
            "advisory": "sentry before 8.2.2 has a security issue where a superuser had the ability to inject data into audit logs through the admin UI.",
            "cve": null,
            "id": "pyup.io-26123",
            "specs": [
                "<8.2.2"
            ],
            "v": "<8.2.2"
        },
        {
            "advisory": "sentry before 8.2.4 if being run in multi-organization mode, it was possible for a user to craft a URL which would allow them to view membership details of other users.",
            "cve": null,
            "id": "pyup.io-26124",
            "specs": [
                "<8.2.4"
            ],
            "v": "<8.2.4"
        },
        {
            "advisory": "sentry before 8.2.5 is vulnerable to an attack which allows API keys more permission than granted within the organization.",
            "cve": null,
            "id": "pyup.io-26125",
            "specs": [
                "<8.2.5"
            ],
            "v": "<8.2.5"
        },
        {
            "advisory": "sentry before 8.3.3 is vulnerable to an attack which allows API keys more permission than granted within the organization.",
            "cve": null,
            "id": "pyup.io-26126",
            "specs": [
                "<8.3.3"
            ],
            "v": "<8.3.3"
        },
        {
            "advisory": "sentry 8.8 includes various security fixes related to CSRF and XSS.",
            "cve": null,
            "id": "pyup.io-26127",
            "specs": [
                "<8.8"
            ],
            "v": "<8.8"
        }
    ],
    "sesame": [
        {
            "advisory": "sesame 0.3.0 is using a secure extraction/decryption using tempfile.",
            "cve": null,
            "id": "pyup.io-26128",
            "specs": [
                "<0.3.0"
            ],
            "v": "<0.3.0"
        }
    ],
    "setuptools": [
        {
            "advisory": "setuptools 0.9.5 fixes a security vulnerability in SSL certificate validation.",
            "cve": null,
            "id": "pyup.io-26129",
            "specs": [
                "<0.9.5"
            ],
            "v": "<0.9.5"
        },
        {
            "advisory": "setuptools before 1.3 has a security vulnerability in SSL match_hostname check as reported in Python 17997.",
            "cve": null,
            "id": "pyup.io-26132",
            "specs": [
                "<1.3"
            ],
            "v": "<1.3"
        },
        {
            "advisory": "setuptools 3.0 avoids the potential security vulnerabilities presented by use of tar archives in ez_setup.py. It also leverages the security features added to ZipFile.extract in Python 2.7.4.",
            "cve": null,
            "id": "pyup.io-26133",
            "specs": [
                "<3.0"
            ],
            "v": "<3.0"
        }
    ],
    "sevabot": [
        {
            "advisory": "sevabot before 1.1 allows arbitrary commands to be executed.",
            "cve": null,
            "id": "pyup.io-26134",
            "specs": [
                "<1.1"
            ],
            "v": "<1.1"
        }
    ],
    "sftp-cloudfs": [
        {
            "advisory": "sftp-cloudfs before 0.13.1 is using an insecure transitive dependency (ftp-cloudfs<=0.26.1).",
            "cve": null,
            "id": "pyup.io-26135",
            "specs": [
                "<0.13.1"
            ],
            "v": "<0.13.1"
        }
    ],
    "soapfish": [
        {
            "advisory": "soapfish before 0.6.0 has a potential security issue - pattern restrictions were not applied correctly.",
            "cve": null,
            "id": "pyup.io-26136",
            "specs": [
                "<0.6.0"
            ],
            "v": "<0.6.0"
        }
    ],
    "soappy": [
        {
            "advisory": "soappy before 0.12.6 allows remote attackers to read arbitrary files via a SOAP request containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",
            "cve": null,
            "id": "pyup.io-26137",
            "specs": [
                "<0.12.6"
            ],
            "v": "<0.12.6"
        }
    ],
    "soappy-py3": [
        {
            "advisory": "soappy-py3 before 0.12.6 allows remote attackers to read arbitrary files via a SOAP request containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",
            "cve": null,
            "id": "pyup.io-26138",
            "specs": [
                "<0.12.6"
            ],
            "v": "<0.12.6"
        }
    ],
    "sopel": [
        {
            "advisory": "sopel before 4.4.0 has a security issue involving improperly named channel logs.",
            "cve": null,
            "id": "pyup.io-26139",
            "specs": [
                "<4.4.0"
            ],
            "v": "<4.4.0"
        }
    ],
    "splash": [
        {
            "advisory": "splash before 2.0.1 is vulnerable to a XSS attack in HTTP UI.",
            "cve": null,
            "id": "pyup.io-26140",
            "specs": [
                "<2.0.1"
            ],
            "v": "<2.0.1"
        },
        {
            "advisory": "In splash before 2.3.2 xvfb binds to ports in the range 6000-6200 on all available interfaces.",
            "cve": null,
            "id": "pyup.io-33045",
            "specs": [
                "<2.3.2"
            ],
            "v": "<2.3.2"
        }
    ],
    "spud": [
        {
            "advisory": "spud before 0.8 doesn't check permissions. Anybody could edit photos.",
            "cve": null,
            "id": "pyup.io-26141",
            "specs": [
                "<0.8"
            ],
            "v": "<0.8"
        }
    ],
    "starcluster": [
        {
            "advisory": "starcluster before 0.95.3 opens up the VPC to the internet by default which is a security risk and it requires a special VPC configuration (internet gateway attached to the VPC and a route to the gateway with dest CIDR block 0.0.0.0/0 associated with the VPC subnet).  Configuring this automatically (which does not happen currently) would be a security risk and without this configuration StarCluster cannot connect to the VPC nodes even though they've been assigned a public IP.",
            "cve": null,
            "id": "pyup.io-26142",
            "specs": [
                "<0.95.3"
            ],
            "v": "<0.95.3"
        }
    ],
    "stargate": [
        {
            "advisory": "stargate before 0.4 has several undisclosed security vulnerabilities.",
            "cve": null,
            "id": "pyup.io-26143",
            "specs": [
                "<0.4"
            ],
            "v": "<0.4"
        }
    ],
    "stormpath": [
        {
            "advisory": "stormpath before 2.0.5 is using an insecure transitive dependency (pyjwt).",
            "cve": null,
            "id": "pyup.io-26144",
            "specs": [
                "<2.0.5"
            ],
            "v": "<2.0.5"
        },
        {
            "advisory": "stormpath before 2.5.0 doesn't validate JWT correctly.",
            "cve": null,
            "id": "pyup.io-26145",
            "specs": [
                "<2.5.0"
            ],
            "v": "<2.5.0"
        }
    ],
    "stormpath-sdk": [
        {
            "advisory": "stormpath-sdk before 2.5.0 doesn't validate JWT correctly.",
            "cve": null,
            "id": "pyup.io-26146",
            "specs": [
                "<2.5.0"
            ],
            "v": "<2.5.0"
        }
    ],
    "superset": [
        {
            "advisory": "superset before 0.11.0 is vulnerable to a XSS attack on FAB list views.",
            "cve": null,
            "id": "pyup.io-26147",
            "specs": [
                "<0.11.0"
            ],
            "v": "<0.11.0"
        }
    ],
    "superset-hand": [
        {
            "advisory": "superset-hand before 0.11.0 is vulnerable to a XSS attack on FAB list views.",
            "cve": null,
            "id": "pyup.io-26148",
            "specs": [
                "<0.11.0"
            ],
            "v": "<0.11.0"
        }
    ],
    "superset-tddv": [
        {
            "advisory": "superset-tddv before 0.11.0 is vulnerable to a XSS attack on FAB list views.",
            "cve": null,
            "id": "pyup.io-26149",
            "specs": [
                "<0.11.0"
            ],
            "v": "<0.11.0"
        }
    ],
    "swauth": [
        {
            "advisory": "swauth before 1.1.0 has multiple undisclosed security vulnerabilities.",
            "cve": null,
            "id": "pyup.io-26150",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "swift": [
        {
            "advisory": "swift before 2.6.0 is vulnerable to an attack where an unfinished read of a large object would leak a socket file descriptor and a small amount of memory. (CVE-2016-0738)",
            "cve": null,
            "id": "pyup.io-26151",
            "specs": [
                "<2.6.0"
            ],
            "v": "<2.6.0"
        }
    ],
    "tahoe-lafs": [
        {
            "advisory": "tahoe-lafs before 1.2.0 doesn't make the immutable-file \"ciphertext hash tree\" mandatory.",
            "cve": null,
            "id": "pyup.io-26152",
            "specs": [
                "<1.2.0"
            ],
            "v": "<1.2.0"
        },
        {
            "advisory": "tahoe-lafs before 1.4.1 is vulnerable to timing attacks due to our use of strcmp against the write-enabler.",
            "cve": null,
            "id": "pyup.io-26153",
            "specs": [
                "<1.4.1"
            ],
            "v": "<1.4.1"
        },
        {
            "advisory": "tahoe-lafs before 1.8.3 has a flaw that would allow a person who knows a storage index of a file to delete shares of that file.",
            "cve": null,
            "id": "pyup.io-26154",
            "specs": [
                "<1.8.3"
            ],
            "v": "<1.8.3"
        },
        {
            "advisory": "tahoe-lafs before 1.9.1 has a flaw that would allow servers to cause undetected corruption when\r\n  retrieving the contents of mutable files (both SDMF and MDMF).",
            "cve": null,
            "id": "pyup.io-26155",
            "specs": [
                "<1.9.1"
            ],
            "v": "<1.9.1"
        }
    ],
    "telemeta": [
        {
            "advisory": "telemeta before 1.4.31 has a undisclosed security vulnerability in TELEMETA_EXPORT_CACHE_DIR.",
            "cve": null,
            "id": "pyup.io-26156",
            "specs": [
                "<1.4.31"
            ],
            "v": "<1.4.31"
        }
    ],
    "textract": [
        {
            "advisory": "textract before 1.5.0 doesn't properly uses subprocess.call.",
            "cve": null,
            "id": "pyup.io-26157",
            "specs": [
                "<1.5.0"
            ],
            "v": "<1.5.0"
        }
    ],
    "thorn": [
        {
            "advisory": "thorn before 1.1.0 has several security vulnerabilities: Now provides HMAC signing by default, No longer dispatches webhooks to internal networks, Now only dispatches to HTTP and HTTPS URLs by default, Now only dispatches to ports 80 and 443 by default, Adds recipient validators",
            "cve": null,
            "id": "pyup.io-26158",
            "specs": [
                "<1.1.0"
            ],
            "v": "<1.1.0"
        }
    ],
    "tiddlyweb": [
        {
            "advisory": "tiddlyweb before 1.2.18 allowed empty passwords to authenticate.",
            "cve": null,
            "id": "pyup.io-26159",
            "specs": [
                "<1.2.18"
            ],
            "v": "<1.2.18"
        }
    ],
    "tinydb": [
        {
            "advisory": "tinydb-serialization before 2.0.0 has an insecure implementation in ``ConcurrencyMiddleware``.",
            "cve": null,
            "id": "pyup.io-26160",
            "specs": [
                "<2.0.0"
            ],
            "v": "<2.0.0"
        }
    ],
    "tornado": [
        {
            "advisory": "CRLF injection vulnerability in the tornado.web.RequestHandler.set_header function in Tornado before 2.2.1 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via crafted input.",
            "cve": "CVE-2012-2374",
            "id": "pyup.io-26161",
            "specs": [
                "<2.2.1"
            ],
            "v": "<2.2.1"
        }
    ],
    "tracauthopenid": [
        {
            "advisory": "tracauthopenid before 0.4.4 does not properly authorize if no email address was returned via AX or SREG, the ``email_white_list`` config option was being ignored.  Now if ``email_white_list`` is set and no email address can be determined, authorization will be denied.",
            "cve": null,
            "id": "pyup.io-26162",
            "specs": [
                "<0.4.4"
            ],
            "v": "<0.4.4"
        }
    ],
    "tripleo-heat-templates": [
        {
            "advisory": "The TripleO Heat templates (tripleo-heat-templates), when deployed via the commandline interface, allow remote attackers to spoof OpenStack Networking metadata requests by leveraging knowledge of the default value of the NeutronMetadataProxySharedSecret parameter.",
            "cve": "CVE-2015-5303",
            "id": "pyup.io-26163",
            "specs": [
                "<0.8.10",
                "==1.0.0"
            ],
            "v": "<0.8.10,==1.0.0"
        },
        {
            "advisory": "The TripleO Heat templates (tripleo-heat-templates) do not properly order the Identity Service (keystone) before the OpenStack Object Storage (Swift) staticweb middleware in the swiftproxy pipeline when the staticweb middleware is enabled, which might allow remote attackers to obtain sensitive information from private containers via unspecified vectors.",
            "cve": "CVE-2015-5271",
            "id": "pyup.io-26164",
            "specs": [
                "<0.8.7"
            ],
            "v": "<0.8.7"
        }
    ],
    "tryton": [
        {
            "advisory": "model/modelstorage.py in the Tryton application framework (trytond) before 2.4.0 for Python does not properly restrict access to the Many2Many field in the relation model, which allows remote authenticated users to modify the privileges of arbitrary users via a (1) create, (2) write, (3) delete, or (4) copy rpc call.",
            "cve": "CVE-2012-0215",
            "id": "pyup.io-26165",
            "specs": [
                "<2.4.0"
            ],
            "v": "<2.4.0"
        }
    ],
    "trytond": [
        {
            "advisory": "model/modelstorage.py in the Tryton application framework (trytond) before 2.4.0 for Python does not properly restrict access to the Many2Many field in the relation model, which allows remote authenticated users to modify the privileges of arbitrary users via a (1) create, (2) write, (3) delete, or (4) copy rpc call.",
            "cve": "CVE-2012-0215",
            "id": "pyup.io-26166",
            "specs": [
                "<2.4.0"
            ],
            "v": "<2.4.0"
        }
    ],
    "tuf": [
        {
            "advisory": "tuf before 1.3 has a security issues with pip's use of temp build directories.",
            "cve": null,
            "id": "pyup.io-26167",
            "specs": [
                "<1.3"
            ],
            "v": "<1.3"
        }
    ],
    "tweepy": [
        {
            "advisory": "Tweepy does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate, related to use of the Python httplib library.",
            "cve": "CVE-2012-5825",
            "id": "pyup.io-26168",
            "specs": [
                "<3.0"
            ],
            "v": "<3.0"
        }
    ],
    "twilio": [
        {
            "advisory": "twilio before 3.5.0 is vulnerable to a timing attack vector in signature validation.",
            "cve": null,
            "id": "pyup.io-26169",
            "specs": [
                "<3.5.0"
            ],
            "v": "<3.5.0"
        }
    ],
    "urllib3": [
        {
            "advisory": "Users who are using urllib3 version 1.17 or 1.18 along with PyOpenSSL injection and OpenSSL 1.1.0 *must* upgrade to this version. This release fixes a vulnerability whereby urllib3 in the above configuration would silently fail to validate TLS certificates due to erroneously setting invalid flags in OpenSSL's ``SSL_CTX_set_verify`` function. These erroneous flags do not cause a problem in OpenSSL versions before 1.1.0, which interprets the presence of any flag as requesting certificate validation.",
            "cve": null,
            "id": "pyup.io-26170",
            "specs": [
                "==1.17",
                "==1.18"
            ],
            "v": "==1.17,==1.18"
        }
    ],
    "virtualenv": [
        {
            "advisory": "virtualenv.py in virtualenv before 1.5 allows local users to overwrite arbitrary files via a symlink attack on a certain file in /tmp/.",
            "cve": "CVE-2011-4617",
            "id": "pyup.io-26172",
            "specs": [
                "<1.5"
            ],
            "v": "<1.5"
        }
    ],
    "vnccollab.theme": [
        {
            "advisory": "vnccollab.theme before 1.5.2 has an undisclosed vulnerability in VNC Zimlet.",
            "cve": null,
            "id": "pyup.io-26173",
            "specs": [
                "<1.5.2"
            ],
            "v": "<1.5.2"
        }
    ],
    "waitress": [
        {
            "advisory": "waitress before 1.0.0 doesn't drop HTTP headers containing an underscore, possibly leading to security issues.",
            "cve": null,
            "id": "pyup.io-26174",
            "specs": [
                "<1.0.0"
            ],
            "v": "<1.0.0"
        }
    ],
    "werkzeug": [
        {
            "advisory": "werkzeug before 0.8 allowed newlines in the header datastructure, allowing header injection attacks.",
            "cve": null,
            "id": "pyup.io-26175",
            "specs": [
                "<0.8"
            ],
            "v": "<0.8"
        }
    ],
    "wpull": [
        {
            "advisory": "wpull before 0.1006.1 is leaking HTTP header fields when transitioning from HTTP to HTTPS.",
            "cve": null,
            "id": "pyup.io-26176",
            "specs": [
                "<0.1006.1"
            ],
            "v": "<0.1006.1"
        }
    ],
    "yaybu": [
        {
            "advisory": "yaybu before 0.1.14 doesn't set file system permissions before content is written.",
            "cve": null,
            "id": "pyup.io-26177",
            "specs": [
                "<0.1.14"
            ],
            "v": "<0.1.14"
        }
    ],
    "yubiauth": [
        {
            "advisory": "yubiauth before 0.2.3 is updating credentials in an insecure way.",
            "cve": null,
            "id": "pyup.io-26178",
            "specs": [
                "<0.2.3"
            ],
            "v": "<0.2.3"
        }
    ],
    "z3c.form": [
        {
            "advisory": "z3c.form before 2.4.2 has a security vulnerability in IBrowserRequest from IFormLayer. This prevents to mixin IBrowserRequest into non IBrowserRequest e.g. IJSONRPCRequest. This should be compatible since a browser request using z3c.form already provides IBrowserRequest and the IFormLayer is only a marker interface used as skin layer.",
            "cve": null,
            "id": "pyup.io-26179",
            "specs": [
                "<2.4.2"
            ],
            "v": "<2.4.2"
        }
    ],
    "zeep": [
        {
            "advisory": "zeep before 0.4.0 is using an insecure XML parser.",
            "cve": null,
            "id": "pyup.io-26180",
            "specs": [
                "<0.4.0"
            ],
            "v": "<0.4.0"
        }
    ],
    "ziirish": [
        {
            "advisory": "ziirish before 0.0.7.1 has some undisclosed security vulnerabilities.",
            "cve": null,
            "id": "pyup.io-26181",
            "specs": [
                "<0.0.7.1"
            ],
            "v": "<0.0.7.1"
        },
        {
            "advisory": "ziirish before 0.1.0 has some undisclosed security vulnerabilities.",
            "cve": null,
            "id": "pyup.io-26182",
            "specs": [
                "<0.1.0"
            ],
            "v": "<0.1.0"
        },
        {
            "advisory": "ziirish before 0.3.0 doesn't restrict files that can be sent by the agent.",
            "cve": null,
            "id": "pyup.io-26183",
            "specs": [
                "<0.3.0"
            ],
            "v": "<0.3.0"
        }
    ],
    "zodb": [
        {
            "advisory": "Race condition in ZEO/StorageServer.py in Zope Object Database (ZODB) before 3.10.0 allows remote attackers to cause a denial of service (daemon outage) by establishing and then immediately closing a TCP connection, leading to the accept function having an unexpected return value of None, an unexpected value of None for the address, or an ECONNABORTED, EAGAIN, or EWOULDBLOCK error, a related issue to CVE-2010-3492.",
            "cve": "CVE-2010-3495",
            "id": "pyup.io-26184",
            "specs": [
                "<3.10.0"
            ],
            "v": "<3.10.0"
        },
        {
            "advisory": "Unspecified vulnerability in Zope Object Database (ZODB) before 3.8.2, when certain Zope Enterprise Objects (ZEO) database sharing is enabled, allows remote attackers to execute arbitrary Python code via vectors involving the ZEO network protocol.",
            "cve": "CVE-2009-0668",
            "id": "pyup.io-33165",
            "specs": [
                "<3.8.2"
            ],
            "v": "<3.8.2"
        },
        {
            "advisory": "Zope Object Database (ZODB) before 3.8.2, when certain Zope Enterprise Objects (ZEO) database sharing is enabled, allows remote attackers to bypass authentication via vectors involving the ZEO network protocol.",
            "cve": "CVE-2009-0669",
            "id": "pyup.io-33166",
            "specs": [
                "<3.8.2"
            ],
            "v": "<3.8.2"
        },
        {
            "advisory": "Unspecified vulnerability in the Zope Enterprise Objects (ZEO) storage-server functionality in Zope Object Database (ZODB) 3.8 before 3.8.3 and 3.9.x before 3.9.0c2, when certain ZEO database sharing and blob support are enabled, allows remote authenticated users to read or delete arbitrary files via unknown vectors.",
            "cve": "CVE-2009-2701",
            "id": "pyup.io-33167",
            "specs": [
                ">=3.9,<3.9.0c2",
                ">=3.8,<3.8.3"
            ],
            "v": ">=3.9,<3.9.0c2,>=3.8,<3.8.3"
        }
    ],
    "zope": [
        {
            "advisory": "Zope before 2.13.19, as used in Plone before 4.2.3 and 4.3 before beta 1, does not reseed the pseudo-random number generator (PRNG), which makes it easier for remote attackers to guess the value via unspecified vectors.  NOTE: this issue was SPLIT from CVE-2012-5508 due to different vulnerability types (ADT2).",
            "cve": "CVE-2012-6661",
            "id": "pyup.io-26189",
            "specs": [
                "<2.13.19"
            ],
            "v": "<2.13.19"
        }
    ],
    "zope.html": [
        {
            "advisory": "Multiple directory traversal vulnerabilities in FCKeditor before 2.6.4.1 allow remote attackers to create executable files in arbitrary directories via directory traversal sequences in the input to unspecified connector modules, as exploited in the wild for remote code execution in July 2009, related to the file browser and the editor/filemanager/connectors/ directory.",
            "cve": "CVE-2009-2265",
            "id": "pyup.io-26190",
            "specs": [
                "<1.2"
            ],
            "v": "<1.2"
        }
    ],
    "zope2": [
        {
            "advisory": "ZServer in Zope 2.10.x before 2.10.12 and 2.11.x before 2.11.7 allows remote attackers to cause a denial of service (crash of worker threads) via vectors that trigger uncaught exceptions.",
            "cve": "CVE-2010-3198",
            "id": "pyup.io-26191",
            "specs": [
                "<2.11.7"
            ],
            "v": "<2.11.7"
        },
        {
            "advisory": "Unspecified vulnerability in (1) Zope 2.12.x before 2.12.19 and 2.13.x before 2.13.8, as used in Plone 4.x and other products, and (2) PloneHotfix20110720 for Plone 3.x allows attackers to gain privileges via unspecified vectors, related to a \"highly serious vulnerability.\" NOTE: this vulnerability exists because of an incorrect fix for CVE-2011-0720.",
            "cve": "CVE-2011-2528",
            "id": "pyup.io-26192",
            "specs": [
                "<2.12.19",
                ">=2.13,<2.13.8"
            ],
            "v": "<2.12.19,>=2.13,<2.13.8"
        },
        {
            "advisory": "The App.Undo.UndoSupport.get_request_var_or_attr function in Zope before 2.12.21 and 2.13.x before 2.13.11, as used in Plone before 4.2.3 and 4.3 before beta 1, allows remote authenticated users to gain access to restricted attributes via unspecified vectors.",
            "cve": "CVE-2012-5489",
            "id": "pyup.io-26193",
            "specs": [
                "<2.13.11",
                "<2.12.21"
            ],
            "v": "<2.13.11,<2.12.21"
        },
        {
            "advisory": "AccessControl/AuthEncoding.py in Zope before 2.13.19, as used in Plone before 4.2.3 and 4.3 before beta 1, allows remote attackers to obtain passwords via vectors involving timing discrepancies in password validation.",
            "cve": "CVE-2012-5507",
            "id": "pyup.io-33169",
            "specs": [
                "<2.13.19"
            ],
            "v": "<2.13.19"
        },
        {
            "advisory": "ZPublisher.HTTPRequest._scrubHeader in Zope 2 before 2.13.19, as used in Plone before 4.3 beta 1, allows remote attackers to inject arbitrary HTTP headers via a linefeed (LF) character.",
            "cve": "CVE-2012-5486",
            "id": "pyup.io-33168",
            "specs": [
                "<2.13.19"
            ],
            "v": "<2.13.19"
        },
        {
            "advisory": "Unspecified vulnerability in Zope 2.12.x and 2.13.x, as used in Plone 4.0.x through 4.0.9, 4.1, and 4.2 through 4.2a2, allows remote attackers to execute arbitrary commands via vectors related to the p_ class in OFS/misc_.py and the use of Python modules.",
            "cve": "CVE-2011-3587",
            "id": "pyup.io-26196",
            "specs": [
                "==2.13,==2.12"
            ],
            "v": "==2.13,==2.12"
        },
        {
            "advisory": "Cross-site scripting (XSS) vulnerability in Zope 2.8.x before 2.8.12, 2.9.x before 2.9.12, 2.10.x before 2.10.11, 2.11.x before 2.11.6, and 2.12.x before 2.12.3 allows remote attackers to inject arbitrary web script or HTML via vectors related to error messages.",
            "cve": "CVE-2010-1104",
            "id": "pyup.io-26197",
            "specs": [
                ">=2.12,<2.12.3",
                ">=2.10,<2.10.11",
                ">=2.8,<2.8.12",
                ">=2.9,<2.9.12"
            ],
            "v": ">=2.12,<2.12.3,>=2.10,<2.10.11,>=2.8,<2.8.12,>=2.9,<2.9.12"
        }
    ],
    "zopeskel": [
        {
            "advisory": "zopeskel before <2.11 uses an insecure transitive dependency (Zope before 2.9.10).",
            "cve": null,
            "id": "pyup.io-26198",
            "specs": [
                "<2.11"
            ],
            "v": "<2.11"
        }
    ],
    "zwiki": [
        {
            "advisory": "zwiki before <0.37 has a cross-site scripting vulnerability in standard error messages.",
            "cve": null,
            "id": "pyup.io-26199",
            "specs": [
                "<0.37"
            ],
            "v": "<0.37"
        },
        {
            "advisory": "zwiki before <0.59 has a vulnerability in a comment form.",
            "cve": null,
            "id": "pyup.io-26200",
            "specs": [
                "<0.59"
            ],
            "v": "<0.59"
        }
    ]
}